// Generated by dedot cli
import type { GenericSubstrateApi } from '@dedot/types';
import type {
  ConstructorCallOptions,
  ContractInstantiateResult,
  GenericConstructorCallResult,
  SolGenericConstructorQuery,
  SolGenericConstructorQueryCall,
} from '../../../../packages/contracts/src/index.js';
import type { NameInput, SymbolInput } from './types.js';

export interface ConstructorQuery<ChainApi extends GenericSubstrateApi> extends SolGenericConstructorQuery<ChainApi> {
  /**
   * @param {number} supply
   * @param {NameInput} name
   * @param {SymbolInput} symbol
   * @param {number} decimals
   * @param {ConstructorCallOptions} options
   **/
  initialize: SolGenericConstructorQueryCall<
    ChainApi,
    (
      supply: number,
      name: NameInput,
      symbol: SymbolInput,
      decimals: number,
      options?: ConstructorCallOptions,
    ) => Promise<GenericConstructorCallResult<[], ContractInstantiateResult<ChainApi>>>
  >;
}
