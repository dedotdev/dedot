// Generated by dedot cli

import type {
  ContractSubmittableExtrinsic,
  ContractTxOptions,
  GenericContractTx,
  GenericContractTxCall,
  MetadataType,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';

export interface ContractTx<ChainApi extends GenericSubstrateApi, Type extends MetadataType>
  extends GenericContractTx<ChainApi, Type> {
  /**
   * @param {string} spender
   * @param {bigint} value
   * @param {ContractTxOptions} options
   **/
  approve: GenericContractTxCall<
    ChainApi,
    Type,
    (spender: string, value: bigint, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   * @param {string} spender
   * @param {bigint} deltaValue
   * @param {ContractTxOptions} options
   **/
  decreaseAllowance: GenericContractTxCall<
    ChainApi,
    Type,
    (spender: string, deltaValue: bigint, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   * @param {string} spender
   * @param {bigint} deltaValue
   * @param {ContractTxOptions} options
   **/
  increaseAllowance: GenericContractTxCall<
    ChainApi,
    Type,
    (spender: string, deltaValue: bigint, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   * @param {string} to
   * @param {bigint} value
   * @param {number[]} data
   * @param {ContractTxOptions} options
   **/
  transfer: GenericContractTxCall<
    ChainApi,
    Type,
    (to: string, value: bigint, data: number[], options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   * @param {string} from
   * @param {string} to
   * @param {bigint} value
   * @param {number[]} data
   * @param {ContractTxOptions} options
   **/
  transferFrom: GenericContractTxCall<
    ChainApi,
    Type,
    (
      from: string,
      to: string,
      value: bigint,
      data: number[],
      options?: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;
}
