// Generated by dedot cli
import type { SubstrateApi } from 'dedot/chaintypes';
import type { InkGenericContractApi, WithLazyStorage } from 'dedot/contracts';
import type { RpcVersion, GenericSubstrateApi } from 'dedot/types';
import { ConstructorQuery } from './constructor-query.js';
import { ConstructorTx } from './constructor-tx.js';
import { ContractEvents } from './events.js';
import { ContractQuery } from './query.js';
import { ContractTx } from './tx.js';
import type { InkPrimitivesLangError, Psp22Token } from './types.js';

export * from './types.js';

/**
 * @name: Psp22v6ContractApi
 * @contractName: psp22
 * @contractVersion: 3.0.0
 * @authors: Cardinal
 * @language: ink! 6.0.0-alpha.3
 **/
export interface Psp22v6ContractApi<ChainApi extends GenericSubstrateApi = SubstrateApi>
  extends InkGenericContractApi<ChainApi> {
  metadataType: 'ink';
  query: ContractQuery<ChainApi, 'ink'>;
  tx: ContractTx<ChainApi, 'ink'>;
  constructorQuery: ConstructorQuery<ChainApi, 'ink'>;
  constructorTx: ConstructorTx<ChainApi, Psp22v6ContractApi, 'ink'>;
  events: ContractEvents<ChainApi, 'ink'>;
  storage: {
    root(): Promise<Psp22Token>;
    lazy(): WithLazyStorage<Psp22Token>;
  };

  types: {
    ChainApi: ChainApi;
    RootStorage: Psp22Token;
    LazyStorage: WithLazyStorage<Psp22Token>;
    LangError: InkPrimitivesLangError;
  };
}
