// Generated by dedot cli
import type { SubstrateApi } from 'dedot/chaintypes';
import type { InkGenericContractApi, WithLazyStorage } from 'dedot/contracts';
import type { RpcVersion, GenericSubstrateApi } from 'dedot/types';
import { ConstructorQuery } from './constructor-query.js';
import { ConstructorTx } from './constructor-tx.js';
import { ContractEvents } from './events.js';
import { ContractQuery } from './query.js';
import { ContractTx } from './tx.js';
import type { Erc20, InkPrimitivesLangError } from './types.js';

export * from './types.js';

/**
 * @name: Erc20ContractApi
 * @contractName: erc20
 * @contractVersion: 6.0.0-alpha.4
 * @authors: Use Ink <ink@use.ink>
 * @language: ink! 6.0.0-alpha.4
 **/
export interface Erc20ContractApi<ChainApi extends GenericSubstrateApi = SubstrateApi>
  extends InkGenericContractApi<ChainApi> {
  metadataType: 'ink';
  query: ContractQuery<ChainApi, 'ink'>;
  tx: ContractTx<ChainApi, 'ink'>;
  constructorQuery: ConstructorQuery<ChainApi, 'ink'>;
  constructorTx: ConstructorTx<ChainApi, Erc20ContractApi, 'ink'>;
  events: ContractEvents<ChainApi, 'ink'>;
  storage: {
    root(): Promise<Erc20>;
    lazy(): WithLazyStorage<Erc20>;
  };

  types: {
    ChainApi: ChainApi;
    RootStorage: Erc20;
    LazyStorage: WithLazyStorage<Erc20>;
    LangError: InkPrimitivesLangError;
  };
}
