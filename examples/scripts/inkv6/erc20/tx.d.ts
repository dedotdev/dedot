// Generated by dedot cli

import type { H160, U256 } from 'dedot/codecs';
import type {
  ContractSubmittableExtrinsic,
  ContractTxOptions,
  GenericContractTx,
  GenericContractTxCall,
  MetadataType,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';

export interface ContractTx<ChainApi extends GenericSubstrateApi, Type extends MetadataType>
  extends GenericContractTx<ChainApi, Type> {
  /**
   * Transfers `value` amount of tokens from the caller's account to account `to`.
   *
   * On success a `Transfer` event is emitted.
   *
   * # Errors
   *
   * Returns `InsufficientBalance` error if there are not enough tokens on
   * the caller's account balance.
   *
   * @param {H160} to
   * @param {U256} value
   * @param {ContractTxOptions} options
   *
   * @selector 0x84a15da1
   **/
  transfer: GenericContractTxCall<
    ChainApi,
    (to: H160, value: U256, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>,
    Type
  >;

  /**
   * Allows `spender` to withdraw from the caller's account multiple times, up to
   * the `value` amount.
   *
   * If this function is called again it overwrites the current allowance with
   * `value`.
   *
   * An `Approval` event is emitted.
   *
   * @param {H160} spender
   * @param {U256} value
   * @param {ContractTxOptions} options
   *
   * @selector 0x681266a0
   **/
  approve: GenericContractTxCall<
    ChainApi,
    (spender: H160, value: U256, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>,
    Type
  >;

  /**
   * Transfers `value` tokens on the behalf of `from` to the account `to`.
   *
   * This can be used to allow a contract to transfer tokens on ones behalf and/or
   * to charge fees in sub-currencies, for example.
   *
   * On success a `Transfer` event is emitted.
   *
   * # Errors
   *
   * Returns `InsufficientAllowance` error if there are not enough tokens allowed
   * for the caller to withdraw from `from`.
   *
   * Returns `InsufficientBalance` error if there are not enough tokens on
   * the account balance of `from`.
   *
   * @param {H160} from
   * @param {H160} to
   * @param {U256} value
   * @param {ContractTxOptions} options
   *
   * @selector 0x0b396f18
   **/
  transferFrom: GenericContractTxCall<
    ChainApi,
    (from: H160, to: H160, value: U256, options?: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>,
    Type
  >;
}
