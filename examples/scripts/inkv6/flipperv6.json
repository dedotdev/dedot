{
  "source": {
    "hash": "0x2b25836c66382bfad67c98a74ce2464c398c75d732475933939dbadc7445d794",
    "language": "ink! 6.0.0-alpha",
    "compiler": "rustc 1.88.0",
    "contract_binary": "0x50564d0000ef06000000000000010600c00040a000045505000000000e00000019000000240000002f00000063616c6c5f646174615f636f70796765745f73746f726167657365616c5f72657475726e7365745f73746f7261676576616c75655f7472616e7366657272656405110283870463616c6c84e2066465706c6f7906866c11028593ad01b902ba02bb02e202070368039803b60319046704d804f3042a0544057a058b056472531910bb008d2c84c407c842056487642aae52107c7b95770178ab95aa01ac5af6c8480cc949068469f884cb07c8950a510b19017b197b16087b1c1033054911189ab608951918846701d4b90351070e8217107c77783733050101846702510714821710c857077f77c8530979979555020184670497b603510711821710c857078177c853037a37018219188d67847038c9b808958308642701c8470c95cb08c84308d06905aeab198289953308cf0908d458087bc895770828e1642a28693306821b1084b70449111851070c81877a17183306040184b702510717c84607c837077f77951818d4680879879566020184b701510714c86404c843037c37951818d46808788701821718cf0707d457077bc78216088219c89b088469072809c89b0884690701c8a909ae9a107c8795880178a795aa01ac9af66427821030821528821620951138320064c764cbaea5d282789577087b58955508aea5c528f39511f07b1008648a78170795180733090164a733002228d0039511f07b100848110495180433090433002228bb039511a87b10507b15487b16403305000002641633070000023300020a0401805210805814805918805a1c8053805c04805708805b0c49112049112849113049113897aa2097882097bb2097cc20d4a909d42808951220d4b707d43c0a7b1a7b17087b18107b1918330704017c68017c69027c6a037c6b97880897991097aa18d4b8087c6b047c6c05d4a9097c6a067c650797cc08d4cb0b97aa10975518d45a0a956608d49808d4ba0a97aa20d4a8087b289522089577ff5207b4951920330705330805019588ff51080f829a959908510af5330704018210508215488216409511583200827808510814827a7ca9958bff95aa017b7a7b7b0828053309019597ff8e77957a01939a330702db8a0732003300049511f87b1033080000021f0300000233090233070a02000000009511c87b10307b15287b16207b1733070000027b1708491110004049111895170850100a9dfe821710821518ac574b821608c95707c856087b18087b1710491118951808821750100c5ffe821810821718ac7826821a08975920989920977720987b20330764680a03821030821528821620951138320000838852080f330a330901330b00000228163308000002330a013b0a000002c8a80b330902019511f87b10330800000278ba0a020082191052090b33080133070a0200835501ac590400330800000233070a02009511c87b10307b15287b1620501010fcfd8477ff00521705b000330933050000023308004033070000023300120a018057977930977828847aff0098993898883895abd1987718510b2095aa9d520a799599c652097395885bff52086c9577af5207663306281a95997aff52095b9588a5520855957727ff52074e330601017b1508491110004049111895170850101466fd821710821518ac572d7b16821808c957069759207a1608c88505989920951b083307645a0a0101801808ac86098377510711000033080133070133000828defe7b15087b181095170850101611fe8218108477ff009579fe8899018e88d49808977a081407010000000d000000da8a078478015208c084780003958800fe5108b58477000182185108308e773300069511d87b10207b15183308000002330500401e030000027b187b150849111001641833000e2894fc887701501018e9fd330833073300082855fe9511d87b10207b15187b161050101aa1fc8477ff0052170547330933050000023308004095560433070000020a0139070000027b16491108fc3f52479bae9d5e16641750101c4efd8477ff005217021133080133070133000828f9fd0050101e7dfd285bfd9511e87b10107b15087b166475827710c89706ac7630825a08ac6a2a825ac8a7073300209511c87b10307b15287b16202889fa7b56108210108215088216951118320000821008951110320085924a29499244494992a432494a9924294d499a242949a94a92924952522649499394929249292949aa949292929424499224098534494a9224499224294926294992244992244949924c4a32494a2a2935a5a4a410529f2485842424499224852449922a495a4a28242453a8496a32d42409110a117249244992249254248964421292942449aa49394992844452124092884429494284122509952449882844c2a110284424c99024952429499224294d0200",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "6.0.0-alpha.1",
      "rust_toolchain": "stable-aarch64-apple-darwin"
    }
  },
  "contract": { "name": "flipper6", "version": "0.1.0", "authors": ["[your_name] <[your_email]>"] },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [{ "label": "init_value", "type": { "displayName": ["bool"], "type": 0 } }],
        "default": false,
        "docs": ["Constructor that initializes the `bool` value to the given `init_value`."],
        "label": "new",
        "payable": false,
        "returnType": { "displayName": ["ink_primitives", "ConstructorResult"], "type": 2 },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": { "displayName": ["AccountId"], "type": 6 },
      "balance": { "displayName": ["Balance"], "type": 9 },
      "blockNumber": { "displayName": ["BlockNumber"], "type": 12 },
      "hash": { "displayName": ["Hash"], "type": 10 },
      "nativeToEthRatio": 100000000,
      "staticBufferSize": 16384,
      "timestamp": { "displayName": ["Timestamp"], "type": 11 }
    },
    "events": [],
    "lang_error": { "displayName": ["ink", "LangError"], "type": 4 },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " A message that can be called on instantiated contracts.",
          " This one flips the value of the stored `bool` from `true`",
          " to `false` and vice versa."
        ],
        "label": "flip",
        "mutates": true,
        "payable": false,
        "returnType": { "displayName": ["ink", "MessageResult"], "type": 2 },
        "selector": "0x633aa551"
      },
      {
        "args": [],
        "default": false,
        "docs": [" Simply returns the current value of our `bool`."],
        "label": "get",
        "mutates": false,
        "payable": false,
        "returnType": { "displayName": ["ink", "MessageResult"], "type": 5 },
        "selector": "0x2f865bd9"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [{ "layout": { "leaf": { "key": "0x00000000", "ty": 0 } }, "name": "value" }],
          "name": "Flipper6"
        }
      },
      "root_key": "0x00000000",
      "ty": 1
    }
  },
  "types": [
    { "id": 0, "type": { "def": { "primitive": "bool" } } },
    {
      "id": 1,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "value",
                "type": 0,
                "typeName": "<bool as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<2137511608u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": ["flipper6", "flipper6", "Flipper6"]
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "variant": {
            "variants": [
              { "fields": [{ "type": 3 }], "index": 0, "name": "Ok" },
              { "fields": [{ "type": 4 }], "index": 1, "name": "Err" }
            ]
          }
        },
        "params": [
          { "name": "T", "type": 3 },
          { "name": "E", "type": 4 }
        ],
        "path": ["Result"]
      }
    },
    { "id": 3, "type": { "def": { "tuple": [] } } },
    {
      "id": 4,
      "type": {
        "def": { "variant": { "variants": [{ "index": 1, "name": "CouldNotReadInput" }] } },
        "path": ["ink_primitives", "LangError"]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "variant": {
            "variants": [
              { "fields": [{ "type": 0 }], "index": 0, "name": "Ok" },
              { "fields": [{ "type": 4 }], "index": 1, "name": "Err" }
            ]
          }
        },
        "params": [
          { "name": "T", "type": 0 },
          { "name": "E", "type": 4 }
        ],
        "path": ["Result"]
      }
    },
    {
      "id": 6,
      "type": {
        "def": { "composite": { "fields": [{ "type": 7, "typeName": "[u8; 32]" }] } },
        "path": ["ink_primitives", "types", "AccountId"]
      }
    },
    { "id": 7, "type": { "def": { "array": { "len": 32, "type": 8 } } } },
    { "id": 8, "type": { "def": { "primitive": "u8" } } },
    { "id": 9, "type": { "def": { "primitive": "u128" } } },
    {
      "id": 10,
      "type": {
        "def": { "composite": { "fields": [{ "type": 7, "typeName": "[u8; 32]" }] } },
        "path": ["ink_primitives", "types", "Hash"]
      }
    },
    { "id": 11, "type": { "def": { "primitive": "u64" } } },
    { "id": 12, "type": { "def": { "primitive": "u32" } } }
  ],
  "version": 6
}
