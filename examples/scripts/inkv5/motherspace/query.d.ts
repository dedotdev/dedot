// Generated by dedot cli

import type { AccountId32, AccountId32Like, FixedBytes, Hash, Result } from 'dedot/codecs';
import type {
  ContractCallOptions,
  ContractCallResult,
  GenericContractCallResult,
  GenericContractQuery,
  GenericContractQueryCall,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';
import type { MotherspaceError, MotherspacePagination, MotherspaceSpaceConfig, MotherspaceSpaceInfo } from './types.js';

export interface ContractQuery<ChainApi extends GenericSubstrateApi> extends GenericContractQuery<ChainApi> {
  /**
   *
   * @param {Hash} newSpaceCode
   * @param {ContractCallOptions} options
   *
   * @selector 0x5d56dce0
   **/
  upgradeSpaceCode: GenericContractQueryCall<
    ChainApi,
    (
      newSpaceCode: Hash,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xb8e3c2b5
   **/
  latestSpaceCode: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<Hash, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {MotherspaceSpaceInfo} info
   * @param {MotherspaceSpaceConfig | undefined} config
   * @param {AccountId32Like | undefined} owner
   * @param {Array<FixedBytes<4>> | undefined} plugins
   * @param {ContractCallOptions} options
   *
   * @selector 0x02cb5e5e
   **/
  deployNewSpace: GenericContractQueryCall<
    ChainApi,
    (
      info: MotherspaceSpaceInfo,
      config: MotherspaceSpaceConfig | undefined,
      owner: AccountId32Like | undefined,
      plugins: Array<FixedBytes<4>> | undefined,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[AccountId32, Array<[FixedBytes<4>, AccountId32]>], MotherspaceError>,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   *
   * @param {number} from
   * @param {number} perPage
   * @param {ContractCallOptions} options
   *
   * @selector 0x5f88ade4
   **/
  listSpaces: GenericContractQueryCall<
    ChainApi,
    (
      from: number,
      perPage: number,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<MotherspacePagination, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {AccountId32Like | undefined} who
   * @param {ContractCallOptions} options
   *
   * @selector 0x062bd130
   **/
  memberSpaces: GenericContractQueryCall<
    ChainApi,
    (
      who: AccountId32Like | undefined,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Array<AccountId32>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {AccountId32Like} who
   * @param {ContractCallOptions} options
   *
   * @selector 0x71a26402
   **/
  addSpaceMember: GenericContractQueryCall<
    ChainApi,
    (
      who: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {AccountId32Like} who
   * @param {ContractCallOptions} options
   *
   * @selector 0xd474e856
   **/
  removeSpaceMember: GenericContractQueryCall<
    ChainApi,
    (
      who: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x12deaf26
   **/
  spacesCount: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<number, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {AccountId32Like} spaceId
   * @param {ContractCallOptions} options
   *
   * @selector 0xa9ae76ed
   **/
  isDeployedSpace: GenericContractQueryCall<
    ChainApi,
    (
      spaceId: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<boolean, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x30f973be
   **/
  pluginsCount: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<number, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {FixedBytes<4>} pluginId
   * @param {AccountId32Like} launcherAddress
   * @param {ContractCallOptions} options
   *
   * @selector 0x28859bb4
   **/
  registerPluginLauncher: GenericContractQueryCall<
    ChainApi,
    (
      pluginId: FixedBytes<4>,
      launcherAddress: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<number, MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   * Update plugin launcher address or remove it
   * For the sake of simplicity, get full list of plugin launcher
   * We'll need to add pagination later
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xed3a62d8
   **/
  pluginLaunchers: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Array<[FixedBytes<4>, AccountId32]>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {FixedBytes<4>} pluginId
   * @param {ContractCallOptions} options
   *
   * @selector 0xfd3ed8a2
   **/
  latestPluginCode: GenericContractQueryCall<
    ChainApi,
    (
      pluginId: FixedBytes<4>,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<Hash, MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {FixedBytes<4>} pluginId
   * @param {Hash} newCodeHash
   * @param {ContractCallOptions} options
   *
   * @selector 0xb13942d9
   **/
  upgradePluginCode: GenericContractQueryCall<
    ChainApi,
    (
      pluginId: FixedBytes<4>,
      newCodeHash: Hash,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<number, MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   * Install plugins
   *
   * @param {AccountId32Like} spaceId
   * @param {Array<FixedBytes<4>>} plugins
   * @param {ContractCallOptions} options
   *
   * @selector 0xe5b8ee4b
   **/
  installPlugins: GenericContractQueryCall<
    ChainApi,
    (
      spaceId: AccountId32Like,
      plugins: Array<FixedBytes<4>>,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<Array<[FixedBytes<4>, AccountId32]>, MotherspaceError>,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xeef02b02
   **/
  ownerId: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<AccountId32, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {AccountId32Like} who
   * @param {ContractCallOptions} options
   *
   * @selector 0x107e33ea
   **/
  transferOwnership: GenericContractQueryCall<
    ChainApi,
    (
      who: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], MotherspaceError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {Hash} codeHash
   * @param {ContractCallOptions} options
   *
   * @selector 0x1700ae80
   **/
  upgradeableSetCodeHash: GenericContractQueryCall<
    ChainApi,
    (
      codeHash: Hash,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<[], ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xbaa5b034
   **/
  upgradeableCodeHash: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<Hash, ContractCallResult<ChainApi>>>
  >;
}
