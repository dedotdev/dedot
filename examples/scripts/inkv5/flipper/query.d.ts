// Generated by dedot cli

import type { AccountId32 } from 'dedot/codecs';
import type {
  ContractCallOptions,
  ContractCallResult,
  GenericContractCallResult,
  GenericContractQuery,
  GenericContractQueryCall,
  MetadataType,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';

export interface ContractQuery<ChainApi extends GenericSubstrateApi, Type extends MetadataType>
  extends GenericContractQuery<ChainApi, Type> {
  /**
   * A message that can be called on instantiated contracts.
   * This one flips the value of the stored `bool` from `true`
   * to `false` and vice versa.
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x633aa551
   **/
  flip: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<[], ContractCallResult<ChainApi>>>,
    Type
  >;

  /**
   * Simply returns the current value of our `bool`.
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x2f865bd9
   **/
  get: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<boolean, ContractCallResult<ChainApi>>>,
    Type
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xfeaea4fa
   **/
  owner: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<AccountId32, ContractCallResult<ChainApi>>>,
    Type
  >;
}
