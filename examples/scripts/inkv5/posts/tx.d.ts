// Generated by dedot cli

import type { Hash } from 'dedot/codecs';
import type {
  ContractSubmittableExtrinsic,
  ContractTxOptions,
  GenericContractTx,
  GenericContractTxCall,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';
import type { PostsPostContent, PostsPostPerm } from './types.js';

export interface ContractTx<ChainApi extends GenericSubstrateApi> extends GenericContractTx<ChainApi> {
  /**
   *
   * @param {PostsPostContent} content
   * @param {ContractTxOptions} options
   *
   * @selector 0xdda55cf2
   **/
  newPost: GenericContractTxCall<
    ChainApi,
    (content: PostsPostContent, options: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} id
   * @param {PostsPostContent} content
   * @param {ContractTxOptions} options
   *
   * @selector 0x7014aff6
   **/
  updatePost: GenericContractTxCall<
    ChainApi,
    (id: number, content: PostsPostContent, options: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {PostsPostPerm} newPerm
   * @param {ContractTxOptions} options
   *
   * @selector 0x86401b75
   **/
  updatePerm: GenericContractTxCall<
    ChainApi,
    (newPerm: PostsPostPerm, options: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   * Upgradeable
   *
   * @param {Hash} codeHash
   * @param {ContractTxOptions} options
   *
   * @selector 0x9e5c5758
   **/
  setCodeHash: GenericContractTxCall<
    ChainApi,
    (codeHash: Hash, options: ContractTxOptions) => ContractSubmittableExtrinsic<ChainApi>
  >;
}
