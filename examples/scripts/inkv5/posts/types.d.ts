// Generated by dedot cli

import type { AccountId32 } from 'dedot/codecs';

export type InkStorageLazy = {};

export type InkStorageTraitsImplsResolverKey = {};

export type InkStorageTraitsImplsAutoKey = {};

export type InkStorageTraitsImplsManualKey = {};

export type InkStorageLazyMapping = {};

export type PostsPost = {
  content: PostsPostContent;
  author: AccountId32;
  createdAt: bigint;
  updatedAt?: bigint | undefined;
};

export type PostsPostContent = { type: 'Raw'; value: string } | { type: 'IpfsCid'; value: string };

export type PostsPostPerm = 'SpaceOwner' | 'ActiveMember';

export type Posts = {
  spaceId: { get(): Promise<AccountId32> };
  launcherId: { get(): Promise<AccountId32> };
  posts: { get(arg: number): Promise<PostsPost> };
  postsNonce: { get(): Promise<number> };
  postPerm: { get(): Promise<PostsPostPerm> };
};

export type InkPrimitivesLangError = 'CouldNotReadInput';

export type PostsError =
  | { type: 'Custom'; value: string }
  | { type: 'UnAuthorized' }
  | { type: 'PostNotExisted' }
  | { type: 'NotActiveMember' }
  | { type: 'NotSpaceOwner' };

export type PostsOrdering = 'Descending' | 'Ascending';

export type PostsPagination = {
  items: Array<PostsPostRecord>;
  from: number;
  perPage: number;
  hasNextPage: boolean;
  total: number;
};

export type PostsPostRecord = { postId: number; post: PostsPost };

export type InkEnvNoChainExtension = null;
