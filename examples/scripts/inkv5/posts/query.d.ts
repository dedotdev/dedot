// Generated by dedot cli

import type { AccountId32, Hash, Result } from 'dedot/codecs';
import type {
  ContractCallOptions,
  ContractCallResult,
  GenericContractCallResult,
  GenericContractQuery,
  GenericContractQueryCall,
} from 'dedot/contracts';
import type { GenericSubstrateApi } from 'dedot/types';
import type {
  PostsError,
  PostsOrdering,
  PostsPagination,
  PostsPost,
  PostsPostContent,
  PostsPostPerm,
} from './types.js';

export interface ContractQuery<ChainApi extends GenericSubstrateApi> extends GenericContractQuery<ChainApi> {
  /**
   *
   * @param {PostsPostContent} content
   * @param {ContractCallOptions} options
   *
   * @selector 0xdda55cf2
   **/
  newPost: GenericContractQueryCall<
    ChainApi,
    (
      content: PostsPostContent,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<number, PostsError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {PostsPostContent} content
   * @param {ContractCallOptions} options
   *
   * @selector 0x7014aff6
   **/
  updatePost: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      content: PostsPostContent,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PostsError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} from
   * @param {number} perPage
   * @param {PostsOrdering} ordering
   * @param {ContractCallOptions} options
   *
   * @selector 0x9523bc9b
   **/
  listPosts: GenericContractQueryCall<
    ChainApi,
    (
      from: number,
      perPage: number,
      ordering: PostsOrdering,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<PostsPagination, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0xcc4bbab7
   **/
  postById: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<PostsPost | undefined, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {Array<number>} ids
   * @param {ContractCallOptions} options
   *
   * @selector 0xfdc92818
   **/
  postsByIds: GenericContractQueryCall<
    ChainApi,
    (
      ids: Array<number>,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Array<[number, PostsPost | undefined]>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xb0e11074
   **/
  postPerm: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<PostsPostPerm, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {PostsPostPerm} newPerm
   * @param {ContractCallOptions} options
   *
   * @selector 0x86401b75
   **/
  updatePerm: GenericContractQueryCall<
    ChainApi,
    (
      newPerm: PostsPostPerm,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PostsError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x0a76d095
   **/
  postsCount: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<number, ContractCallResult<ChainApi>>>
  >;

  /**
   * TODO list_posts
   * Get space id
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xe1b64803
   **/
  spaceId: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<AccountId32, ContractCallResult<ChainApi>>>
  >;

  /**
   * Get launcher id
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x80306c84
   **/
  launcherId: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<AccountId32, ContractCallResult<ChainApi>>>
  >;

  /**
   * Upgradeable
   *
   * @param {Hash} codeHash
   * @param {ContractCallOptions} options
   *
   * @selector 0x9e5c5758
   **/
  setCodeHash: GenericContractQueryCall<
    ChainApi,
    (
      codeHash: Hash,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PostsError>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xbd69cea7
   **/
  codeHash: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<Hash, ContractCallResult<ChainApi>>>
  >;
}
