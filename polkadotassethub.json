{
  "magicNumber": 1635018093,
  "metadataVersioned": {
    "tag": "V15",
    "value": {
      "types": [
        {
          "id": 0,
          "path": ["sp_core", "crypto", "AccountId32"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 1,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 32,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 2,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "u8"
            }
          },
          "docs": []
        },
        {
          "id": 3,
          "path": ["frame_system", "AccountInfo"],
          "params": [
            {
              "name": "Nonce",
              "typeId": 4
            },
            {
              "name": "AccountData",
              "typeId": 5
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "nonce",
                  "typeId": 4,
                  "typeName": "Nonce",
                  "docs": []
                },
                {
                  "name": "consumers",
                  "typeId": 4,
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "providers",
                  "typeId": 4,
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "sufficients",
                  "typeId": 4,
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 5,
                  "typeName": "AccountData",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 4,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "u32"
            }
          },
          "docs": []
        },
        {
          "id": 5,
          "path": ["pallet_balances", "types", "AccountData"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "free",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "frozen",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "flags",
                  "typeId": 7,
                  "typeName": "ExtraFlags",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 6,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "u128"
            }
          },
          "docs": []
        },
        {
          "id": 7,
          "path": ["pallet_balances", "types", "ExtraFlags"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 6,
                  "typeName": "u128",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 8,
          "path": ["frame_support", "dispatch", "PerDispatchClass"],
          "params": [
            {
              "name": "T",
              "typeId": 9
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "normal",
                  "typeId": 9,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "typeId": 9,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "typeId": 9,
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 9,
          "path": ["sp_weights", "weight_v2", "Weight"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "ref_time",
                  "typeId": 10,
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "proof_size",
                  "typeId": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 10,
          "path": [],
          "params": [],
          "type": {
            "tag": "Compact",
            "value": {
              "typeParam": 11
            }
          },
          "docs": []
        },
        {
          "id": 11,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "u64"
            }
          },
          "docs": []
        },
        {
          "id": 12,
          "path": ["primitive_types", "H256"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 13,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 14,
          "path": ["sp_runtime", "generic", "digest", "Digest"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "logs",
                  "typeId": 15,
                  "typeName": "Vec<DigestItem>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 15,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 16
            }
          },
          "docs": []
        },
        {
          "id": 16,
          "path": ["sp_runtime", "generic", "digest", "DigestItem"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "PreRuntime",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Consensus",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Seal",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Other",
                  "fields": [
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "RuntimeEnvironmentUpdated",
                  "fields": [],
                  "index": 8,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 17,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 4,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 18,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 19
            }
          },
          "docs": []
        },
        {
          "id": 19,
          "path": ["frame_system", "EventRecord"],
          "params": [
            {
              "name": "E",
              "typeId": 20
            },
            {
              "name": "T",
              "typeId": 12
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "phase",
                  "typeId": 124,
                  "typeName": "Phase",
                  "docs": []
                },
                {
                  "name": "event",
                  "typeId": 20,
                  "typeName": "E",
                  "docs": []
                },
                {
                  "name": "topics",
                  "typeId": 125,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 20,
          "path": ["asset_hub_polkadot_runtime", "RuntimeEvent"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "typeId": 21,
                      "typeName": "frame_system::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ParachainSystem",
                  "fields": [
                    {
                      "typeId": 30,
                      "typeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "typeId": 32,
                      "typeName": "pallet_balances::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "TransactionPayment",
                  "fields": [
                    {
                      "typeId": 34,
                      "typeName": "pallet_transaction_payment::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "AssetTxPayment",
                  "fields": [
                    {
                      "typeId": 35,
                      "typeName": "pallet_asset_tx_payment::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "CollatorSelection",
                  "fields": [
                    {
                      "typeId": 37,
                      "typeName": "pallet_collator_selection::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "typeId": 39,
                      "typeName": "pallet_session::Event",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "XcmpQueue",
                  "fields": [
                    {
                      "typeId": 40,
                      "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "typeId": 43,
                      "typeName": "pallet_xcm::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "CumulusXcm",
                  "fields": [
                    {
                      "typeId": 99,
                      "typeName": "cumulus_pallet_xcm::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "DmpQueue",
                  "fields": [
                    {
                      "typeId": 100,
                      "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "Utility",
                  "fields": [
                    {
                      "typeId": 101,
                      "typeName": "pallet_utility::Event",
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "Multisig",
                  "fields": [
                    {
                      "typeId": 104,
                      "typeName": "pallet_multisig::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "Proxy",
                  "fields": [
                    {
                      "typeId": 106,
                      "typeName": "pallet_proxy::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "typeId": 109,
                      "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance1>",
                      "docs": []
                    }
                  ],
                  "index": 50,
                  "docs": []
                },
                {
                  "name": "Uniques",
                  "fields": [
                    {
                      "typeId": 110,
                      "typeName": "pallet_uniques::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 51,
                  "docs": []
                },
                {
                  "name": "Nfts",
                  "fields": [
                    {
                      "typeId": 116,
                      "typeName": "pallet_nfts::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 52,
                  "docs": []
                },
                {
                  "name": "ForeignAssets",
                  "fields": [
                    {
                      "typeId": 123,
                      "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance2>",
                      "docs": []
                    }
                  ],
                  "index": 53,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 21,
          "path": ["frame_system", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ExtrinsicSuccess",
                  "fields": [
                    {
                      "name": "dispatch_info",
                      "typeId": 22,
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["An extrinsic completed successfully."]
                },
                {
                  "name": "ExtrinsicFailed",
                  "fields": [
                    {
                      "name": "dispatch_error",
                      "typeId": 25,
                      "typeName": "DispatchError",
                      "docs": []
                    },
                    {
                      "name": "dispatch_info",
                      "typeId": 22,
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["An extrinsic failed."]
                },
                {
                  "name": "CodeUpdated",
                  "fields": [],
                  "index": 2,
                  "docs": ["`:code` was updated."]
                },
                {
                  "name": "NewAccount",
                  "fields": [
                    {
                      "name": "account",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["A new account was created."]
                },
                {
                  "name": "KilledAccount",
                  "fields": [
                    {
                      "name": "account",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["An account was reaped."]
                },
                {
                  "name": "Remarked",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "typeId": 12,
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["On on-chain remark happened."]
                }
              ]
            }
          },
          "docs": ["Event for the System pallet."]
        },
        {
          "id": 22,
          "path": ["frame_support", "dispatch", "DispatchInfo"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "weight",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "class",
                  "typeId": 23,
                  "typeName": "DispatchClass",
                  "docs": []
                },
                {
                  "name": "pays_fee",
                  "typeId": 24,
                  "typeName": "Pays",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 23,
          "path": ["frame_support", "dispatch", "DispatchClass"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Normal",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Operational",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Mandatory",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 24,
          "path": ["frame_support", "dispatch", "Pays"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Yes",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "No",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 25,
          "path": ["sp_runtime", "DispatchError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Other",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "CannotLookup",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Module",
                  "fields": [
                    {
                      "typeId": 26,
                      "typeName": "ModuleError",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "ConsumerRemaining",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "NoProviders",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "TooManyConsumers",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Token",
                  "fields": [
                    {
                      "typeId": 27,
                      "typeName": "TokenError",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Arithmetic",
                  "fields": [
                    {
                      "typeId": 28,
                      "typeName": "ArithmeticError",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "Transactional",
                  "fields": [
                    {
                      "typeId": 29,
                      "typeName": "TransactionalError",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "Exhausted",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "Corruption",
                  "fields": [],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "Unavailable",
                  "fields": [],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "RootNotAllowed",
                  "fields": [],
                  "index": 13,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 26,
          "path": ["sp_runtime", "ModuleError"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "index",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "error",
                  "typeId": 17,
                  "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 27,
          "path": ["sp_runtime", "TokenError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "FundsUnavailable",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "OnlyProvider",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "BelowMinimum",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "CannotCreate",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "UnknownAsset",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Unsupported",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "CannotCreateHold",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "NotExpendable",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "Blocked",
                  "fields": [],
                  "index": 9,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 28,
          "path": ["sp_arithmetic", "ArithmeticError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Underflow",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "DivisionByZero",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 29,
          "path": ["sp_runtime", "TransactionalError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "LimitReached",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NoLayer",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 30,
          "path": ["cumulus_pallet_parachain_system", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ValidationFunctionStored",
                  "fields": [],
                  "index": 0,
                  "docs": ["The validation function has been scheduled to apply."]
                },
                {
                  "name": "ValidationFunctionApplied",
                  "fields": [
                    {
                      "name": "relay_chain_block_num",
                      "typeId": 4,
                      "typeName": "RelayChainBlockNumber",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["The validation function was applied as of the contained relay chain block number."]
                },
                {
                  "name": "ValidationFunctionDiscarded",
                  "fields": [],
                  "index": 2,
                  "docs": ["The relay-chain aborted the upgrade process."]
                },
                {
                  "name": "UpgradeAuthorized",
                  "fields": [
                    {
                      "name": "code_hash",
                      "typeId": 12,
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["An upgrade has been authorized."]
                },
                {
                  "name": "DownwardMessagesReceived",
                  "fields": [
                    {
                      "name": "count",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["Some downward messages have been received and will be processed."]
                },
                {
                  "name": "DownwardMessagesProcessed",
                  "fields": [
                    {
                      "name": "weight_used",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "dmq_head",
                      "typeId": 12,
                      "typeName": "relay_chain::Hash",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["Downward messages were processed using the given weight."]
                },
                {
                  "name": "UpwardMessageSent",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 31,
                      "typeName": "Option<XcmHash>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["An upward message was sent to the relay chain."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 31,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 1
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 1,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 32,
          "path": ["pallet_balances", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Endowed",
                  "fields": [
                    {
                      "name": "account",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["An account was created with some free balance."]
                },
                {
                  "name": "DustLost",
                  "fields": [
                    {
                      "name": "account",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": [
                    "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                    "resulting in an outright loss."
                  ]
                },
                {
                  "name": "Transfer",
                  "fields": [
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Transfer succeeded."]
                },
                {
                  "name": "BalanceSet",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["A balance was set by root."]
                },
                {
                  "name": "Reserved",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["Some balance was reserved (moved from free to reserved)."]
                },
                {
                  "name": "Unreserved",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["Some balance was unreserved (moved from reserved to free)."]
                },
                {
                  "name": "ReserveRepatriated",
                  "fields": [
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "destination_status",
                      "typeId": 33,
                      "typeName": "Status",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": [
                    "Some balance was moved from the reserve of the first account to the second account.",
                    "Final argument indicates the destination balance type."
                  ]
                },
                {
                  "name": "Deposit",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["Some amount was deposited (e.g. for transaction fees)."]
                },
                {
                  "name": "Withdraw",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["Some amount was withdrawn from the account (e.g. for transaction fees)."]
                },
                {
                  "name": "Slashed",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["Some amount was removed from the account (e.g. for misbehavior)."]
                },
                {
                  "name": "Minted",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["Some amount was minted into an account."]
                },
                {
                  "name": "Burned",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["Some amount was burned from an account."]
                },
                {
                  "name": "Suspended",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["Some amount was suspended from an account (it can be restored later)."]
                },
                {
                  "name": "Restored",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["Some amount was restored into an account."]
                },
                {
                  "name": "Upgraded",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["An account was upgraded."]
                },
                {
                  "name": "Issued",
                  "fields": [
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["Total issuance was increased by `amount`, creating a credit to be balanced."]
                },
                {
                  "name": "Rescinded",
                  "fields": [
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["Total issuance was decreased by `amount`, creating a debt to be balanced."]
                },
                {
                  "name": "Locked",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["Some balance was locked."]
                },
                {
                  "name": "Unlocked",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["Some balance was unlocked."]
                },
                {
                  "name": "Frozen",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["Some balance was frozen."]
                },
                {
                  "name": "Thawed",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["Some balance was thawed."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 33,
          "path": ["frame_support", "traits", "tokens", "misc", "BalanceStatus"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Free",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Reserved",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 34,
          "path": ["pallet_transaction_payment", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "TransactionFeePaid",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "actual_fee",
                      "typeId": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "tip",
                      "typeId": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": [
                    "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                    "has been paid by `who`."
                  ]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 35,
          "path": ["pallet_asset_tx_payment", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "AssetTxFeePaid",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "actual_fee",
                      "typeId": 6,
                      "typeName": "AssetBalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "tip",
                      "typeId": 6,
                      "typeName": "AssetBalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "asset_id",
                      "typeId": 36,
                      "typeName": "Option<ChargeAssetIdOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": [
                    "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                    "has been paid by `who` in an asset `asset_id`."
                  ]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 36,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 4,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 37,
          "path": ["pallet_collator_selection", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "NewInvulnerables",
                  "fields": [
                    {
                      "name": "invulnerables",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["New Invulnerables were set."]
                },
                {
                  "name": "InvulnerableAdded",
                  "fields": [
                    {
                      "name": "account_id",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["A new Invulnerable was added."]
                },
                {
                  "name": "InvulnerableRemoved",
                  "fields": [
                    {
                      "name": "account_id",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["An Invulnerable was removed."]
                },
                {
                  "name": "NewDesiredCandidates",
                  "fields": [
                    {
                      "name": "desired_candidates",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["The number of desired candidates was set."]
                },
                {
                  "name": "NewCandidacyBond",
                  "fields": [
                    {
                      "name": "bond_amount",
                      "typeId": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["The candidacy bond was set."]
                },
                {
                  "name": "CandidateAdded",
                  "fields": [
                    {
                      "name": "account_id",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "typeId": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["A new candidate joined."]
                },
                {
                  "name": "CandidateRemoved",
                  "fields": [
                    {
                      "name": "account_id",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["A candidate was removed."]
                },
                {
                  "name": "InvalidInvulnerableSkipped",
                  "fields": [
                    {
                      "name": "account_id",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": [
                    "An account was unable to be added to the Invulnerables because they did not have keys",
                    "registered. Other Invulnerables may have been set."
                  ]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 38,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 0
            }
          },
          "docs": []
        },
        {
          "id": 39,
          "path": ["pallet_session", "pallet", "Event"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "NewSession",
                  "fields": [
                    {
                      "name": "session_index",
                      "typeId": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": [
                    "New session has happened. Note that the argument is the session index, not the",
                    "block number as the type might suggest."
                  ]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 40,
          "path": ["cumulus_pallet_xcmp_queue", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Success",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Some XCM was executed ok."]
                },
                {
                  "name": "Fail",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "typeId": 41,
                      "typeName": "XcmError",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["Some XCM failed."]
                },
                {
                  "name": "BadVersion",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Bad XCM version used."]
                },
                {
                  "name": "BadFormat",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["Bad XCM format used."]
                },
                {
                  "name": "XcmpMessageSent",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["An HRMP message was sent to a sibling parachain."]
                },
                {
                  "name": "OverweightEnqueued",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 42,
                      "typeName": "ParaId",
                      "docs": []
                    },
                    {
                      "name": "sent_at",
                      "typeId": 4,
                      "typeName": "RelayBlockNumber",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "required",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["An XCM exceeded the individual message weight budget."]
                },
                {
                  "name": "OverweightServiced",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "used",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["An XCM from the overweight queue was executed with the given actual weight used."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 41,
          "path": ["xcm", "v3", "traits", "Error"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Unimplemented",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "UntrustedReserveLocation",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "UntrustedTeleportLocation",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "LocationFull",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "LocationNotInvertible",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "InvalidLocation",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "AssetNotFound",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "FailedToTransactAsset",
                  "fields": [],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "NotWithdrawable",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "LocationCannotHold",
                  "fields": [],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ExceedsMaxMessageSize",
                  "fields": [],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DestinationUnsupported",
                  "fields": [],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "Transport",
                  "fields": [],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "Unroutable",
                  "fields": [],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "UnknownClaim",
                  "fields": [],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "FailedToDecode",
                  "fields": [],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "MaxWeightInvalid",
                  "fields": [],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "NotHoldingFees",
                  "fields": [],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "TooExpensive",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "ExpectationFalse",
                  "fields": [],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "PalletNotFound",
                  "fields": [],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "NameMismatch",
                  "fields": [],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "VersionIncompatible",
                  "fields": [],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "HoldingWouldOverflow",
                  "fields": [],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "ExportError",
                  "fields": [],
                  "index": 27,
                  "docs": []
                },
                {
                  "name": "ReanchorFailed",
                  "fields": [],
                  "index": 28,
                  "docs": []
                },
                {
                  "name": "NoDeal",
                  "fields": [],
                  "index": 29,
                  "docs": []
                },
                {
                  "name": "FeesNotMet",
                  "fields": [],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "LockError",
                  "fields": [],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "Unanchored",
                  "fields": [],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "NotDepositable",
                  "fields": [],
                  "index": 34,
                  "docs": []
                },
                {
                  "name": "UnhandledXcmVersion",
                  "fields": [],
                  "index": 35,
                  "docs": []
                },
                {
                  "name": "WeightLimitReached",
                  "fields": [
                    {
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 36,
                  "docs": []
                },
                {
                  "name": "Barrier",
                  "fields": [],
                  "index": 37,
                  "docs": []
                },
                {
                  "name": "WeightNotComputable",
                  "fields": [],
                  "index": 38,
                  "docs": []
                },
                {
                  "name": "ExceedsStackLimit",
                  "fields": [],
                  "index": 39,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 42,
          "path": ["polkadot_parachain_primitives", "primitives", "Id"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 43,
          "path": ["pallet_xcm", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Attempted",
                  "fields": [
                    {
                      "name": "outcome",
                      "typeId": 44,
                      "typeName": "xcm::latest::Outcome",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Execution of an XCM message was attempted."]
                },
                {
                  "name": "Sent",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["A XCM message was sent."]
                },
                {
                  "name": "UnexpectedResponse",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": [
                    "Query response received which does not match a registered query. This may be because a",
                    "matching query was never registered, it may be because it is a duplicate response, or",
                    "because the query timed out."
                  ]
                },
                {
                  "name": "ResponseReady",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "typeId": 66,
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": [
                    "Query response has been received and is ready for taking with `take_response`. There is",
                    "no registered notification call."
                  ]
                },
                {
                  "name": "Notified",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "pallet_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "call_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": [
                    "Query response has been received and query is removed. The registered notification has",
                    "been dispatched and executed successfully."
                  ]
                },
                {
                  "name": "NotifyOverweight",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "pallet_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "call_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "actual_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "max_budgeted_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": [
                    "Query response has been received and query is removed. The registered notification",
                    "could not be dispatched because the dispatch weight is greater than the maximum weight",
                    "originally budgeted by this runtime for the query result."
                  ]
                },
                {
                  "name": "NotifyDispatchError",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "pallet_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "call_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": [
                    "Query response has been received and query is removed. There was a general error with",
                    "dispatching the notification call."
                  ]
                },
                {
                  "name": "NotifyDecodeFailed",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "pallet_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "call_index",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": [
                    "Query response has been received and query is removed. The dispatch was unable to be",
                    "decoded into a `Call`; this might be due to dispatch function having a signature which",
                    "is not `(origin, QueryId, Response)`."
                  ]
                },
                {
                  "name": "InvalidResponder",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "expected_location",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": [
                    "Expected query response has been received but the origin location of the response does",
                    "not match that expected. The query remains registered for a later, valid, response to",
                    "be received and acted upon."
                  ]
                },
                {
                  "name": "InvalidResponderVersion",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": [
                    "Expected query response has been received but the expected origin location placed in",
                    "storage by this runtime previously cannot be decoded. The query remains registered.",
                    "",
                    "This is unexpected (since a location placed in storage in a previously executing",
                    "runtime should be readable prior to query timeout) and dangerous since the possibly",
                    "valid response will be dropped. Manual governance intervention is probably going to be",
                    "needed."
                  ]
                },
                {
                  "name": "ResponseTaken",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["Received query response has been read and removed."]
                },
                {
                  "name": "AssetsTrapped",
                  "fields": [
                    {
                      "name": "hash",
                      "typeId": 12,
                      "typeName": "H256",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "VersionedMultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["Some assets have been placed in an asset trap."]
                },
                {
                  "name": "VersionChangeNotified",
                  "fields": [
                    {
                      "name": "destination",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "result",
                      "typeId": 4,
                      "typeName": "XcmVersion",
                      "docs": []
                    },
                    {
                      "name": "cost",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": [
                    "An XCM version change notification message has been attempted to be sent.",
                    "",
                    "The cost of sending it (borne by the chain) is included."
                  ]
                },
                {
                  "name": "SupportedVersionChanged",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "version",
                      "typeId": 4,
                      "typeName": "XcmVersion",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": [
                    "The supported version of a location has been changed. This might be through an",
                    "automatic notification or a manual intervention."
                  ]
                },
                {
                  "name": "NotifyTargetSendFail",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "typeId": 41,
                      "typeName": "XcmError",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": [
                    "A given location which had a version change subscription was dropped owing to an error",
                    "sending the notification to it."
                  ]
                },
                {
                  "name": "NotifyTargetMigrationFail",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 98,
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": [
                    "A given location which had a version change subscription was dropped owing to an error",
                    "migrating the location to our new XCM format."
                  ]
                },
                {
                  "name": "InvalidQuerierVersion",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": [
                    "Expected query response has been received but the expected querier location placed in",
                    "storage by this runtime previously cannot be decoded. The query remains registered.",
                    "",
                    "This is unexpected (since a location placed in storage in a previously executing",
                    "runtime should be readable prior to query timeout) and dangerous since the possibly",
                    "valid response will be dropped. Manual governance intervention is probably going to be",
                    "needed."
                  ]
                },
                {
                  "name": "InvalidQuerier",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "typeId": 11,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "expected_querier",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "maybe_actual_querier",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": [
                    "Expected query response has been received but the querier location of the response does",
                    "not match the expected. The query remains registered for a later, valid, response to",
                    "be received and acted upon."
                  ]
                },
                {
                  "name": "VersionNotifyStarted",
                  "fields": [
                    {
                      "name": "destination",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "cost",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": [
                    "A remote has requested XCM version change notification from us and we have honored it.",
                    "A version information message is sent to them and its cost is included."
                  ]
                },
                {
                  "name": "VersionNotifyRequested",
                  "fields": [
                    {
                      "name": "destination",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "cost",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["We have requested that a remote chain send us XCM version change notifications."]
                },
                {
                  "name": "VersionNotifyUnrequested",
                  "fields": [
                    {
                      "name": "destination",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "cost",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": [
                    "We have requested that a remote chain stops sending us XCM version change",
                    "notifications."
                  ]
                },
                {
                  "name": "FeesPaid",
                  "fields": [
                    {
                      "name": "paying",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "fees",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["Fees were paid from a location for an operation (often for using `SendXcm`)."]
                },
                {
                  "name": "AssetsClaimed",
                  "fields": [
                    {
                      "name": "hash",
                      "typeId": 12,
                      "typeName": "H256",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "VersionedMultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["Some assets have been claimed from an asset trap"]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 44,
          "path": ["xcm", "v3", "traits", "Outcome"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Complete",
                  "fields": [
                    {
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Incomplete",
                  "fields": [
                    {
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "typeId": 41,
                      "typeName": "Error",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Error",
                  "fields": [
                    {
                      "typeId": 41,
                      "typeName": "Error",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 45,
          "path": ["staging_xcm", "v3", "multilocation", "MultiLocation"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "parents",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "interior",
                  "typeId": 46,
                  "typeName": "Junctions",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 46,
          "path": ["xcm", "v3", "junctions", "Junctions"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Here",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "X1",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "X2",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "X3",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "X4",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "X5",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "X6",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "X7",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "X8",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 47,
          "path": ["xcm", "v3", "junction", "Junction"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Parachain",
                  "fields": [
                    {
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "AccountId32",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 49,
                      "typeName": "Option<NetworkId>",
                      "docs": []
                    },
                    {
                      "name": "id",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "AccountIndex64",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 49,
                      "typeName": "Option<NetworkId>",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "AccountKey20",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 49,
                      "typeName": "Option<NetworkId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 51,
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "PalletInstance",
                  "fields": [
                    {
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "GeneralIndex",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "GeneralKey",
                  "fields": [
                    {
                      "name": "length",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "OnlyChild",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Plurality",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 53,
                      "typeName": "BodyId",
                      "docs": []
                    },
                    {
                      "name": "part",
                      "typeId": 54,
                      "typeName": "BodyPart",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "GlobalConsensus",
                  "fields": [
                    {
                      "typeId": 50,
                      "typeName": "NetworkId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 48,
          "path": [],
          "params": [],
          "type": {
            "tag": "Compact",
            "value": {
              "typeParam": 4
            }
          },
          "docs": []
        },
        {
          "id": 49,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 50
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 50,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 50,
          "path": ["xcm", "v3", "junction", "NetworkId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ByGenesis",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ByFork",
                  "fields": [
                    {
                      "name": "block_number",
                      "typeId": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "block_hash",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Polkadot",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Kusama",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Westend",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Rococo",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Wococo",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Ethereum",
                  "fields": [
                    {
                      "name": "chain_id",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "BitcoinCore",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "BitcoinCash",
                  "fields": [],
                  "index": 9,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 51,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 20,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 52,
          "path": [],
          "params": [],
          "type": {
            "tag": "Compact",
            "value": {
              "typeParam": 6
            }
          },
          "docs": []
        },
        {
          "id": 53,
          "path": ["xcm", "v3", "junction", "BodyId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unit",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Moniker",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Executive",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Technical",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Legislative",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Judicial",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Defense",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Administration",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "Treasury",
                  "fields": [],
                  "index": 9,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 54,
          "path": ["xcm", "v3", "junction", "BodyPart"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Voice",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Members",
                  "fields": [
                    {
                      "name": "count",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Fraction",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "AtLeastProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "MoreThanProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 55,
          "path": ["xcm", "v3", "Xcm"],
          "params": [
            {
              "name": "Call"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 56,
                  "typeName": "Vec<Instruction<Call>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 56,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 57
            }
          },
          "docs": []
        },
        {
          "id": 57,
          "path": ["xcm", "v3", "Instruction"],
          "params": [
            {
              "name": "Call"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "typeId": 66,
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "querier",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_kind",
                      "typeId": 76,
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 77,
                      "typeName": "DoubleEncoded<Call>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "typeId": 46,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "want",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "maximal",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "ReportHolding",
                  "fields": [
                    {
                      "name": "response_info",
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "typeId": 55,
                      "typeName": "Xcm<Call>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "typeId": 55,
                      "typeName": "Xcm<Call>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": 27,
                  "docs": []
                },
                {
                  "name": "BurnAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": []
                },
                {
                  "name": "ExpectAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": []
                },
                {
                  "name": "ExpectOrigin",
                  "fields": [
                    {
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "ExpectError",
                  "fields": [
                    {
                      "typeId": 67,
                      "typeName": "Option<(u32, Error)>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "ExpectTransactStatus",
                  "fields": [
                    {
                      "typeId": 73,
                      "typeName": "MaybeErrorCode",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "QueryPallet",
                  "fields": [
                    {
                      "name": "module_name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "response_info",
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "ExpectPallet",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "module_name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "crate_major",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "min_crate_minor",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": []
                },
                {
                  "name": "ReportTransactStatus",
                  "fields": [
                    {
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 35,
                  "docs": []
                },
                {
                  "name": "ClearTransactStatus",
                  "fields": [],
                  "index": 36,
                  "docs": []
                },
                {
                  "name": "UniversalOrigin",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 37,
                  "docs": []
                },
                {
                  "name": "ExportMessage",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 50,
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 46,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 38,
                  "docs": []
                },
                {
                  "name": "LockAsset",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "unlocker",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 39,
                  "docs": []
                },
                {
                  "name": "UnlockAsset",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "NoteUnlockable",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "RequestUnlock",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "locker",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "SetFeesMode",
                  "fields": [
                    {
                      "name": "jit_withdraw",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 43,
                  "docs": []
                },
                {
                  "name": "SetTopic",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 44,
                  "docs": []
                },
                {
                  "name": "ClearTopic",
                  "fields": [],
                  "index": 45,
                  "docs": []
                },
                {
                  "name": "AliasOrigin",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 46,
                  "docs": []
                },
                {
                  "name": "UnpaidExecution",
                  "fields": [
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    },
                    {
                      "name": "check_origin",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 47,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 58,
          "path": ["xcm", "v3", "multiasset", "MultiAssets"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 59,
                  "typeName": "Vec<MultiAsset>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 59,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 60
            }
          },
          "docs": []
        },
        {
          "id": 60,
          "path": ["xcm", "v3", "multiasset", "MultiAsset"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 61,
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "typeId": 62,
                  "typeName": "Fungibility",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 61,
          "path": ["xcm", "v3", "multiasset", "AssetId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Concrete",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Abstract",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 62,
          "path": ["xcm", "v3", "multiasset", "Fungibility"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Fungible",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [
                    {
                      "typeId": 63,
                      "typeName": "AssetInstance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 63,
          "path": ["xcm", "v3", "multiasset", "AssetInstance"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Undefined",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Array4",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Array8",
                  "fields": [
                    {
                      "typeId": 64,
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Array16",
                  "fields": [
                    {
                      "typeId": 65,
                      "typeName": "[u8; 16]",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Array32",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 64,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 8,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 65,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 16,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 66,
          "path": ["xcm", "v3", "Response"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ExecutionResult",
                  "fields": [
                    {
                      "typeId": 67,
                      "typeName": "Option<(u32, Error)>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Version",
                  "fields": [
                    {
                      "typeId": 4,
                      "typeName": "super::Version",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "PalletsInfo",
                  "fields": [
                    {
                      "typeId": 69,
                      "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "DispatchResult",
                  "fields": [
                    {
                      "typeId": 73,
                      "typeName": "MaybeErrorCode",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 67,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 68
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 68,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 68,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 41]
            }
          },
          "docs": []
        },
        {
          "id": 69,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 70
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 72,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 70,
          "path": ["xcm", "v3", "PalletInfo"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "index",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "name",
                  "typeId": 71,
                  "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                  "docs": []
                },
                {
                  "name": "module_name",
                  "typeId": 71,
                  "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                  "docs": []
                },
                {
                  "name": "major",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "minor",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "patch",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 71,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 72,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 70
            }
          },
          "docs": []
        },
        {
          "id": 73,
          "path": ["xcm", "v3", "MaybeErrorCode"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Success",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Error",
                  "fields": [
                    {
                      "typeId": 74,
                      "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "TruncatedError",
                  "fields": [
                    {
                      "typeId": 74,
                      "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 74,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 75,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 45
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 45,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 76,
          "path": ["xcm", "v2", "OriginKind"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Native",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "SovereignAccount",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Superuser",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Xcm",
                  "fields": [],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 77,
          "path": ["xcm", "double_encoded", "DoubleEncoded"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "encoded",
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 78,
          "path": ["xcm", "v3", "QueryResponseInfo"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "destination",
                  "typeId": 45,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "typeId": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 79,
          "path": ["xcm", "v3", "multiasset", "MultiAssetFilter"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Definite",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Wild",
                  "fields": [
                    {
                      "typeId": 80,
                      "typeName": "WildMultiAsset",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 80,
          "path": ["xcm", "v3", "multiasset", "WildMultiAsset"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "All",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "AllOf",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 61,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "typeId": 81,
                      "typeName": "WildFungibility",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "AllCounted",
                  "fields": [
                    {
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "AllOfCounted",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 61,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "typeId": 81,
                      "typeName": "WildFungibility",
                      "docs": []
                    },
                    {
                      "name": "count",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 81,
          "path": ["xcm", "v3", "multiasset", "WildFungibility"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Fungible",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 82,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "bool"
            }
          },
          "docs": []
        },
        {
          "id": 83,
          "path": ["xcm", "v3", "WeightLimit"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unlimited",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Limited",
                  "fields": [
                    {
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 84,
          "path": ["xcm", "VersionedMultiAssets"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V2",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "v2::MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "v3::MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 85,
          "path": ["xcm", "v2", "multiasset", "MultiAssets"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 86,
                  "typeName": "Vec<MultiAsset>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 86,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 87
            }
          },
          "docs": []
        },
        {
          "id": 87,
          "path": ["xcm", "v2", "multiasset", "MultiAsset"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 88,
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "typeId": 96,
                  "typeName": "Fungibility",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 88,
          "path": ["xcm", "v2", "multiasset", "AssetId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Concrete",
                  "fields": [
                    {
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Abstract",
                  "fields": [
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 89,
          "path": ["xcm", "v2", "multilocation", "MultiLocation"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "parents",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "interior",
                  "typeId": 90,
                  "typeName": "Junctions",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 90,
          "path": ["xcm", "v2", "multilocation", "Junctions"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Here",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "X1",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "X2",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "X3",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "X4",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "X5",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "X6",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "X7",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "X8",
                  "fields": [
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "typeId": 91,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 91,
          "path": ["xcm", "v2", "junction", "Junction"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Parachain",
                  "fields": [
                    {
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "AccountId32",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 92,
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "id",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "AccountIndex64",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 92,
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "AccountKey20",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 92,
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 51,
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "PalletInstance",
                  "fields": [
                    {
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "GeneralIndex",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "GeneralKey",
                  "fields": [
                    {
                      "typeId": 93,
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "OnlyChild",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Plurality",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 94,
                      "typeName": "BodyId",
                      "docs": []
                    },
                    {
                      "name": "part",
                      "typeId": 95,
                      "typeName": "BodyPart",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 92,
          "path": ["xcm", "v2", "NetworkId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Any",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Named",
                  "fields": [
                    {
                      "typeId": 93,
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Polkadot",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Kusama",
                  "fields": [],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 93,
          "path": ["bounded_collections", "weak_bounded_vec", "WeakBoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 94,
          "path": ["xcm", "v2", "BodyId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unit",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Named",
                  "fields": [
                    {
                      "typeId": 93,
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Executive",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Technical",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Legislative",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Judicial",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Defense",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Administration",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "Treasury",
                  "fields": [],
                  "index": 9,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 95,
          "path": ["xcm", "v2", "BodyPart"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Voice",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Members",
                  "fields": [
                    {
                      "name": "count",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Fraction",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "AtLeastProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "MoreThanProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 96,
          "path": ["xcm", "v2", "multiasset", "Fungibility"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Fungible",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [
                    {
                      "typeId": 97,
                      "typeName": "AssetInstance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 97,
          "path": ["xcm", "v2", "multiasset", "AssetInstance"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Undefined",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "typeId": 52,
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Array4",
                  "fields": [
                    {
                      "typeId": 17,
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Array8",
                  "fields": [
                    {
                      "typeId": 64,
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Array16",
                  "fields": [
                    {
                      "typeId": 65,
                      "typeName": "[u8; 16]",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Array32",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Blob",
                  "fields": [
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 98,
          "path": ["xcm", "VersionedMultiLocation"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V2",
                  "fields": [
                    {
                      "typeId": 89,
                      "typeName": "v2::MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "v3::MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 99,
          "path": ["cumulus_pallet_xcm", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "InvalidFormat",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Downward message is invalid XCM.", "\\[ id \\]"]
                },
                {
                  "name": "UnsupportedVersion",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["Downward message is unsupported version of XCM.", "\\[ id \\]"]
                },
                {
                  "name": "ExecutedDownward",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    },
                    {
                      "typeId": 44,
                      "typeName": "Outcome",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Downward message executed with the given outcome.", "\\[ id, outcome \\]"]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 100,
          "path": ["cumulus_pallet_dmp_queue", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "InvalidFormat",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Downward message is invalid XCM."]
                },
                {
                  "name": "UnsupportedVersion",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["Downward message is unsupported version of XCM."]
                },
                {
                  "name": "ExecutedDownward",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "outcome",
                      "typeId": 44,
                      "typeName": "Outcome",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Downward message executed with the given outcome."]
                },
                {
                  "name": "WeightExhausted",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "remaining_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "required_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["The weight limit for handling downward messages was reached."]
                },
                {
                  "name": "OverweightEnqueued",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "message_id",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    },
                    {
                      "name": "overweight_index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "required_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["Downward message is overweight and was placed in the overweight queue."]
                },
                {
                  "name": "OverweightServiced",
                  "fields": [
                    {
                      "name": "overweight_index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_used",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["Downward message from the overweight queue was executed."]
                },
                {
                  "name": "MaxMessagesExhausted",
                  "fields": [
                    {
                      "name": "message_hash",
                      "typeId": 1,
                      "typeName": "XcmHash",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["The maximum number of downward messages was reached."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 101,
          "path": ["pallet_utility", "pallet", "Event"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "BatchInterrupted",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "typeId": 25,
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": [
                    "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                    "well as the error."
                  ]
                },
                {
                  "name": "BatchCompleted",
                  "fields": [],
                  "index": 1,
                  "docs": ["Batch of dispatches completed fully with no error."]
                },
                {
                  "name": "BatchCompletedWithErrors",
                  "fields": [],
                  "index": 2,
                  "docs": ["Batch of dispatches completed but has errors."]
                },
                {
                  "name": "ItemCompleted",
                  "fields": [],
                  "index": 3,
                  "docs": ["A single item within a Batch of dispatches has completed with no error."]
                },
                {
                  "name": "ItemFailed",
                  "fields": [
                    {
                      "name": "error",
                      "typeId": 25,
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["A single item within a Batch of dispatches has completed with error."]
                },
                {
                  "name": "DispatchedAs",
                  "fields": [
                    {
                      "name": "result",
                      "typeId": 102,
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["A call was dispatched."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 102,
          "path": ["Result"],
          "params": [
            {
              "name": "T",
              "typeId": 103
            },
            {
              "name": "E",
              "typeId": 25
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "typeId": 103,
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "typeId": 25,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 103,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 104,
          "path": ["pallet_multisig", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "NewMultisig",
                  "fields": [
                    {
                      "name": "approving",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "multisig",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "CallHash",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["A new multisig operation has begun."]
                },
                {
                  "name": "MultisigApproval",
                  "fields": [
                    {
                      "name": "approving",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "timepoint",
                      "typeId": 105,
                      "typeName": "Timepoint<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "multisig",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "CallHash",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["A multisig operation has been approved by someone."]
                },
                {
                  "name": "MultisigExecuted",
                  "fields": [
                    {
                      "name": "approving",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "timepoint",
                      "typeId": 105,
                      "typeName": "Timepoint<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "multisig",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "CallHash",
                      "docs": []
                    },
                    {
                      "name": "result",
                      "typeId": 102,
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["A multisig operation has been executed."]
                },
                {
                  "name": "MultisigCancelled",
                  "fields": [
                    {
                      "name": "cancelling",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "timepoint",
                      "typeId": 105,
                      "typeName": "Timepoint<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "multisig",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "CallHash",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["A multisig operation has been cancelled."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 105,
          "path": ["pallet_multisig", "Timepoint"],
          "params": [
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "height",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "index",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 106,
          "path": ["pallet_proxy", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ProxyExecuted",
                  "fields": [
                    {
                      "name": "result",
                      "typeId": 102,
                      "typeName": "DispatchResult",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["A proxy was executed correctly, with the given."]
                },
                {
                  "name": "PureCreated",
                  "fields": [
                    {
                      "name": "pure",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "disambiguation_index",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": [
                    "A pure account has been created by new proxy with given",
                    "disambiguation index and proxy type."
                  ]
                },
                {
                  "name": "Announced",
                  "fields": [
                    {
                      "name": "real",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 12,
                      "typeName": "CallHashOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["An announcement was placed to make a call in the future."]
                },
                {
                  "name": "ProxyAdded",
                  "fields": [
                    {
                      "name": "delegator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegatee",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["A proxy was added."]
                },
                {
                  "name": "ProxyRemoved",
                  "fields": [
                    {
                      "name": "delegator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegatee",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["A proxy was removed."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 107,
          "path": ["asset_hub_polkadot_runtime", "ProxyType"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Any",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NonTransfer",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "CancelProxy",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "AssetOwner",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "AssetManager",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Collator",
                  "fields": [],
                  "index": 6,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 108,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "u16"
            }
          },
          "docs": []
        },
        {
          "id": 109,
          "path": ["pallet_assets", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Created",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "creator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Some asset class was created."]
                },
                {
                  "name": "Issued",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["Some assets were issued."]
                },
                {
                  "name": "Transferred",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Some assets were transferred."]
                },
                {
                  "name": "Burned",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["Some assets were destroyed."]
                },
                {
                  "name": "TeamChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["The management team changed."]
                },
                {
                  "name": "OwnerChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["The owner changed."]
                },
                {
                  "name": "Frozen",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["Some account `who` was frozen."]
                },
                {
                  "name": "Thawed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["Some account `who` was thawed."]
                },
                {
                  "name": "AssetFrozen",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["Some asset `asset_id` was frozen."]
                },
                {
                  "name": "AssetThawed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["Some asset `asset_id` was thawed."]
                },
                {
                  "name": "AccountsDestroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "accounts_destroyed",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "accounts_remaining",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["Accounts were destroyed for given asset."]
                },
                {
                  "name": "ApprovalsDestroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "approvals_destroyed",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "approvals_remaining",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["Approvals were destroyed for given asset."]
                },
                {
                  "name": "DestructionStarted",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["An asset class is in the process of being destroyed."]
                },
                {
                  "name": "Destroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["An asset class was destroyed."]
                },
                {
                  "name": "ForceCreated",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["Some asset class was force-created."]
                },
                {
                  "name": "MetadataSet",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["New metadata has been set for an asset."]
                },
                {
                  "name": "MetadataCleared",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["Metadata has been cleared for an asset."]
                },
                {
                  "name": "ApprovedTransfer",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "source",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["(Additional) funds have been approved for transfer to a destination account."]
                },
                {
                  "name": "ApprovalCancelled",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["An approval for account `delegate` was cancelled by `owner`."]
                },
                {
                  "name": "TransferredApproved",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": [
                    "An `amount` was transferred in its entirety from `owner` to `destination` by",
                    "the approved `delegate`."
                  ]
                },
                {
                  "name": "AssetStatusChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["An asset has had its attributes changed by the `Force` origin."]
                },
                {
                  "name": "AssetMinBalanceChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "new_min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["The min_balance of an asset has been updated by the asset owner."]
                },
                {
                  "name": "Touched",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "depositor",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["Some account `who` was created with a deposit from `depositor`."]
                },
                {
                  "name": "Blocked",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 4,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["Some account `who` was blocked."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 110,
          "path": ["pallet_uniques", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Created",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "creator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["A `collection` was created."]
                },
                {
                  "name": "ForceCreated",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["A `collection` was force-created."]
                },
                {
                  "name": "Destroyed",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["A `collection` was destroyed."]
                },
                {
                  "name": "Issued",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["An `item` was issued."]
                },
                {
                  "name": "Transferred",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["An `item` was transferred."]
                },
                {
                  "name": "Burned",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["An `item` was destroyed."]
                },
                {
                  "name": "Frozen",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["Some `item` was frozen."]
                },
                {
                  "name": "Thawed",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["Some `item` was thawed."]
                },
                {
                  "name": "CollectionFrozen",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["Some `collection` was frozen."]
                },
                {
                  "name": "CollectionThawed",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["Some `collection` was thawed."]
                },
                {
                  "name": "OwnerChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "new_owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["The owner changed."]
                },
                {
                  "name": "TeamChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["The management team changed."]
                },
                {
                  "name": "ApprovedTransfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": [
                    "An `item` of a `collection` has been approved by the `owner` for transfer by",
                    "a `delegate`."
                  ]
                },
                {
                  "name": "ApprovalCancelled",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": [
                    "An approval for a `delegate` account to transfer the `item` of an item",
                    "`collection` was cancelled by its `owner`."
                  ]
                },
                {
                  "name": "ItemStatusChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["A `collection` has had its attributes changed by the `Force` origin."]
                },
                {
                  "name": "CollectionMetadataSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 111,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["New metadata has been set for a `collection`."]
                },
                {
                  "name": "CollectionMetadataCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["Metadata has been cleared for a `collection`."]
                },
                {
                  "name": "MetadataSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 111,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["New metadata has been set for an item."]
                },
                {
                  "name": "MetadataCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["Metadata has been cleared for an item."]
                },
                {
                  "name": "Redeposited",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "successful_items",
                      "typeId": 112,
                      "typeName": "Vec<T::ItemId>",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["Metadata has been cleared for an item."]
                },
                {
                  "name": "AttributeSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 113,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["New attribute metadata has been set for a `collection` or `item`."]
                },
                {
                  "name": "AttributeCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 113,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["Attribute metadata has been cleared for a `collection` or `item`."]
                },
                {
                  "name": "OwnershipAcceptanceChanged",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "maybe_collection",
                      "typeId": 36,
                      "typeName": "Option<T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["Ownership acceptance has changed for an account."]
                },
                {
                  "name": "CollectionMaxSupplySet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "max_supply",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["Max supply has been set for a collection."]
                },
                {
                  "name": "ItemPriceSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    },
                    {
                      "name": "whitelisted_buyer",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["The price was set for the instance."]
                },
                {
                  "name": "ItemPriceRemoved",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["The price for the instance was removed."]
                },
                {
                  "name": "ItemBought",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    },
                    {
                      "name": "seller",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "buyer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": ["An item was bought."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 111,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 112,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 4
            }
          },
          "docs": []
        },
        {
          "id": 113,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 114,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 115,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 0,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 116,
          "path": ["pallet_nfts", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Created",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "creator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["A `collection` was created."]
                },
                {
                  "name": "ForceCreated",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["A `collection` was force-created."]
                },
                {
                  "name": "Destroyed",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["A `collection` was destroyed."]
                },
                {
                  "name": "Issued",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["An `item` was issued."]
                },
                {
                  "name": "Transferred",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["An `item` was transferred."]
                },
                {
                  "name": "Burned",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["An `item` was destroyed."]
                },
                {
                  "name": "ItemTransferLocked",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["An `item` became non-transferable."]
                },
                {
                  "name": "ItemTransferUnlocked",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["An `item` became transferable."]
                },
                {
                  "name": "ItemPropertiesLocked",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "lock_metadata",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "lock_attributes",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["`item` metadata or attributes were locked."]
                },
                {
                  "name": "CollectionLocked",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["Some `collection` was locked."]
                },
                {
                  "name": "OwnerChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "new_owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["The owner changed."]
                },
                {
                  "name": "TeamChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["The management team changed."]
                },
                {
                  "name": "TransferApproved",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "typeId": 36,
                      "typeName": "Option<BlockNumberFor<T>>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": [
                    "An `item` of a `collection` has been approved by the `owner` for transfer by",
                    "a `delegate`."
                  ]
                },
                {
                  "name": "ApprovalCancelled",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": [
                    "An approval for a `delegate` account to transfer the `item` of an item",
                    "`collection` was cancelled by its `owner`."
                  ]
                },
                {
                  "name": "AllApprovalsCancelled",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["All approvals of an item got cancelled."]
                },
                {
                  "name": "CollectionConfigChanged",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["A `collection` has had its config changed by the `Force` origin."]
                },
                {
                  "name": "CollectionMetadataSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["New metadata has been set for a `collection`."]
                },
                {
                  "name": "CollectionMetadataCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["Metadata has been cleared for a `collection`."]
                },
                {
                  "name": "ItemMetadataSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["New metadata has been set for an item."]
                },
                {
                  "name": "ItemMetadataCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["Metadata has been cleared for an item."]
                },
                {
                  "name": "Redeposited",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "successful_items",
                      "typeId": 112,
                      "typeName": "Vec<T::ItemId>",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["The deposit for a set of `item`s within a `collection` has been updated."]
                },
                {
                  "name": "AttributeSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["New attribute metadata has been set for a `collection` or `item`."]
                },
                {
                  "name": "AttributeCleared",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["Attribute metadata has been cleared for a `collection` or `item`."]
                },
                {
                  "name": "ItemAttributesApprovalAdded",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["A new approval to modify item attributes was added."]
                },
                {
                  "name": "ItemAttributesApprovalRemoved",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["A new approval to modify item attributes was removed."]
                },
                {
                  "name": "OwnershipAcceptanceChanged",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "maybe_collection",
                      "typeId": 36,
                      "typeName": "Option<T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["Ownership acceptance has changed for an account."]
                },
                {
                  "name": "CollectionMaxSupplySet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "max_supply",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": ["Max supply has been set for a collection."]
                },
                {
                  "name": "CollectionMintSettingsUpdated",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 27,
                  "docs": ["Mint settings for a collection had changed."]
                },
                {
                  "name": "NextCollectionIdIncremented",
                  "fields": [
                    {
                      "name": "next_id",
                      "typeId": 36,
                      "typeName": "Option<T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": ["Event gets emitted when the `NextCollectionId` gets incremented."]
                },
                {
                  "name": "ItemPriceSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    },
                    {
                      "name": "whitelisted_buyer",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": ["The price was set for the item."]
                },
                {
                  "name": "ItemPriceRemoved",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": ["The price for the item was removed."]
                },
                {
                  "name": "ItemBought",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    },
                    {
                      "name": "seller",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "buyer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": ["An item was bought."]
                },
                {
                  "name": "TipSent",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "receiver",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "DepositBalanceOf<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": ["A tip was sent."]
                },
                {
                  "name": "SwapCreated",
                  "fields": [
                    {
                      "name": "offered_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "offered_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "desired_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "desired_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 119,
                      "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": ["An `item` swap intent was created."]
                },
                {
                  "name": "SwapCancelled",
                  "fields": [
                    {
                      "name": "offered_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "offered_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "desired_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "desired_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 119,
                      "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": ["The swap was cancelled."]
                },
                {
                  "name": "SwapClaimed",
                  "fields": [
                    {
                      "name": "sent_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "sent_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "sent_item_owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "received_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "received_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "received_item_owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 119,
                      "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 35,
                  "docs": ["The swap has been claimed."]
                },
                {
                  "name": "PreSignedAttributesSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 36,
                  "docs": ["New attributes have been set for an `item` of the `collection`."]
                },
                {
                  "name": "PalletAttributeSet",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "attribute",
                      "typeId": 122,
                      "typeName": "PalletAttributes<T::CollectionId>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    }
                  ],
                  "index": 37,
                  "docs": [
                    "A new attribute in the `Pallet` namespace was set for the `collection` or an `item`",
                    "within that `collection`."
                  ]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 117,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 118,
          "path": ["pallet_nfts", "types", "AttributeNamespace"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Pallet",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "CollectionOwner",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ItemOwner",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Account",
                  "fields": [
                    {
                      "typeId": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 119,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 120
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 120,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 120,
          "path": ["pallet_nfts", "types", "PriceWithDirection"],
          "params": [
            {
              "name": "Amount",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Amount",
                  "docs": []
                },
                {
                  "name": "direction",
                  "typeId": 121,
                  "typeName": "PriceDirection",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 121,
          "path": ["pallet_nfts", "types", "PriceDirection"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Send",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Receive",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 122,
          "path": ["pallet_nfts", "types", "PalletAttributes"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "UsedToClaim",
                  "fields": [
                    {
                      "typeId": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "TransferDisabled",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 123,
          "path": ["pallet_assets", "pallet", "Event"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Created",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "creator",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["Some asset class was created."]
                },
                {
                  "name": "Issued",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["Some assets were issued."]
                },
                {
                  "name": "Transferred",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "from",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["Some assets were transferred."]
                },
                {
                  "name": "Burned",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["Some assets were destroyed."]
                },
                {
                  "name": "TeamChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["The management team changed."]
                },
                {
                  "name": "OwnerChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["The owner changed."]
                },
                {
                  "name": "Frozen",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["Some account `who` was frozen."]
                },
                {
                  "name": "Thawed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["Some account `who` was thawed."]
                },
                {
                  "name": "AssetFrozen",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["Some asset `asset_id` was frozen."]
                },
                {
                  "name": "AssetThawed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["Some asset `asset_id` was thawed."]
                },
                {
                  "name": "AccountsDestroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "accounts_destroyed",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "accounts_remaining",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["Accounts were destroyed for given asset."]
                },
                {
                  "name": "ApprovalsDestroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "approvals_destroyed",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "approvals_remaining",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["Approvals were destroyed for given asset."]
                },
                {
                  "name": "DestructionStarted",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["An asset class is in the process of being destroyed."]
                },
                {
                  "name": "Destroyed",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["An asset class was destroyed."]
                },
                {
                  "name": "ForceCreated",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["Some asset class was force-created."]
                },
                {
                  "name": "MetadataSet",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["New metadata has been set for an asset."]
                },
                {
                  "name": "MetadataCleared",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["Metadata has been cleared for an asset."]
                },
                {
                  "name": "ApprovedTransfer",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "source",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["(Additional) funds have been approved for transfer to a destination account."]
                },
                {
                  "name": "ApprovalCancelled",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["An approval for account `delegate` was cancelled by `owner`."]
                },
                {
                  "name": "TransferredApproved",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": [
                    "An `amount` was transferred in its entirety from `owner` to `destination` by",
                    "the approved `delegate`."
                  ]
                },
                {
                  "name": "AssetStatusChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["An asset has had its attributes changed by the `Force` origin."]
                },
                {
                  "name": "AssetMinBalanceChanged",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "new_min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["The min_balance of an asset has been updated by the asset owner."]
                },
                {
                  "name": "Touched",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "depositor",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["Some account `who` was created with a deposit from `depositor`."]
                },
                {
                  "name": "Blocked",
                  "fields": [
                    {
                      "name": "asset_id",
                      "typeId": 45,
                      "typeName": "T::AssetId",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["Some account `who` was blocked."]
                }
              ]
            }
          },
          "docs": ["The `Event` enum of this pallet"]
        },
        {
          "id": 124,
          "path": ["frame_system", "Phase"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ApplyExtrinsic",
                  "fields": [
                    {
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Finalization",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Initialization",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 125,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 12
            }
          },
          "docs": []
        },
        {
          "id": 126,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 127
            }
          },
          "docs": []
        },
        {
          "id": 127,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 4]
            }
          },
          "docs": []
        },
        {
          "id": 128,
          "path": ["frame_system", "LastRuntimeUpgradeInfo"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "spec_version",
                  "typeId": 48,
                  "typeName": "codec::Compact<u32>",
                  "docs": []
                },
                {
                  "name": "spec_name",
                  "typeId": 129,
                  "typeName": "sp_runtime::RuntimeString",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 129,
          "path": [],
          "params": [],
          "type": {
            "tag": "Primitive",
            "value": {
              "kind": "str"
            }
          },
          "docs": []
        },
        {
          "id": 130,
          "path": ["frame_system", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "remark",
                  "fields": [
                    {
                      "name": "remark",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::remark`]."]
                },
                {
                  "name": "set_heap_pages",
                  "fields": [
                    {
                      "name": "pages",
                      "typeId": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::set_heap_pages`]."]
                },
                {
                  "name": "set_code",
                  "fields": [
                    {
                      "name": "code",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::set_code`]."]
                },
                {
                  "name": "set_code_without_checks",
                  "fields": [
                    {
                      "name": "code",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::set_code_without_checks`]."]
                },
                {
                  "name": "set_storage",
                  "fields": [
                    {
                      "name": "items",
                      "typeId": 131,
                      "typeName": "Vec<KeyValue>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::set_storage`]."]
                },
                {
                  "name": "kill_storage",
                  "fields": [
                    {
                      "name": "keys",
                      "typeId": 133,
                      "typeName": "Vec<Key>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::kill_storage`]."]
                },
                {
                  "name": "kill_prefix",
                  "fields": [
                    {
                      "name": "prefix",
                      "typeId": 13,
                      "typeName": "Key",
                      "docs": []
                    },
                    {
                      "name": "subkeys",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::kill_prefix`]."]
                },
                {
                  "name": "remark_with_event",
                  "fields": [
                    {
                      "name": "remark",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::remark_with_event`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 131,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 132
            }
          },
          "docs": []
        },
        {
          "id": 132,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [13, 13]
            }
          },
          "docs": []
        },
        {
          "id": 133,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 13
            }
          },
          "docs": []
        },
        {
          "id": 134,
          "path": ["frame_system", "limits", "BlockWeights"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "base_block",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_block",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "per_class",
                  "typeId": 135,
                  "typeName": "PerDispatchClass<WeightsPerClass>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 135,
          "path": ["frame_support", "dispatch", "PerDispatchClass"],
          "params": [
            {
              "name": "T",
              "typeId": 136
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "normal",
                  "typeId": 136,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "typeId": 136,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "typeId": 136,
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 136,
          "path": ["frame_system", "limits", "WeightsPerClass"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "base_extrinsic",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_extrinsic",
                  "typeId": 137,
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "max_total",
                  "typeId": 137,
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "typeId": 137,
                  "typeName": "Option<Weight>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 137,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 9
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 9,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 138,
          "path": ["frame_system", "limits", "BlockLength"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "max",
                  "typeId": 139,
                  "typeName": "PerDispatchClass<u32>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 139,
          "path": ["frame_support", "dispatch", "PerDispatchClass"],
          "params": [
            {
              "name": "T",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "normal",
                  "typeId": 4,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "typeId": 4,
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "typeId": 4,
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 140,
          "path": ["sp_weights", "RuntimeDbWeight"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "read",
                  "typeId": 11,
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "write",
                  "typeId": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 141,
          "path": ["sp_version", "RuntimeVersion"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "spec_name",
                  "typeId": 129,
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "impl_name",
                  "typeId": 129,
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "authoring_version",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "spec_version",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "impl_version",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "apis",
                  "typeId": 142,
                  "typeName": "ApisVec",
                  "docs": []
                },
                {
                  "name": "transaction_version",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "state_version",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 142,
          "path": ["Cow"],
          "params": [
            {
              "name": "T",
              "typeId": 143
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 143,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 143,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 144
            }
          },
          "docs": []
        },
        {
          "id": 144,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [64, 4]
            }
          },
          "docs": []
        },
        {
          "id": 145,
          "path": ["frame_system", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "InvalidSpecName",
                  "fields": [],
                  "index": 0,
                  "docs": [
                    "The name of specification does not match between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "SpecVersionNeedsToIncrease",
                  "fields": [],
                  "index": 1,
                  "docs": [
                    "The specification version is not allowed to decrease between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "FailedToExtractRuntimeVersion",
                  "fields": [],
                  "index": 2,
                  "docs": [
                    "Failed to extract the runtime version from the new runtime.",
                    "",
                    "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                  ]
                },
                {
                  "name": "NonDefaultComposite",
                  "fields": [],
                  "index": 3,
                  "docs": ["Suicide called when the account has non-default composite data."]
                },
                {
                  "name": "NonZeroRefCount",
                  "fields": [],
                  "index": 4,
                  "docs": ["There is a non-zero reference count preventing the account from being purged."]
                },
                {
                  "name": "CallFiltered",
                  "fields": [],
                  "index": 5,
                  "docs": ["The origin filter prevent the call to be dispatched."]
                }
              ]
            }
          },
          "docs": ["Error for the System pallet"]
        },
        {
          "id": 146,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 147
            }
          },
          "docs": []
        },
        {
          "id": 147,
          "path": ["cumulus_pallet_parachain_system", "unincluded_segment", "Ancestor"],
          "params": [
            {
              "name": "H",
              "typeId": 12
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "used_bandwidth",
                  "typeId": 148,
                  "typeName": "UsedBandwidth",
                  "docs": []
                },
                {
                  "name": "para_head_hash",
                  "typeId": 153,
                  "typeName": "Option<H>",
                  "docs": []
                },
                {
                  "name": "consumed_go_ahead_signal",
                  "typeId": 154,
                  "typeName": "Option<relay_chain::UpgradeGoAhead>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 148,
          "path": ["cumulus_pallet_parachain_system", "unincluded_segment", "UsedBandwidth"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "ump_msg_count",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "ump_total_bytes",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "hrmp_outgoing",
                  "typeId": 149,
                  "typeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 149,
          "path": ["BTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 42
            },
            {
              "name": "V",
              "typeId": 150
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 151,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 150,
          "path": ["cumulus_pallet_parachain_system", "unincluded_segment", "HrmpChannelUpdate"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "msg_count",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "total_bytes",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 151,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 152
            }
          },
          "docs": []
        },
        {
          "id": 152,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 150]
            }
          },
          "docs": []
        },
        {
          "id": 153,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 12
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 12,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 154,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 155
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 155,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 155,
          "path": ["polkadot_primitives", "v6", "UpgradeGoAhead"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Abort",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "GoAhead",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 156,
          "path": ["cumulus_pallet_parachain_system", "unincluded_segment", "SegmentTracker"],
          "params": [
            {
              "name": "H",
              "typeId": 12
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "used_bandwidth",
                  "typeId": 148,
                  "typeName": "UsedBandwidth",
                  "docs": []
                },
                {
                  "name": "hrmp_watermark",
                  "typeId": 36,
                  "typeName": "Option<relay_chain::BlockNumber>",
                  "docs": []
                },
                {
                  "name": "consumed_go_ahead_signal",
                  "typeId": 154,
                  "typeName": "Option<relay_chain::UpgradeGoAhead>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 157,
          "path": ["polkadot_primitives", "v6", "PersistedValidationData"],
          "params": [
            {
              "name": "H",
              "typeId": 12
            },
            {
              "name": "N",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "parent_head",
                  "typeId": 158,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": "relay_parent_number",
                  "typeId": 4,
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "relay_parent_storage_root",
                  "typeId": 12,
                  "typeName": "H",
                  "docs": []
                },
                {
                  "name": "max_pov_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 158,
          "path": ["polkadot_parachain_primitives", "primitives", "HeadData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 159,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 160
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 160,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 160,
          "path": ["polkadot_primitives", "v6", "UpgradeRestriction"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Present",
                  "fields": [],
                  "index": 0,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 161,
          "path": ["sp_trie", "storage_proof", "StorageProof"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "trie_nodes",
                  "typeId": 162,
                  "typeName": "BTreeSet<Vec<u8>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 162,
          "path": ["BTreeSet"],
          "params": [
            {
              "name": "T",
              "typeId": 13
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 133,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 163,
          "path": ["cumulus_pallet_parachain_system", "relay_state_snapshot", "MessagingStateSnapshot"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "dmq_mqc_head",
                  "typeId": 12,
                  "typeName": "relay_chain::Hash",
                  "docs": []
                },
                {
                  "name": "relay_dispatch_queue_remaining_capacity",
                  "typeId": 164,
                  "typeName": "RelayDispatchQueueRemainingCapacity",
                  "docs": []
                },
                {
                  "name": "ingress_channels",
                  "typeId": 165,
                  "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                  "docs": []
                },
                {
                  "name": "egress_channels",
                  "typeId": 165,
                  "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 164,
          "path": ["cumulus_pallet_parachain_system", "relay_state_snapshot", "RelayDispatchQueueRemainingCapacity"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "remaining_count",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "remaining_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 165,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 166
            }
          },
          "docs": []
        },
        {
          "id": 166,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 167]
            }
          },
          "docs": []
        },
        {
          "id": 167,
          "path": ["polkadot_primitives", "v6", "AbridgedHrmpChannel"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "max_capacity",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_total_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "msg_count",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "total_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "mqc_head",
                  "typeId": 153,
                  "typeName": "Option<Hash>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 168,
          "path": ["polkadot_primitives", "v6", "AbridgedHostConfiguration"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "max_code_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_head_data_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_queue_count",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_queue_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_message_size",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_message_num_per_candidate",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "hrmp_max_message_num_per_candidate",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "validation_upgrade_cooldown",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "validation_upgrade_delay",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "async_backing_params",
                  "typeId": 169,
                  "typeName": "AsyncBackingParams",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 169,
          "path": ["polkadot_primitives", "v6", "async_backing", "AsyncBackingParams"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "max_candidate_depth",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "allowed_ancestry_len",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 170,
          "path": ["cumulus_primitives_parachain_inherent", "MessageQueueChain"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 12,
                  "typeName": "RelayHash",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 171,
          "path": ["BTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 42
            },
            {
              "name": "V",
              "typeId": 170
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 172,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 172,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 173
            }
          },
          "docs": []
        },
        {
          "id": 173,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 170]
            }
          },
          "docs": []
        },
        {
          "id": 174,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 175
            }
          },
          "docs": []
        },
        {
          "id": 175,
          "path": ["polkadot_core_primitives", "OutboundHrmpMessage"],
          "params": [
            {
              "name": "Id",
              "typeId": 42
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "recipient",
                  "typeId": 42,
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 13,
                  "typeName": "sp_std::vec::Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 176,
          "path": ["sp_arithmetic", "fixed_point", "FixedU128"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 6,
                  "typeName": "u128",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 177,
          "path": ["cumulus_pallet_parachain_system", "CodeUpgradeAuthorization"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "code_hash",
                  "typeId": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "check_version",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 178,
          "path": ["cumulus_pallet_parachain_system", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "set_validation_data",
                  "fields": [
                    {
                      "name": "data",
                      "typeId": 179,
                      "typeName": "ParachainInherentData",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::set_validation_data`]."]
                },
                {
                  "name": "sudo_send_upward_message",
                  "fields": [
                    {
                      "name": "message",
                      "typeId": 13,
                      "typeName": "UpwardMessage",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::sudo_send_upward_message`]."]
                },
                {
                  "name": "authorize_upgrade",
                  "fields": [
                    {
                      "name": "code_hash",
                      "typeId": 12,
                      "typeName": "T::Hash",
                      "docs": []
                    },
                    {
                      "name": "check_version",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::authorize_upgrade`]."]
                },
                {
                  "name": "enact_authorized_upgrade",
                  "fields": [
                    {
                      "name": "code",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::enact_authorized_upgrade`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 179,
          "path": ["cumulus_primitives_parachain_inherent", "ParachainInherentData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "validation_data",
                  "typeId": 157,
                  "typeName": "PersistedValidationData",
                  "docs": []
                },
                {
                  "name": "relay_chain_state",
                  "typeId": 161,
                  "typeName": "sp_trie::StorageProof",
                  "docs": []
                },
                {
                  "name": "downward_messages",
                  "typeId": 180,
                  "typeName": "Vec<InboundDownwardMessage>",
                  "docs": []
                },
                {
                  "name": "horizontal_messages",
                  "typeId": 182,
                  "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 180,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 181
            }
          },
          "docs": []
        },
        {
          "id": 181,
          "path": ["polkadot_core_primitives", "InboundDownwardMessage"],
          "params": [
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "sent_at",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "msg",
                  "typeId": 13,
                  "typeName": "DownwardMessage",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 182,
          "path": ["BTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 42
            },
            {
              "name": "V",
              "typeId": 183
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 185,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 183,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 184
            }
          },
          "docs": []
        },
        {
          "id": 184,
          "path": ["polkadot_core_primitives", "InboundHrmpMessage"],
          "params": [
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "sent_at",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 13,
                  "typeName": "sp_std::vec::Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 185,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 186
            }
          },
          "docs": []
        },
        {
          "id": 186,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 183]
            }
          },
          "docs": []
        },
        {
          "id": 187,
          "path": ["cumulus_pallet_parachain_system", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "OverlappingUpgrades",
                  "fields": [],
                  "index": 0,
                  "docs": ["Attempt to upgrade validation function while existing upgrade pending."]
                },
                {
                  "name": "ProhibitedByPolkadot",
                  "fields": [],
                  "index": 1,
                  "docs": ["Polkadot currently prohibits this parachain from upgrading its validation function."]
                },
                {
                  "name": "TooBig",
                  "fields": [],
                  "index": 2,
                  "docs": [
                    "The supplied validation function has compiled into a blob larger than Polkadot is",
                    "willing to run."
                  ]
                },
                {
                  "name": "ValidationDataNotAvailable",
                  "fields": [],
                  "index": 3,
                  "docs": ["The inherent which supplies the validation data did not run this block."]
                },
                {
                  "name": "HostConfigurationNotAvailable",
                  "fields": [],
                  "index": 4,
                  "docs": ["The inherent which supplies the host configuration did not run this block."]
                },
                {
                  "name": "NotScheduled",
                  "fields": [],
                  "index": 5,
                  "docs": ["No validation function upgrade is currently scheduled."]
                },
                {
                  "name": "NothingAuthorized",
                  "fields": [],
                  "index": 6,
                  "docs": ["No code upgrade has been authorized."]
                },
                {
                  "name": "Unauthorized",
                  "fields": [],
                  "index": 7,
                  "docs": ["The given code upgrade has not been authorized."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 188,
          "path": ["pallet_timestamp", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "set",
                  "fields": [
                    {
                      "name": "now",
                      "typeId": 10,
                      "typeName": "T::Moment",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::set`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 189,
          "path": ["bounded_collections", "weak_bounded_vec", "WeakBoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 190
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 192,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 190,
          "path": ["pallet_balances", "types", "BalanceLock"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 64,
                  "typeName": "LockIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reasons",
                  "typeId": 191,
                  "typeName": "Reasons",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 191,
          "path": ["pallet_balances", "types", "Reasons"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Fee",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Misc",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "All",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 192,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 190
            }
          },
          "docs": []
        },
        {
          "id": 193,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 194
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 195,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 194,
          "path": ["pallet_balances", "types", "ReserveData"],
          "params": [
            {
              "name": "ReserveIdentifier",
              "typeId": 64
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 64,
                  "typeName": "ReserveIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 195,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 194
            }
          },
          "docs": []
        },
        {
          "id": 196,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 197
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 199,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 197,
          "path": ["pallet_balances", "types", "IdAmount"],
          "params": [
            {
              "name": "Id",
              "typeId": 198
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 198,
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 198,
          "path": ["asset_hub_polkadot_runtime", "RuntimeHoldReason"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": []
            }
          },
          "docs": []
        },
        {
          "id": 199,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 197
            }
          },
          "docs": []
        },
        {
          "id": 200,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 201
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 202,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 201,
          "path": ["pallet_balances", "types", "IdAmount"],
          "params": [
            {
              "name": "Id",
              "typeId": 103
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "id",
                  "typeId": 103,
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 202,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 201
            }
          },
          "docs": []
        },
        {
          "id": 203,
          "path": ["pallet_balances", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "transfer_allow_death",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::transfer_allow_death`]."]
                },
                {
                  "name": "force_transfer",
                  "fields": [
                    {
                      "name": "source",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::force_transfer`]."]
                },
                {
                  "name": "transfer_keep_alive",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::transfer_keep_alive`]."]
                },
                {
                  "name": "transfer_all",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "keep_alive",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::transfer_all`]."]
                },
                {
                  "name": "force_unreserve",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::force_unreserve`]."]
                },
                {
                  "name": "upgrade_accounts",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::upgrade_accounts`]."]
                },
                {
                  "name": "force_set_balance",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "new_free",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::force_set_balance`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 204,
          "path": ["sp_runtime", "multiaddress", "MultiAddress"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "AccountIndex",
              "typeId": 103
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Id",
                  "fields": [
                    {
                      "typeId": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "typeId": 205,
                      "typeName": "AccountIndex",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Raw",
                  "fields": [
                    {
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Address32",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Address20",
                  "fields": [
                    {
                      "typeId": 51,
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 205,
          "path": [],
          "params": [],
          "type": {
            "tag": "Compact",
            "value": {
              "typeParam": 103
            }
          },
          "docs": []
        },
        {
          "id": 206,
          "path": ["pallet_balances", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "VestingBalance",
                  "fields": [],
                  "index": 0,
                  "docs": ["Vesting balance too high to send value."]
                },
                {
                  "name": "LiquidityRestrictions",
                  "fields": [],
                  "index": 1,
                  "docs": ["Account liquidity restrictions prevent withdrawal."]
                },
                {
                  "name": "InsufficientBalance",
                  "fields": [],
                  "index": 2,
                  "docs": ["Balance too low to send value."]
                },
                {
                  "name": "ExistentialDeposit",
                  "fields": [],
                  "index": 3,
                  "docs": ["Value too low to create account due to existential deposit."]
                },
                {
                  "name": "Expendability",
                  "fields": [],
                  "index": 4,
                  "docs": ["Transfer/payment would kill account."]
                },
                {
                  "name": "ExistingVestingSchedule",
                  "fields": [],
                  "index": 5,
                  "docs": ["A vesting schedule already exists for this account."]
                },
                {
                  "name": "DeadAccount",
                  "fields": [],
                  "index": 6,
                  "docs": ["Beneficiary account must pre-exist."]
                },
                {
                  "name": "TooManyReserves",
                  "fields": [],
                  "index": 7,
                  "docs": ["Number of named reserves exceed `MaxReserves`."]
                },
                {
                  "name": "TooManyHolds",
                  "fields": [],
                  "index": 8,
                  "docs": ["Number of holds exceed `MaxHolds`."]
                },
                {
                  "name": "TooManyFreezes",
                  "fields": [],
                  "index": 9,
                  "docs": ["Number of freezes exceed `MaxFreezes`."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 207,
          "path": ["pallet_transaction_payment", "Releases"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V1Ancient",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "V2",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 208,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 0
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 38,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 209,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 210
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 211,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 210,
          "path": ["pallet_collator_selection", "pallet", "CandidateInfo"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "who",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 211,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 210
            }
          },
          "docs": []
        },
        {
          "id": 212,
          "path": ["pallet_collator_selection", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "set_invulnerables",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::set_invulnerables`]."]
                },
                {
                  "name": "set_desired_candidates",
                  "fields": [
                    {
                      "name": "max",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::set_desired_candidates`]."]
                },
                {
                  "name": "set_candidacy_bond",
                  "fields": [
                    {
                      "name": "bond",
                      "typeId": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::set_candidacy_bond`]."]
                },
                {
                  "name": "register_as_candidate",
                  "fields": [],
                  "index": 3,
                  "docs": ["See [`Pallet::register_as_candidate`]."]
                },
                {
                  "name": "leave_intent",
                  "fields": [],
                  "index": 4,
                  "docs": ["See [`Pallet::leave_intent`]."]
                },
                {
                  "name": "add_invulnerable",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::add_invulnerable`]."]
                },
                {
                  "name": "remove_invulnerable",
                  "fields": [
                    {
                      "name": "who",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::remove_invulnerable`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 213,
          "path": ["pallet_collator_selection", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "TooManyCandidates",
                  "fields": [],
                  "index": 0,
                  "docs": ["The pallet has too many candidates."]
                },
                {
                  "name": "TooFewEligibleCollators",
                  "fields": [],
                  "index": 1,
                  "docs": ["Leaving would result in too few candidates."]
                },
                {
                  "name": "AlreadyCandidate",
                  "fields": [],
                  "index": 2,
                  "docs": ["Account is already a candidate."]
                },
                {
                  "name": "NotCandidate",
                  "fields": [],
                  "index": 3,
                  "docs": ["Account is not a candidate."]
                },
                {
                  "name": "TooManyInvulnerables",
                  "fields": [],
                  "index": 4,
                  "docs": ["There are too many Invulnerables."]
                },
                {
                  "name": "AlreadyInvulnerable",
                  "fields": [],
                  "index": 5,
                  "docs": ["Account is already an Invulnerable."]
                },
                {
                  "name": "NotInvulnerable",
                  "fields": [],
                  "index": 6,
                  "docs": ["Account is not an Invulnerable."]
                },
                {
                  "name": "NoAssociatedValidatorId",
                  "fields": [],
                  "index": 7,
                  "docs": ["Account has no associated validator ID."]
                },
                {
                  "name": "ValidatorNotRegistered",
                  "fields": [],
                  "index": 8,
                  "docs": ["Validator ID is not yet registered."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 214,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 215
            }
          },
          "docs": []
        },
        {
          "id": 215,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [0, 216]
            }
          },
          "docs": []
        },
        {
          "id": 216,
          "path": ["asset_hub_polkadot_runtime", "SessionKeys"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "aura",
                  "typeId": 217,
                  "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 217,
          "path": ["sp_consensus_aura", "ed25519", "app_ed25519", "Public"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 218,
                  "typeName": "ed25519::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 218,
          "path": ["sp_core", "ed25519", "Public"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 219,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [220, 13]
            }
          },
          "docs": []
        },
        {
          "id": 220,
          "path": ["sp_core", "crypto", "KeyTypeId"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 17,
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 221,
          "path": ["pallet_session", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "set_keys",
                  "fields": [
                    {
                      "name": "keys",
                      "typeId": 216,
                      "typeName": "T::Keys",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::set_keys`]."]
                },
                {
                  "name": "purge_keys",
                  "fields": [],
                  "index": 1,
                  "docs": ["See [`Pallet::purge_keys`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 222,
          "path": ["pallet_session", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "InvalidProof",
                  "fields": [],
                  "index": 0,
                  "docs": ["Invalid ownership proof."]
                },
                {
                  "name": "NoAssociatedValidatorId",
                  "fields": [],
                  "index": 1,
                  "docs": ["No associated validator ID for account."]
                },
                {
                  "name": "DuplicatedKey",
                  "fields": [],
                  "index": 2,
                  "docs": ["Registered duplicate key."]
                },
                {
                  "name": "NoKeys",
                  "fields": [],
                  "index": 3,
                  "docs": ["No keys are associated with this account."]
                },
                {
                  "name": "NoAccount",
                  "fields": [],
                  "index": 4,
                  "docs": ["Key setting account is not live, so it's impossible to associate keys."]
                }
              ]
            }
          },
          "docs": ["Error for the session pallet."]
        },
        {
          "id": 223,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 217
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 224,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 224,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 217
            }
          },
          "docs": []
        },
        {
          "id": 225,
          "path": ["sp_consensus_slots", "Slot"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 226,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [225, 4]
            }
          },
          "docs": []
        },
        {
          "id": 227,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 228
            }
          },
          "docs": []
        },
        {
          "id": 228,
          "path": ["cumulus_pallet_xcmp_queue", "InboundChannelDetails"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "sender",
                  "typeId": 42,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "state",
                  "typeId": 229,
                  "typeName": "InboundState",
                  "docs": []
                },
                {
                  "name": "message_metadata",
                  "typeId": 230,
                  "typeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 229,
          "path": ["cumulus_pallet_xcmp_queue", "InboundState"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Suspended",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 230,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 231
            }
          },
          "docs": []
        },
        {
          "id": 231,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 232]
            }
          },
          "docs": []
        },
        {
          "id": 232,
          "path": ["polkadot_parachain_primitives", "primitives", "XcmpMessageFormat"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "ConcatenatedVersionedXcm",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ConcatenatedEncodedBlob",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Signals",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 233,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 4]
            }
          },
          "docs": []
        },
        {
          "id": 234,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 235
            }
          },
          "docs": []
        },
        {
          "id": 235,
          "path": ["cumulus_pallet_xcmp_queue", "OutboundChannelDetails"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "recipient",
                  "typeId": 42,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "state",
                  "typeId": 236,
                  "typeName": "OutboundState",
                  "docs": []
                },
                {
                  "name": "signals_exist",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "first_index",
                  "typeId": 108,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "last_index",
                  "typeId": 108,
                  "typeName": "u16",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 236,
          "path": ["cumulus_pallet_xcmp_queue", "OutboundState"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Suspended",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 237,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 108]
            }
          },
          "docs": []
        },
        {
          "id": 238,
          "path": ["cumulus_pallet_xcmp_queue", "QueueConfigData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "suspend_threshold",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "drop_threshold",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "resume_threshold",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "threshold_weight",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "weight_restrict_decay",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "xcmp_max_individual_weight",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 239,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [42, 4, 13]
            }
          },
          "docs": []
        },
        {
          "id": 240,
          "path": ["cumulus_pallet_xcmp_queue", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "service_overweight",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::service_overweight`]."]
                },
                {
                  "name": "suspend_xcm_execution",
                  "fields": [],
                  "index": 1,
                  "docs": ["See [`Pallet::suspend_xcm_execution`]."]
                },
                {
                  "name": "resume_xcm_execution",
                  "fields": [],
                  "index": 2,
                  "docs": ["See [`Pallet::resume_xcm_execution`]."]
                },
                {
                  "name": "update_suspend_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::update_suspend_threshold`]."]
                },
                {
                  "name": "update_drop_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::update_drop_threshold`]."]
                },
                {
                  "name": "update_resume_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::update_resume_threshold`]."]
                },
                {
                  "name": "update_threshold_weight",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::update_threshold_weight`]."]
                },
                {
                  "name": "update_weight_restrict_decay",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::update_weight_restrict_decay`]."]
                },
                {
                  "name": "update_xcmp_max_individual_weight",
                  "fields": [
                    {
                      "name": "new",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::update_xcmp_max_individual_weight`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 241,
          "path": ["cumulus_pallet_xcmp_queue", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "FailedToSend",
                  "fields": [],
                  "index": 0,
                  "docs": ["Failed to send XCM message."]
                },
                {
                  "name": "BadXcmOrigin",
                  "fields": [],
                  "index": 1,
                  "docs": ["Bad XCM origin."]
                },
                {
                  "name": "BadXcm",
                  "fields": [],
                  "index": 2,
                  "docs": ["Bad XCM data."]
                },
                {
                  "name": "BadOverweightIndex",
                  "fields": [],
                  "index": 3,
                  "docs": ["Bad overweight index."]
                },
                {
                  "name": "WeightOverLimit",
                  "fields": [],
                  "index": 4,
                  "docs": ["Provided weight is possibly not enough to execute the message."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 242,
          "path": ["pallet_xcm", "pallet", "QueryStatus"],
          "params": [
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Pending",
                  "fields": [
                    {
                      "name": "responder",
                      "typeId": 98,
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "maybe_match_querier",
                      "typeId": 243,
                      "typeName": "Option<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "maybe_notify",
                      "typeId": 244,
                      "typeName": "Option<(u8, u8)>",
                      "docs": []
                    },
                    {
                      "name": "timeout",
                      "typeId": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "VersionNotifier",
                  "fields": [
                    {
                      "name": "origin",
                      "typeId": 98,
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "is_active",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Ready",
                  "fields": [
                    {
                      "name": "response",
                      "typeId": 246,
                      "typeName": "VersionedResponse",
                      "docs": []
                    },
                    {
                      "name": "at",
                      "typeId": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 243,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 98
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 98,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 244,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 245
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 245,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 245,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [2, 2]
            }
          },
          "docs": []
        },
        {
          "id": 246,
          "path": ["xcm", "VersionedResponse"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V2",
                  "fields": [
                    {
                      "typeId": 247,
                      "typeName": "v2::Response",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 66,
                      "typeName": "v3::Response",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 247,
          "path": ["xcm", "v2", "Response"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ExecutionResult",
                  "fields": [
                    {
                      "typeId": 248,
                      "typeName": "Option<(u32, Error)>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Version",
                  "fields": [
                    {
                      "typeId": 4,
                      "typeName": "super::Version",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 248,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 249
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 249,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 249,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 250]
            }
          },
          "docs": []
        },
        {
          "id": 250,
          "path": ["xcm", "v2", "traits", "Error"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Unimplemented",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "UntrustedReserveLocation",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "UntrustedTeleportLocation",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "MultiLocationFull",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "MultiLocationNotInvertible",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "InvalidLocation",
                  "fields": [],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "AssetNotFound",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "FailedToTransactAsset",
                  "fields": [],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "NotWithdrawable",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "LocationCannotHold",
                  "fields": [],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ExceedsMaxMessageSize",
                  "fields": [],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DestinationUnsupported",
                  "fields": [],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "Transport",
                  "fields": [],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "Unroutable",
                  "fields": [],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "UnknownClaim",
                  "fields": [],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "FailedToDecode",
                  "fields": [],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "MaxWeightInvalid",
                  "fields": [],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "NotHoldingFees",
                  "fields": [],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "TooExpensive",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "UnhandledXcmVersion",
                  "fields": [],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "WeightLimitReached",
                  "fields": [
                    {
                      "typeId": 11,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "Barrier",
                  "fields": [],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "WeightNotComputable",
                  "fields": [],
                  "index": 25,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 251,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 98]
            }
          },
          "docs": []
        },
        {
          "id": 252,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [11, 9, 4]
            }
          },
          "docs": []
        },
        {
          "id": 253,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 254
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 255,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 254,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [98, 4]
            }
          },
          "docs": []
        },
        {
          "id": 255,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 254
            }
          },
          "docs": []
        },
        {
          "id": 256,
          "path": ["pallet_xcm", "pallet", "VersionMigrationStage"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "MigrateSupportedVersion",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "MigrateVersionNotifiers",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "NotifyCurrentTargets",
                  "fields": [
                    {
                      "typeId": 257,
                      "typeName": "Option<Vec<u8>>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "MigrateAndNotifyOldTargets",
                  "fields": [],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 257,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 13
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 13,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 258,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 0, 259]
            }
          },
          "docs": []
        },
        {
          "id": 259,
          "path": ["xcm", "VersionedAssetId"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 61,
                      "typeName": "v3::AssetId",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 260,
          "path": ["pallet_xcm", "pallet", "RemoteLockedFungibleRecord"],
          "params": [
            {
              "name": "ConsumerIdentifier",
              "typeId": 103
            },
            {
              "name": "MaxConsumers"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "u128",
                  "docs": []
                },
                {
                  "name": "owner",
                  "typeId": 98,
                  "typeName": "VersionedMultiLocation",
                  "docs": []
                },
                {
                  "name": "locker",
                  "typeId": 98,
                  "typeName": "VersionedMultiLocation",
                  "docs": []
                },
                {
                  "name": "consumers",
                  "typeId": 261,
                  "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 261,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 262
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 263,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 262,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [103, 6]
            }
          },
          "docs": []
        },
        {
          "id": 263,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 262
            }
          },
          "docs": []
        },
        {
          "id": 264,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 265
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 266,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 265,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [6, 98]
            }
          },
          "docs": []
        },
        {
          "id": 266,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 265
            }
          },
          "docs": []
        },
        {
          "id": 267,
          "path": ["pallet_xcm", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "send",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "typeId": 268,
                      "typeName": "Box<VersionedXcm<()>>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::send`]."]
                },
                {
                  "name": "teleport_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::teleport_assets`]."]
                },
                {
                  "name": "reserve_transfer_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::reserve_transfer_assets`]."]
                },
                {
                  "name": "execute",
                  "fields": [
                    {
                      "name": "message",
                      "typeId": 276,
                      "typeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::execute`]."]
                },
                {
                  "name": "force_xcm_version",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 45,
                      "typeName": "Box<MultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "version",
                      "typeId": 4,
                      "typeName": "XcmVersion",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::force_xcm_version`]."]
                },
                {
                  "name": "force_default_xcm_version",
                  "fields": [
                    {
                      "name": "maybe_xcm_version",
                      "typeId": 36,
                      "typeName": "Option<XcmVersion>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::force_default_xcm_version`]."]
                },
                {
                  "name": "force_subscribe_version_notify",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::force_subscribe_version_notify`]."]
                },
                {
                  "name": "force_unsubscribe_version_notify",
                  "fields": [
                    {
                      "name": "location",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::force_unsubscribe_version_notify`]."]
                },
                {
                  "name": "limited_reserve_transfer_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::limited_reserve_transfer_assets`]."]
                },
                {
                  "name": "limited_teleport_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 98,
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 84,
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::limited_teleport_assets`]."]
                },
                {
                  "name": "force_suspension",
                  "fields": [
                    {
                      "name": "suspended",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["See [`Pallet::force_suspension`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 268,
          "path": ["xcm", "VersionedXcm"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V2",
                  "fields": [
                    {
                      "typeId": 269,
                      "typeName": "v2::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 55,
                      "typeName": "v3::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 269,
          "path": ["xcm", "v2", "Xcm"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 270,
                  "typeName": "Vec<Instruction<RuntimeCall>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 270,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 271
            }
          },
          "docs": []
        },
        {
          "id": 271,
          "path": ["xcm", "v2", "Instruction"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "typeId": 247,
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "typeId": 76,
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 77,
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "typeId": 90,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "typeId": 87,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 275,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "typeId": 269,
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "typeId": 269,
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": 27,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 272,
          "path": ["xcm", "v2", "multiasset", "MultiAssetFilter"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Definite",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Wild",
                  "fields": [
                    {
                      "typeId": 273,
                      "typeName": "WildMultiAsset",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 273,
          "path": ["xcm", "v2", "multiasset", "WildMultiAsset"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "All",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "AllOf",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 88,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "typeId": 274,
                      "typeName": "WildFungibility",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 274,
          "path": ["xcm", "v2", "multiasset", "WildFungibility"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Fungible",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 275,
          "path": ["xcm", "v2", "WeightLimit"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unlimited",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Limited",
                  "fields": [
                    {
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 276,
          "path": ["xcm", "VersionedXcm"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "V2",
                  "fields": [
                    {
                      "typeId": 277,
                      "typeName": "v2::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "V3",
                  "fields": [
                    {
                      "typeId": 281,
                      "typeName": "v3::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 277,
          "path": ["xcm", "v2", "Xcm"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 278,
                  "typeName": "Vec<Instruction<RuntimeCall>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 278,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 279
            }
          },
          "docs": []
        },
        {
          "id": 279,
          "path": ["xcm", "v2", "Instruction"],
          "params": [
            {
              "name": "RuntimeCall"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "typeId": 247,
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "typeId": 76,
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 280,
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "typeId": 90,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 269,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 272,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "typeId": 87,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 275,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "typeId": 277,
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "typeId": 277,
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 85,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "typeId": 89,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": 27,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 280,
          "path": ["xcm", "double_encoded", "DoubleEncoded"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "encoded",
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 281,
          "path": ["xcm", "v3", "Xcm"],
          "params": [
            {
              "name": "Call"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 282,
                  "typeName": "Vec<Instruction<Call>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 282,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 283
            }
          },
          "docs": []
        },
        {
          "id": 283,
          "path": ["xcm", "v3", "Instruction"],
          "params": [
            {
              "name": "Call"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "typeId": 66,
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "querier",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_kind",
                      "typeId": 76,
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 280,
                      "typeName": "DoubleEncoded<Call>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "typeId": 46,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "want",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "maximal",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "ReportHolding",
                  "fields": [
                    {
                      "name": "response_info",
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "typeId": 79,
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "typeId": 281,
                      "typeName": "Xcm<Call>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "typeId": 281,
                      "typeName": "Xcm<Call>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "typeId": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "typeId": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": 27,
                  "docs": []
                },
                {
                  "name": "BurnAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": []
                },
                {
                  "name": "ExpectAsset",
                  "fields": [
                    {
                      "typeId": 58,
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": []
                },
                {
                  "name": "ExpectOrigin",
                  "fields": [
                    {
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "ExpectError",
                  "fields": [
                    {
                      "typeId": 67,
                      "typeName": "Option<(u32, Error)>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "ExpectTransactStatus",
                  "fields": [
                    {
                      "typeId": 73,
                      "typeName": "MaybeErrorCode",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "QueryPallet",
                  "fields": [
                    {
                      "name": "module_name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "response_info",
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "ExpectPallet",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "module_name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "crate_major",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "min_crate_minor",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": []
                },
                {
                  "name": "ReportTransactStatus",
                  "fields": [
                    {
                      "typeId": 78,
                      "typeName": "QueryResponseInfo",
                      "docs": []
                    }
                  ],
                  "index": 35,
                  "docs": []
                },
                {
                  "name": "ClearTransactStatus",
                  "fields": [],
                  "index": 36,
                  "docs": []
                },
                {
                  "name": "UniversalOrigin",
                  "fields": [
                    {
                      "typeId": 47,
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": 37,
                  "docs": []
                },
                {
                  "name": "ExportMessage",
                  "fields": [
                    {
                      "name": "network",
                      "typeId": 50,
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 46,
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "typeId": 55,
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": 38,
                  "docs": []
                },
                {
                  "name": "LockAsset",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "unlocker",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 39,
                  "docs": []
                },
                {
                  "name": "UnlockAsset",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "NoteUnlockable",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "RequestUnlock",
                  "fields": [
                    {
                      "name": "asset",
                      "typeId": 60,
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "locker",
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "SetFeesMode",
                  "fields": [
                    {
                      "name": "jit_withdraw",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 43,
                  "docs": []
                },
                {
                  "name": "SetTopic",
                  "fields": [
                    {
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 44,
                  "docs": []
                },
                {
                  "name": "ClearTopic",
                  "fields": [],
                  "index": 45,
                  "docs": []
                },
                {
                  "name": "AliasOrigin",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 46,
                  "docs": []
                },
                {
                  "name": "UnpaidExecution",
                  "fields": [
                    {
                      "name": "weight_limit",
                      "typeId": 83,
                      "typeName": "WeightLimit",
                      "docs": []
                    },
                    {
                      "name": "check_origin",
                      "typeId": 75,
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": 47,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 284,
          "path": ["pallet_xcm", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unreachable",
                  "fields": [],
                  "index": 0,
                  "docs": [
                    "The desired destination was unreachable, generally because there is a no way of routing",
                    "to it."
                  ]
                },
                {
                  "name": "SendFailure",
                  "fields": [],
                  "index": 1,
                  "docs": [
                    "There was some other issue (i.e. not to do with routing) in sending the message.",
                    "Perhaps a lack of space for buffering the message."
                  ]
                },
                {
                  "name": "Filtered",
                  "fields": [],
                  "index": 2,
                  "docs": ["The message execution fails the filter."]
                },
                {
                  "name": "UnweighableMessage",
                  "fields": [],
                  "index": 3,
                  "docs": ["The message's weight could not be determined."]
                },
                {
                  "name": "DestinationNotInvertible",
                  "fields": [],
                  "index": 4,
                  "docs": ["The destination `MultiLocation` provided cannot be inverted."]
                },
                {
                  "name": "Empty",
                  "fields": [],
                  "index": 5,
                  "docs": ["The assets to be sent are empty."]
                },
                {
                  "name": "CannotReanchor",
                  "fields": [],
                  "index": 6,
                  "docs": ["Could not re-anchor the assets to declare the fees for the destination chain."]
                },
                {
                  "name": "TooManyAssets",
                  "fields": [],
                  "index": 7,
                  "docs": ["Too many assets have been attempted for transfer."]
                },
                {
                  "name": "InvalidOrigin",
                  "fields": [],
                  "index": 8,
                  "docs": ["Origin is invalid for sending."]
                },
                {
                  "name": "BadVersion",
                  "fields": [],
                  "index": 9,
                  "docs": ["The version of the `Versioned` value used is not able to be interpreted."]
                },
                {
                  "name": "BadLocation",
                  "fields": [],
                  "index": 10,
                  "docs": [
                    "The given location could not be used (e.g. because it cannot be expressed in the",
                    "desired version of XCM)."
                  ]
                },
                {
                  "name": "NoSubscription",
                  "fields": [],
                  "index": 11,
                  "docs": ["The referenced subscription could not be found."]
                },
                {
                  "name": "AlreadySubscribed",
                  "fields": [],
                  "index": 12,
                  "docs": ["The location is invalid since it already has a subscription from us."]
                },
                {
                  "name": "InvalidAsset",
                  "fields": [],
                  "index": 13,
                  "docs": ["Invalid asset for the operation."]
                },
                {
                  "name": "LowBalance",
                  "fields": [],
                  "index": 14,
                  "docs": ["The owner does not own (all) of the asset that they wish to do the operation on."]
                },
                {
                  "name": "TooManyLocks",
                  "fields": [],
                  "index": 15,
                  "docs": ["The asset owner has too many locks on the asset."]
                },
                {
                  "name": "AccountNotSovereign",
                  "fields": [],
                  "index": 16,
                  "docs": ["The given account is not an identifiable sovereign account for any location."]
                },
                {
                  "name": "FeesNotMet",
                  "fields": [],
                  "index": 17,
                  "docs": ["The operation required fees to be paid which the initiator could not meet."]
                },
                {
                  "name": "LockNotFound",
                  "fields": [],
                  "index": 18,
                  "docs": ["A remote lock with the corresponding data could not be found."]
                },
                {
                  "name": "InUse",
                  "fields": [],
                  "index": 19,
                  "docs": ["The unlock operation cannot succeed because there are still consumers of the lock."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 285,
          "path": ["cumulus_pallet_xcm", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": []
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 286,
          "path": ["cumulus_pallet_dmp_queue", "ConfigData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "max_individual",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 287,
          "path": ["cumulus_pallet_dmp_queue", "PageIndexData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "begin_used",
                  "typeId": 4,
                  "typeName": "PageCounter",
                  "docs": []
                },
                {
                  "name": "end_used",
                  "typeId": 4,
                  "typeName": "PageCounter",
                  "docs": []
                },
                {
                  "name": "overweight_count",
                  "typeId": 11,
                  "typeName": "OverweightIndex",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 288,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 289
            }
          },
          "docs": []
        },
        {
          "id": 289,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 13]
            }
          },
          "docs": []
        },
        {
          "id": 290,
          "path": ["cumulus_pallet_dmp_queue", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "service_overweight",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 11,
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::service_overweight`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 291,
          "path": ["cumulus_pallet_dmp_queue", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Unknown",
                  "fields": [],
                  "index": 0,
                  "docs": ["The message index given is unknown."]
                },
                {
                  "name": "OverLimit",
                  "fields": [],
                  "index": 1,
                  "docs": ["The amount of weight given is possibly not enough for executing the message."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 292,
          "path": ["bp_xcm_bridge_hub_router", "BridgeState"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "delivery_fee_factor",
                  "typeId": 176,
                  "typeName": "FixedU128",
                  "docs": []
                },
                {
                  "name": "is_congested",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 293,
          "path": ["pallet_xcm_bridge_hub_router", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "report_bridge_status",
                  "fields": [
                    {
                      "name": "bridge_id",
                      "typeId": 12,
                      "typeName": "H256",
                      "docs": []
                    },
                    {
                      "name": "is_congested",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::report_bridge_status`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 294,
          "path": ["pallet_utility", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "batch",
                  "fields": [
                    {
                      "name": "calls",
                      "typeId": 295,
                      "typeName": "Vec<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::batch`]."]
                },
                {
                  "name": "as_derivative",
                  "fields": [
                    {
                      "name": "index",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::as_derivative`]."]
                },
                {
                  "name": "batch_all",
                  "fields": [
                    {
                      "name": "calls",
                      "typeId": 295,
                      "typeName": "Vec<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::batch_all`]."]
                },
                {
                  "name": "dispatch_as",
                  "fields": [
                    {
                      "name": "as_origin",
                      "typeId": 331,
                      "typeName": "Box<T::PalletsOrigin>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::dispatch_as`]."]
                },
                {
                  "name": "force_batch",
                  "fields": [
                    {
                      "name": "calls",
                      "typeId": 295,
                      "typeName": "Vec<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::force_batch`]."]
                },
                {
                  "name": "with_weight",
                  "fields": [
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::with_weight`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 295,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 296
            }
          },
          "docs": []
        },
        {
          "id": 296,
          "path": ["asset_hub_polkadot_runtime", "RuntimeCall"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "typeId": 130,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ParachainSystem",
                  "fields": [
                    {
                      "typeId": 178,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Timestamp",
                  "fields": [
                    {
                      "typeId": 188,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "typeId": 203,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "CollatorSelection",
                  "fields": [
                    {
                      "typeId": 212,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CollatorSelection, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "typeId": 221,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "XcmpQueue",
                  "fields": [
                    {
                      "typeId": 240,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "typeId": 267,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "DmpQueue",
                  "fields": [
                    {
                      "typeId": 290,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "ToKusamaXcmRouter",
                  "fields": [
                    {
                      "typeId": 293,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ToKusamaXcmRouter, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": []
                },
                {
                  "name": "Utility",
                  "fields": [
                    {
                      "typeId": 294,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "Multisig",
                  "fields": [
                    {
                      "typeId": 297,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "Proxy",
                  "fields": [
                    {
                      "typeId": 299,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "typeId": 301,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Assets, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 50,
                  "docs": []
                },
                {
                  "name": "Uniques",
                  "fields": [
                    {
                      "typeId": 302,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Uniques, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 51,
                  "docs": []
                },
                {
                  "name": "Nfts",
                  "fields": [
                    {
                      "typeId": 306,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nfts, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 52,
                  "docs": []
                },
                {
                  "name": "ForeignAssets",
                  "fields": [
                    {
                      "typeId": 330,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ForeignAssets, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 53,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 297,
          "path": ["pallet_multisig", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "as_multi_threshold_1",
                  "fields": [
                    {
                      "name": "other_signatories",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::as_multi_threshold_1`]."]
                },
                {
                  "name": "as_multi",
                  "fields": [
                    {
                      "name": "threshold",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "other_signatories",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "maybe_timepoint",
                      "typeId": 298,
                      "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::as_multi`]."]
                },
                {
                  "name": "approve_as_multi",
                  "fields": [
                    {
                      "name": "threshold",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "other_signatories",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "maybe_timepoint",
                      "typeId": 298,
                      "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "typeId": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::approve_as_multi`]."]
                },
                {
                  "name": "cancel_as_multi",
                  "fields": [
                    {
                      "name": "threshold",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "other_signatories",
                      "typeId": 38,
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "timepoint",
                      "typeId": 105,
                      "typeName": "Timepoint<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::cancel_as_multi`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 298,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 105
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 105,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 299,
          "path": ["pallet_proxy", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "proxy",
                  "fields": [
                    {
                      "name": "real",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "force_proxy_type",
                      "typeId": 300,
                      "typeName": "Option<T::ProxyType>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::proxy`]."]
                },
                {
                  "name": "add_proxy",
                  "fields": [
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::add_proxy`]."]
                },
                {
                  "name": "remove_proxy",
                  "fields": [
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::remove_proxy`]."]
                },
                {
                  "name": "remove_proxies",
                  "fields": [],
                  "index": 3,
                  "docs": ["See [`Pallet::remove_proxies`]."]
                },
                {
                  "name": "create_pure",
                  "fields": [
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::create_pure`]."]
                },
                {
                  "name": "kill_pure",
                  "fields": [
                    {
                      "name": "spawner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "typeId": 107,
                      "typeName": "T::ProxyType",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "typeId": 108,
                      "typeName": "u16",
                      "docs": []
                    },
                    {
                      "name": "height",
                      "typeId": 48,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    },
                    {
                      "name": "ext_index",
                      "typeId": 48,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::kill_pure`]."]
                },
                {
                  "name": "announce",
                  "fields": [
                    {
                      "name": "real",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 12,
                      "typeName": "CallHashOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::announce`]."]
                },
                {
                  "name": "remove_announcement",
                  "fields": [
                    {
                      "name": "real",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 12,
                      "typeName": "CallHashOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::remove_announcement`]."]
                },
                {
                  "name": "reject_announcement",
                  "fields": [
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "typeId": 12,
                      "typeName": "CallHashOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::reject_announcement`]."]
                },
                {
                  "name": "proxy_announced",
                  "fields": [
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "real",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "force_proxy_type",
                      "typeId": 300,
                      "typeName": "Option<T::ProxyType>",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "typeId": 296,
                      "typeName": "Box<<T as Config>::RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::proxy_announced`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 300,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 107
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 107,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 301,
          "path": ["pallet_assets", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "create",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::create`]."]
                },
                {
                  "name": "force_create",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "is_sufficient",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::force_create`]."]
                },
                {
                  "name": "start_destroy",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::start_destroy`]."]
                },
                {
                  "name": "destroy_accounts",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::destroy_accounts`]."]
                },
                {
                  "name": "destroy_approvals",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::destroy_approvals`]."]
                },
                {
                  "name": "finish_destroy",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::finish_destroy`]."]
                },
                {
                  "name": "mint",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::mint`]."]
                },
                {
                  "name": "burn",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::burn`]."]
                },
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::transfer`]."]
                },
                {
                  "name": "transfer_keep_alive",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::transfer_keep_alive`]."]
                },
                {
                  "name": "force_transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "source",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["See [`Pallet::force_transfer`]."]
                },
                {
                  "name": "freeze",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["See [`Pallet::freeze`]."]
                },
                {
                  "name": "thaw",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["See [`Pallet::thaw`]."]
                },
                {
                  "name": "freeze_asset",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["See [`Pallet::freeze_asset`]."]
                },
                {
                  "name": "thaw_asset",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["See [`Pallet::thaw_asset`]."]
                },
                {
                  "name": "transfer_ownership",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["See [`Pallet::transfer_ownership`]."]
                },
                {
                  "name": "set_team",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["See [`Pallet::set_team`]."]
                },
                {
                  "name": "set_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["See [`Pallet::set_metadata`]."]
                },
                {
                  "name": "clear_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["See [`Pallet::clear_metadata`]."]
                },
                {
                  "name": "force_set_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["See [`Pallet::force_set_metadata`]."]
                },
                {
                  "name": "force_clear_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["See [`Pallet::force_clear_metadata`]."]
                },
                {
                  "name": "force_asset_status",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "is_sufficient",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["See [`Pallet::force_asset_status`]."]
                },
                {
                  "name": "approve_transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["See [`Pallet::approve_transfer`]."]
                },
                {
                  "name": "cancel_approval",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["See [`Pallet::cancel_approval`]."]
                },
                {
                  "name": "force_cancel_approval",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["See [`Pallet::force_cancel_approval`]."]
                },
                {
                  "name": "transfer_approved",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["See [`Pallet::transfer_approved`]."]
                },
                {
                  "name": "touch",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": ["See [`Pallet::touch`]."]
                },
                {
                  "name": "refund",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "allow_burn",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 27,
                  "docs": ["See [`Pallet::refund`]."]
                },
                {
                  "name": "set_min_balance",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": ["See [`Pallet::set_min_balance`]."]
                },
                {
                  "name": "touch_other",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": ["See [`Pallet::touch_other`]."]
                },
                {
                  "name": "refund_other",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": ["See [`Pallet::refund_other`]."]
                },
                {
                  "name": "block",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 48,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": ["See [`Pallet::block`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 302,
          "path": ["pallet_uniques", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "create",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::create`]."]
                },
                {
                  "name": "force_create",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "free_holding",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::force_create`]."]
                },
                {
                  "name": "destroy",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "witness",
                      "typeId": 303,
                      "typeName": "DestroyWitness",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::destroy`]."]
                },
                {
                  "name": "mint",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::mint`]."]
                },
                {
                  "name": "burn",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "check_owner",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::burn`]."]
                },
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::transfer`]."]
                },
                {
                  "name": "redeposit",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "items",
                      "typeId": 112,
                      "typeName": "Vec<T::ItemId>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::redeposit`]."]
                },
                {
                  "name": "freeze",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::freeze`]."]
                },
                {
                  "name": "thaw",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::thaw`]."]
                },
                {
                  "name": "freeze_collection",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::freeze_collection`]."]
                },
                {
                  "name": "thaw_collection",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["See [`Pallet::thaw_collection`]."]
                },
                {
                  "name": "transfer_ownership",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["See [`Pallet::transfer_ownership`]."]
                },
                {
                  "name": "set_team",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["See [`Pallet::set_team`]."]
                },
                {
                  "name": "approve_transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["See [`Pallet::approve_transfer`]."]
                },
                {
                  "name": "cancel_approval",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "maybe_check_delegate",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["See [`Pallet::cancel_approval`]."]
                },
                {
                  "name": "force_item_status",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "free_holding",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["See [`Pallet::force_item_status`]."]
                },
                {
                  "name": "set_attribute",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 113,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["See [`Pallet::set_attribute`]."]
                },
                {
                  "name": "clear_attribute",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 113,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["See [`Pallet::clear_attribute`]."]
                },
                {
                  "name": "set_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 111,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["See [`Pallet::set_metadata`]."]
                },
                {
                  "name": "clear_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["See [`Pallet::clear_metadata`]."]
                },
                {
                  "name": "set_collection_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 111,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["See [`Pallet::set_collection_metadata`]."]
                },
                {
                  "name": "clear_collection_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["See [`Pallet::clear_collection_metadata`]."]
                },
                {
                  "name": "set_accept_ownership",
                  "fields": [
                    {
                      "name": "maybe_collection",
                      "typeId": 36,
                      "typeName": "Option<T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["See [`Pallet::set_accept_ownership`]."]
                },
                {
                  "name": "set_collection_max_supply",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "max_supply",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["See [`Pallet::set_collection_max_supply`]."]
                },
                {
                  "name": "set_price",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 305,
                      "typeName": "Option<ItemPrice<T, I>>",
                      "docs": []
                    },
                    {
                      "name": "whitelisted_buyer",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["See [`Pallet::set_price`]."]
                },
                {
                  "name": "buy_item",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "bid_price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["See [`Pallet::buy_item`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 303,
          "path": ["pallet_uniques", "types", "DestroyWitness"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "items",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "item_metadatas",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 304,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 204
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 204,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 305,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 6,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 306,
          "path": ["pallet_nfts", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "create",
                  "fields": [
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "config",
                      "typeId": 307,
                      "typeName": "CollectionConfigFor<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::create`]."]
                },
                {
                  "name": "force_create",
                  "fields": [
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "config",
                      "typeId": 307,
                      "typeName": "CollectionConfigFor<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::force_create`]."]
                },
                {
                  "name": "destroy",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "witness",
                      "typeId": 314,
                      "typeName": "DestroyWitness",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::destroy`]."]
                },
                {
                  "name": "mint",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "mint_to",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "witness_data",
                      "typeId": 315,
                      "typeName": "Option<MintWitness<T::ItemId, DepositBalanceOf<T, I>>>",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::mint`]."]
                },
                {
                  "name": "force_mint",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "mint_to",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "item_config",
                      "typeId": 317,
                      "typeName": "ItemConfig",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::force_mint`]."]
                },
                {
                  "name": "burn",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::burn`]."]
                },
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::transfer`]."]
                },
                {
                  "name": "redeposit",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "items",
                      "typeId": 112,
                      "typeName": "Vec<T::ItemId>",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::redeposit`]."]
                },
                {
                  "name": "lock_item_transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::lock_item_transfer`]."]
                },
                {
                  "name": "unlock_item_transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::unlock_item_transfer`]."]
                },
                {
                  "name": "lock_collection",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "lock_settings",
                      "typeId": 308,
                      "typeName": "CollectionSettings",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["See [`Pallet::lock_collection`]."]
                },
                {
                  "name": "transfer_ownership",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["See [`Pallet::transfer_ownership`]."]
                },
                {
                  "name": "set_team",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["See [`Pallet::set_team`]."]
                },
                {
                  "name": "force_collection_owner",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["See [`Pallet::force_collection_owner`]."]
                },
                {
                  "name": "force_collection_config",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "config",
                      "typeId": 307,
                      "typeName": "CollectionConfigFor<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["See [`Pallet::force_collection_config`]."]
                },
                {
                  "name": "approve_transfer",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "maybe_deadline",
                      "typeId": 36,
                      "typeName": "Option<BlockNumberFor<T>>",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["See [`Pallet::approve_transfer`]."]
                },
                {
                  "name": "cancel_approval",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["See [`Pallet::cancel_approval`]."]
                },
                {
                  "name": "clear_all_transfer_approvals",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["See [`Pallet::clear_all_transfer_approvals`]."]
                },
                {
                  "name": "lock_item_properties",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "lock_metadata",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "lock_attributes",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["See [`Pallet::lock_item_properties`]."]
                },
                {
                  "name": "set_attribute",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["See [`Pallet::set_attribute`]."]
                },
                {
                  "name": "force_set_attribute",
                  "fields": [
                    {
                      "name": "set_as",
                      "typeId": 115,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::ValueLimit>",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["See [`Pallet::force_set_attribute`]."]
                },
                {
                  "name": "clear_attribute",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "typeId": 118,
                      "typeName": "AttributeNamespace<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "typeId": 114,
                      "typeName": "BoundedVec<u8, T::KeyLimit>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["See [`Pallet::clear_attribute`]."]
                },
                {
                  "name": "approve_item_attributes",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["See [`Pallet::approve_item_attributes`]."]
                },
                {
                  "name": "cancel_item_attributes_approval",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "witness",
                      "typeId": 318,
                      "typeName": "CancelAttributesApprovalWitness",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["See [`Pallet::cancel_item_attributes_approval`]."]
                },
                {
                  "name": "set_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["See [`Pallet::set_metadata`]."]
                },
                {
                  "name": "clear_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["See [`Pallet::clear_metadata`]."]
                },
                {
                  "name": "set_collection_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "typeId": 117,
                      "typeName": "BoundedVec<u8, T::StringLimit>",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": ["See [`Pallet::set_collection_metadata`]."]
                },
                {
                  "name": "clear_collection_metadata",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 27,
                  "docs": ["See [`Pallet::clear_collection_metadata`]."]
                },
                {
                  "name": "set_accept_ownership",
                  "fields": [
                    {
                      "name": "maybe_collection",
                      "typeId": 36,
                      "typeName": "Option<T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": ["See [`Pallet::set_accept_ownership`]."]
                },
                {
                  "name": "set_collection_max_supply",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "max_supply",
                      "typeId": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": ["See [`Pallet::set_collection_max_supply`]."]
                },
                {
                  "name": "update_mint_settings",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "mint_settings",
                      "typeId": 310,
                      "typeName": "MintSettings<BalanceOf<T, I>, BlockNumberFor<T>, T::CollectionId>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": ["See [`Pallet::update_mint_settings`]."]
                },
                {
                  "name": "set_price",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "typeId": 305,
                      "typeName": "Option<ItemPrice<T, I>>",
                      "docs": []
                    },
                    {
                      "name": "whitelisted_buyer",
                      "typeId": 304,
                      "typeName": "Option<AccountIdLookupOf<T>>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": ["See [`Pallet::set_price`]."]
                },
                {
                  "name": "buy_item",
                  "fields": [
                    {
                      "name": "collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "bid_price",
                      "typeId": 6,
                      "typeName": "ItemPrice<T, I>",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": ["See [`Pallet::buy_item`]."]
                },
                {
                  "name": "pay_tips",
                  "fields": [
                    {
                      "name": "tips",
                      "typeId": 319,
                      "typeName": "BoundedVec<ItemTipOf<T, I>, T::MaxTips>",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": ["See [`Pallet::pay_tips`]."]
                },
                {
                  "name": "create_swap",
                  "fields": [
                    {
                      "name": "offered_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "offered_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "desired_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "maybe_desired_item",
                      "typeId": 36,
                      "typeName": "Option<T::ItemId>",
                      "docs": []
                    },
                    {
                      "name": "maybe_price",
                      "typeId": 119,
                      "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                      "docs": []
                    },
                    {
                      "name": "duration",
                      "typeId": 4,
                      "typeName": "BlockNumberFor<T>",
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": ["See [`Pallet::create_swap`]."]
                },
                {
                  "name": "cancel_swap",
                  "fields": [
                    {
                      "name": "offered_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "offered_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    }
                  ],
                  "index": 35,
                  "docs": ["See [`Pallet::cancel_swap`]."]
                },
                {
                  "name": "claim_swap",
                  "fields": [
                    {
                      "name": "send_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "send_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "receive_collection",
                      "typeId": 4,
                      "typeName": "T::CollectionId",
                      "docs": []
                    },
                    {
                      "name": "receive_item",
                      "typeId": 4,
                      "typeName": "T::ItemId",
                      "docs": []
                    },
                    {
                      "name": "witness_price",
                      "typeId": 119,
                      "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                      "docs": []
                    }
                  ],
                  "index": 36,
                  "docs": ["See [`Pallet::claim_swap`]."]
                },
                {
                  "name": "mint_pre_signed",
                  "fields": [
                    {
                      "name": "mint_data",
                      "typeId": 322,
                      "typeName": "Box<PreSignedMintOf<T, I>>",
                      "docs": []
                    },
                    {
                      "name": "signature",
                      "typeId": 323,
                      "typeName": "T::OffchainSignature",
                      "docs": []
                    },
                    {
                      "name": "signer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 37,
                  "docs": ["See [`Pallet::mint_pre_signed`]."]
                },
                {
                  "name": "set_attributes_pre_signed",
                  "fields": [
                    {
                      "name": "data",
                      "typeId": 329,
                      "typeName": "PreSignedAttributesOf<T, I>",
                      "docs": []
                    },
                    {
                      "name": "signature",
                      "typeId": 323,
                      "typeName": "T::OffchainSignature",
                      "docs": []
                    },
                    {
                      "name": "signer",
                      "typeId": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": 38,
                  "docs": ["See [`Pallet::set_attributes_pre_signed`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 307,
          "path": ["pallet_nfts", "types", "CollectionConfig"],
          "params": [
            {
              "name": "Price",
              "typeId": 6
            },
            {
              "name": "BlockNumber",
              "typeId": 4
            },
            {
              "name": "CollectionId",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "settings",
                  "typeId": 308,
                  "typeName": "CollectionSettings",
                  "docs": []
                },
                {
                  "name": "max_supply",
                  "typeId": 36,
                  "typeName": "Option<u32>",
                  "docs": []
                },
                {
                  "name": "mint_settings",
                  "typeId": 310,
                  "typeName": "MintSettings<Price, BlockNumber, CollectionId>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 308,
          "path": ["pallet_nfts", "types", "BitFlags"],
          "params": [
            {
              "name": "T",
              "typeId": 309
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 11,
                  "typeName": "CollectionSetting",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 309,
          "path": ["pallet_nfts", "types", "CollectionSetting"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "TransferableItems",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "UnlockedMetadata",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "UnlockedAttributes",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "UnlockedMaxSupply",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "DepositRequired",
                  "fields": [],
                  "index": 16,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 310,
          "path": ["pallet_nfts", "types", "MintSettings"],
          "params": [
            {
              "name": "Price",
              "typeId": 6
            },
            {
              "name": "BlockNumber",
              "typeId": 4
            },
            {
              "name": "CollectionId",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "mint_type",
                  "typeId": 311,
                  "typeName": "MintType<CollectionId>",
                  "docs": []
                },
                {
                  "name": "price",
                  "typeId": 305,
                  "typeName": "Option<Price>",
                  "docs": []
                },
                {
                  "name": "start_block",
                  "typeId": 36,
                  "typeName": "Option<BlockNumber>",
                  "docs": []
                },
                {
                  "name": "end_block",
                  "typeId": 36,
                  "typeName": "Option<BlockNumber>",
                  "docs": []
                },
                {
                  "name": "default_item_settings",
                  "typeId": 312,
                  "typeName": "ItemSettings",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 311,
          "path": ["pallet_nfts", "types", "MintType"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Issuer",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Public",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "HolderOf",
                  "fields": [
                    {
                      "typeId": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 312,
          "path": ["pallet_nfts", "types", "BitFlags"],
          "params": [
            {
              "name": "T",
              "typeId": 313
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 11,
                  "typeName": "ItemSetting",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 313,
          "path": ["pallet_nfts", "types", "ItemSetting"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Transferable",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "UnlockedMetadata",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "UnlockedAttributes",
                  "fields": [],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 314,
          "path": ["pallet_nfts", "types", "DestroyWitness"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "item_metadatas",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "item_configs",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 48,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 315,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 316
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 316,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 316,
          "path": ["pallet_nfts", "types", "MintWitness"],
          "params": [
            {
              "name": "ItemId",
              "typeId": 4
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owned_item",
                  "typeId": 36,
                  "typeName": "Option<ItemId>",
                  "docs": []
                },
                {
                  "name": "mint_price",
                  "typeId": 305,
                  "typeName": "Option<Balance>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 317,
          "path": ["pallet_nfts", "types", "ItemConfig"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "settings",
                  "typeId": 312,
                  "typeName": "ItemSettings",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 318,
          "path": ["pallet_nfts", "types", "CancelAttributesApprovalWitness"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "account_attributes",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 319,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 320
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 321,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 320,
          "path": ["pallet_nfts", "types", "ItemTip"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            },
            {
              "name": "ItemId",
              "typeId": 4
            },
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Amount",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "collection",
                  "typeId": 4,
                  "typeName": "CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "typeId": 4,
                  "typeName": "ItemId",
                  "docs": []
                },
                {
                  "name": "receiver",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Amount",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 321,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 320
            }
          },
          "docs": []
        },
        {
          "id": 322,
          "path": ["pallet_nfts", "types", "PreSignedMint"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            },
            {
              "name": "ItemId",
              "typeId": 4
            },
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Deadline",
              "typeId": 4
            },
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "collection",
                  "typeId": 4,
                  "typeName": "CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "typeId": 4,
                  "typeName": "ItemId",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 131,
                  "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
                  "docs": []
                },
                {
                  "name": "metadata",
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "only_account",
                  "typeId": 115,
                  "typeName": "Option<AccountId>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "typeId": 4,
                  "typeName": "Deadline",
                  "docs": []
                },
                {
                  "name": "mint_price",
                  "typeId": 305,
                  "typeName": "Option<Balance>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 323,
          "path": ["sp_runtime", "MultiSignature"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ed25519",
                  "fields": [
                    {
                      "typeId": 324,
                      "typeName": "ed25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Sr25519",
                  "fields": [
                    {
                      "typeId": 326,
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Ecdsa",
                  "fields": [
                    {
                      "typeId": 327,
                      "typeName": "ecdsa::Signature",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 324,
          "path": ["sp_core", "ed25519", "Signature"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 325,
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 325,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 64,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 326,
          "path": ["sp_core", "sr25519", "Signature"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 325,
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 327,
          "path": ["sp_core", "ecdsa", "Signature"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 328,
                  "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 328,
          "path": [],
          "params": [],
          "type": {
            "tag": "SizedVec",
            "value": {
              "len": 65,
              "typeParam": 2
            }
          },
          "docs": []
        },
        {
          "id": 329,
          "path": ["pallet_nfts", "types", "PreSignedAttributes"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            },
            {
              "name": "ItemId",
              "typeId": 4
            },
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Deadline",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "collection",
                  "typeId": 4,
                  "typeName": "CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "typeId": 4,
                  "typeName": "ItemId",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 131,
                  "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "typeId": 118,
                  "typeName": "AttributeNamespace<AccountId>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "typeId": 4,
                  "typeName": "Deadline",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 330,
          "path": ["pallet_assets", "pallet", "Call"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "create",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": ["See [`Pallet::create`]."]
                },
                {
                  "name": "force_create",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "is_sufficient",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": ["See [`Pallet::force_create`]."]
                },
                {
                  "name": "start_destroy",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": ["See [`Pallet::start_destroy`]."]
                },
                {
                  "name": "destroy_accounts",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": ["See [`Pallet::destroy_accounts`]."]
                },
                {
                  "name": "destroy_approvals",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": ["See [`Pallet::destroy_approvals`]."]
                },
                {
                  "name": "finish_destroy",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": ["See [`Pallet::finish_destroy`]."]
                },
                {
                  "name": "mint",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": ["See [`Pallet::mint`]."]
                },
                {
                  "name": "burn",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": ["See [`Pallet::burn`]."]
                },
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": ["See [`Pallet::transfer`]."]
                },
                {
                  "name": "transfer_keep_alive",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": ["See [`Pallet::transfer_keep_alive`]."]
                },
                {
                  "name": "force_transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "source",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": ["See [`Pallet::force_transfer`]."]
                },
                {
                  "name": "freeze",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": ["See [`Pallet::freeze`]."]
                },
                {
                  "name": "thaw",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": ["See [`Pallet::thaw`]."]
                },
                {
                  "name": "freeze_asset",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": ["See [`Pallet::freeze_asset`]."]
                },
                {
                  "name": "thaw_asset",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": ["See [`Pallet::thaw_asset`]."]
                },
                {
                  "name": "transfer_ownership",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": ["See [`Pallet::transfer_ownership`]."]
                },
                {
                  "name": "set_team",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": ["See [`Pallet::set_team`]."]
                },
                {
                  "name": "set_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": ["See [`Pallet::set_metadata`]."]
                },
                {
                  "name": "clear_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": ["See [`Pallet::clear_metadata`]."]
                },
                {
                  "name": "force_set_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "typeId": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": ["See [`Pallet::force_set_metadata`]."]
                },
                {
                  "name": "force_clear_metadata",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": ["See [`Pallet::force_clear_metadata`]."]
                },
                {
                  "name": "force_asset_status",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "is_sufficient",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": ["See [`Pallet::force_asset_status`]."]
                },
                {
                  "name": "approve_transfer",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": ["See [`Pallet::approve_transfer`]."]
                },
                {
                  "name": "cancel_approval",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": ["See [`Pallet::cancel_approval`]."]
                },
                {
                  "name": "force_cancel_approval",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "delegate",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": ["See [`Pallet::force_cancel_approval`]."]
                },
                {
                  "name": "transfer_approved",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "destination",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "typeId": 52,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": ["See [`Pallet::transfer_approved`]."]
                },
                {
                  "name": "touch",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": ["See [`Pallet::touch`]."]
                },
                {
                  "name": "refund",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "allow_burn",
                      "typeId": 82,
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": 27,
                  "docs": ["See [`Pallet::refund`]."]
                },
                {
                  "name": "set_min_balance",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "typeId": 6,
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": ["See [`Pallet::set_min_balance`]."]
                },
                {
                  "name": "touch_other",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": ["See [`Pallet::touch_other`]."]
                },
                {
                  "name": "refund_other",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": ["See [`Pallet::refund_other`]."]
                },
                {
                  "name": "block",
                  "fields": [
                    {
                      "name": "id",
                      "typeId": 45,
                      "typeName": "T::AssetIdParameter",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "typeId": 204,
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": ["See [`Pallet::block`]."]
                }
              ]
            }
          },
          "docs": ["Contains a variant per dispatchable extrinsic that this pallet has."]
        },
        {
          "id": 331,
          "path": ["asset_hub_polkadot_runtime", "OriginCaller"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "system",
                  "fields": [
                    {
                      "typeId": 332,
                      "typeName": "frame_system::Origin<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "typeId": 333,
                      "typeName": "pallet_xcm::Origin",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "CumulusXcm",
                  "fields": [
                    {
                      "typeId": 334,
                      "typeName": "cumulus_pallet_xcm::Origin",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "Void",
                  "fields": [
                    {
                      "typeId": 335,
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 332,
          "path": ["frame_support", "dispatch", "RawOrigin"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Root",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Signed",
                  "fields": [
                    {
                      "typeId": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "None",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 333,
          "path": ["pallet_xcm", "pallet", "Origin"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Xcm",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Response",
                  "fields": [
                    {
                      "typeId": 45,
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 334,
          "path": ["cumulus_pallet_xcm", "pallet", "Origin"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Relay",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "SiblingParachain",
                  "fields": [
                    {
                      "typeId": 42,
                      "typeName": "ParaId",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 335,
          "path": ["sp_core", "Void"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": []
            }
          },
          "docs": []
        },
        {
          "id": 336,
          "path": ["pallet_utility", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "TooManyCalls",
                  "fields": [],
                  "index": 0,
                  "docs": ["Too many calls batched."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 337,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [0, 1]
            }
          },
          "docs": []
        },
        {
          "id": 338,
          "path": ["pallet_multisig", "Multisig"],
          "params": [
            {
              "name": "BlockNumber",
              "typeId": 4
            },
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "MaxApprovals"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "when",
                  "typeId": 105,
                  "typeName": "Timepoint<BlockNumber>",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "depositor",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "approvals",
                  "typeId": 339,
                  "typeName": "BoundedVec<AccountId, MaxApprovals>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 339,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 0
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 38,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 340,
          "path": ["pallet_multisig", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "MinimumThreshold",
                  "fields": [],
                  "index": 0,
                  "docs": ["Threshold must be 2 or greater."]
                },
                {
                  "name": "AlreadyApproved",
                  "fields": [],
                  "index": 1,
                  "docs": ["Call is already approved by this signatory."]
                },
                {
                  "name": "NoApprovalsNeeded",
                  "fields": [],
                  "index": 2,
                  "docs": ["Call doesn't need any (more) approvals."]
                },
                {
                  "name": "TooFewSignatories",
                  "fields": [],
                  "index": 3,
                  "docs": ["There are too few signatories in the list."]
                },
                {
                  "name": "TooManySignatories",
                  "fields": [],
                  "index": 4,
                  "docs": ["There are too many signatories in the list."]
                },
                {
                  "name": "SignatoriesOutOfOrder",
                  "fields": [],
                  "index": 5,
                  "docs": ["The signatories were provided out of order; they should be ordered."]
                },
                {
                  "name": "SenderInSignatories",
                  "fields": [],
                  "index": 6,
                  "docs": ["The sender was contained in the other signatories; it shouldn't be."]
                },
                {
                  "name": "NotFound",
                  "fields": [],
                  "index": 7,
                  "docs": ["Multisig operation not found when attempting to cancel."]
                },
                {
                  "name": "NotOwner",
                  "fields": [],
                  "index": 8,
                  "docs": ["Only the account that originally created the multisig is able to cancel it."]
                },
                {
                  "name": "NoTimepoint",
                  "fields": [],
                  "index": 9,
                  "docs": ["No timepoint was given, yet the multisig operation is already underway."]
                },
                {
                  "name": "WrongTimepoint",
                  "fields": [],
                  "index": 10,
                  "docs": ["A different timepoint was given to the multisig operation that is underway."]
                },
                {
                  "name": "UnexpectedTimepoint",
                  "fields": [],
                  "index": 11,
                  "docs": ["A timepoint was given, yet no multisig operation is underway."]
                },
                {
                  "name": "MaxWeightTooLow",
                  "fields": [],
                  "index": 12,
                  "docs": ["The maximum weight information provided was too low."]
                },
                {
                  "name": "AlreadyStored",
                  "fields": [],
                  "index": 13,
                  "docs": ["The data to be stored is already stored."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 341,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [342, 6]
            }
          },
          "docs": []
        },
        {
          "id": 342,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 343
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 344,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 343,
          "path": ["pallet_proxy", "ProxyDefinition"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "ProxyType",
              "typeId": 107
            },
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "delegate",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "typeId": 107,
                  "typeName": "ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 344,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 343
            }
          },
          "docs": []
        },
        {
          "id": 345,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [346, 6]
            }
          },
          "docs": []
        },
        {
          "id": 346,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 347
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 348,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 347,
          "path": ["pallet_proxy", "Announcement"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Hash",
              "typeId": 12
            },
            {
              "name": "BlockNumber",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "real",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "typeId": 12,
                  "typeName": "Hash",
                  "docs": []
                },
                {
                  "name": "height",
                  "typeId": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 348,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 347
            }
          },
          "docs": []
        },
        {
          "id": 349,
          "path": ["pallet_proxy", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "TooMany",
                  "fields": [],
                  "index": 0,
                  "docs": ["There are too many proxies registered or too many announcements pending."]
                },
                {
                  "name": "NotFound",
                  "fields": [],
                  "index": 1,
                  "docs": ["Proxy registration not found."]
                },
                {
                  "name": "NotProxy",
                  "fields": [],
                  "index": 2,
                  "docs": ["Sender is not a proxy of the account to be proxied."]
                },
                {
                  "name": "Unproxyable",
                  "fields": [],
                  "index": 3,
                  "docs": ["A call which is incompatible with the proxy type's filter was attempted."]
                },
                {
                  "name": "Duplicate",
                  "fields": [],
                  "index": 4,
                  "docs": ["Account is already a proxy."]
                },
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 5,
                  "docs": ["Call may not be made by proxy because it may escalate its privileges."]
                },
                {
                  "name": "Unannounced",
                  "fields": [],
                  "index": 6,
                  "docs": ["Announcement, if made at all, was made too recently."]
                },
                {
                  "name": "NoSelfProxy",
                  "fields": [],
                  "index": 7,
                  "docs": ["Cannot add self as proxy."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 350,
          "path": ["pallet_assets", "types", "AssetDetails"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owner",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "supply",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "is_sufficient",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "accounts",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "sufficients",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "approvals",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "status",
                  "typeId": 351,
                  "typeName": "AssetStatus",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 351,
          "path": ["pallet_assets", "types", "AssetStatus"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Live",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Destroying",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 352,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 0]
            }
          },
          "docs": []
        },
        {
          "id": 353,
          "path": ["pallet_assets", "types", "AssetAccount"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "Extra",
              "typeId": 103
            },
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "balance",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "status",
                  "typeId": 354,
                  "typeName": "AccountStatus",
                  "docs": []
                },
                {
                  "name": "reason",
                  "typeId": 355,
                  "typeName": "ExistenceReason<DepositBalance, AccountId>",
                  "docs": []
                },
                {
                  "name": "extra",
                  "typeId": 103,
                  "typeName": "Extra",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 354,
          "path": ["pallet_assets", "types", "AccountStatus"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Liquid",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Blocked",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 355,
          "path": ["pallet_assets", "types", "ExistenceReason"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Consumer",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Sufficient",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "DepositHeld",
                  "fields": [
                    {
                      "typeId": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "DepositRefunded",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "DepositFrom",
                  "fields": [
                    {
                      "typeId": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "typeId": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 356,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 0, 0]
            }
          },
          "docs": []
        },
        {
          "id": 357,
          "path": ["pallet_assets", "types", "Approval"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 358,
          "path": ["pallet_assets", "types", "AssetMetadata"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "BoundedString",
              "typeId": 359
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "name",
                  "typeId": 359,
                  "typeName": "BoundedString",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "typeId": 359,
                  "typeName": "BoundedString",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 359,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 360,
          "path": ["pallet_assets", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "BalanceLow",
                  "fields": [],
                  "index": 0,
                  "docs": ["Account balance must be greater than or equal to the transfer amount."]
                },
                {
                  "name": "NoAccount",
                  "fields": [],
                  "index": 1,
                  "docs": ["The account to alter does not exist."]
                },
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 2,
                  "docs": ["The signing account has no permission to do the operation."]
                },
                {
                  "name": "Unknown",
                  "fields": [],
                  "index": 3,
                  "docs": ["The given asset ID is unknown."]
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 4,
                  "docs": ["The origin account is frozen."]
                },
                {
                  "name": "InUse",
                  "fields": [],
                  "index": 5,
                  "docs": ["The asset ID is already taken."]
                },
                {
                  "name": "BadWitness",
                  "fields": [],
                  "index": 6,
                  "docs": ["Invalid witness data given."]
                },
                {
                  "name": "MinBalanceZero",
                  "fields": [],
                  "index": 7,
                  "docs": ["Minimum balance should be non-zero."]
                },
                {
                  "name": "UnavailableConsumer",
                  "fields": [],
                  "index": 8,
                  "docs": [
                    "Unable to increment the consumer reference counters on the account. Either no provider",
                    "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                    "fewer then the maximum number of consumers has been reached."
                  ]
                },
                {
                  "name": "BadMetadata",
                  "fields": [],
                  "index": 9,
                  "docs": ["Invalid metadata given."]
                },
                {
                  "name": "Unapproved",
                  "fields": [],
                  "index": 10,
                  "docs": ["No approval exists that would allow the transfer."]
                },
                {
                  "name": "WouldDie",
                  "fields": [],
                  "index": 11,
                  "docs": ["The source account would not survive the transfer and it needs to stay alive."]
                },
                {
                  "name": "AlreadyExists",
                  "fields": [],
                  "index": 12,
                  "docs": ["The asset-account already exists."]
                },
                {
                  "name": "NoDeposit",
                  "fields": [],
                  "index": 13,
                  "docs": ["The asset-account doesn't have an associated deposit."]
                },
                {
                  "name": "WouldBurn",
                  "fields": [],
                  "index": 14,
                  "docs": ["The operation would result in funds being burned."]
                },
                {
                  "name": "LiveAsset",
                  "fields": [],
                  "index": 15,
                  "docs": [
                    "The asset is a live asset and is actively being used. Usually emit for operations such",
                    "as `start_destroy` which require the asset to be in a destroying state."
                  ]
                },
                {
                  "name": "AssetNotLive",
                  "fields": [],
                  "index": 16,
                  "docs": ["The asset is not live, and likely being destroyed."]
                },
                {
                  "name": "IncorrectStatus",
                  "fields": [],
                  "index": 17,
                  "docs": ["The asset status is not the expected status."]
                },
                {
                  "name": "NotFrozen",
                  "fields": [],
                  "index": 18,
                  "docs": ["The asset should be frozen before the given operation."]
                },
                {
                  "name": "CallbackFailed",
                  "fields": [],
                  "index": 19,
                  "docs": ["Callback action resulted in error"]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 361,
          "path": ["pallet_uniques", "types", "CollectionDetails"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owner",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "total_deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "free_holding",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "items",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "item_metadatas",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 362,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [0, 4, 4]
            }
          },
          "docs": []
        },
        {
          "id": 363,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [0, 4]
            }
          },
          "docs": []
        },
        {
          "id": 364,
          "path": ["pallet_uniques", "types", "ItemDetails"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owner",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "approved",
                  "typeId": 115,
                  "typeName": "Option<AccountId>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 365,
          "path": ["pallet_uniques", "types", "CollectionMetadata"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "StringLimit"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 111,
                  "typeName": "BoundedVec<u8, StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 366,
          "path": ["pallet_uniques", "types", "ItemMetadata"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "StringLimit"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 111,
                  "typeName": "BoundedVec<u8, StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 367,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 36, 113]
            }
          },
          "docs": []
        },
        {
          "id": 368,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [114, 6]
            }
          },
          "docs": []
        },
        {
          "id": 369,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [6, 115]
            }
          },
          "docs": []
        },
        {
          "id": 370,
          "path": ["pallet_uniques", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 0,
                  "docs": ["The signing account has no permission to do the operation."]
                },
                {
                  "name": "UnknownCollection",
                  "fields": [],
                  "index": 1,
                  "docs": ["The given item ID is unknown."]
                },
                {
                  "name": "AlreadyExists",
                  "fields": [],
                  "index": 2,
                  "docs": ["The item ID has already been used for an item."]
                },
                {
                  "name": "WrongOwner",
                  "fields": [],
                  "index": 3,
                  "docs": ["The owner turned out to be different to what was expected."]
                },
                {
                  "name": "BadWitness",
                  "fields": [],
                  "index": 4,
                  "docs": ["Invalid witness data given."]
                },
                {
                  "name": "InUse",
                  "fields": [],
                  "index": 5,
                  "docs": ["The item ID is already taken."]
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 6,
                  "docs": ["The item or collection is frozen."]
                },
                {
                  "name": "WrongDelegate",
                  "fields": [],
                  "index": 7,
                  "docs": ["The delegate turned out to be different to what was expected."]
                },
                {
                  "name": "NoDelegate",
                  "fields": [],
                  "index": 8,
                  "docs": ["There is no delegate approved."]
                },
                {
                  "name": "Unapproved",
                  "fields": [],
                  "index": 9,
                  "docs": ["No approval exists that would allow the transfer."]
                },
                {
                  "name": "Unaccepted",
                  "fields": [],
                  "index": 10,
                  "docs": ["The named owner has not signed ownership of the collection is acceptable."]
                },
                {
                  "name": "Locked",
                  "fields": [],
                  "index": 11,
                  "docs": ["The item is locked."]
                },
                {
                  "name": "MaxSupplyReached",
                  "fields": [],
                  "index": 12,
                  "docs": ["All items have been minted."]
                },
                {
                  "name": "MaxSupplyAlreadySet",
                  "fields": [],
                  "index": 13,
                  "docs": ["The max supply has already been set."]
                },
                {
                  "name": "MaxSupplyTooSmall",
                  "fields": [],
                  "index": 14,
                  "docs": ["The provided max supply is less to the amount of items a collection already has."]
                },
                {
                  "name": "UnknownItem",
                  "fields": [],
                  "index": 15,
                  "docs": ["The given item ID is unknown."]
                },
                {
                  "name": "NotForSale",
                  "fields": [],
                  "index": 16,
                  "docs": ["Item is not for sale."]
                },
                {
                  "name": "BidTooLow",
                  "fields": [],
                  "index": 17,
                  "docs": ["The provided bid is too low."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 371,
          "path": ["pallet_nfts", "types", "CollectionDetails"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "DepositBalance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owner",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "owner_deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "items",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "item_metadatas",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "item_configs",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "attributes",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 372,
          "path": ["pallet_nfts", "types", "BitFlags"],
          "params": [
            {
              "name": "T",
              "typeId": 373
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 2,
                  "typeName": "CollectionRole",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 373,
          "path": ["pallet_nfts", "types", "CollectionRole"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Issuer",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Freezer",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Admin",
                  "fields": [],
                  "index": 4,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 374,
          "path": ["pallet_nfts", "types", "ItemDetails"],
          "params": [
            {
              "name": "AccountId",
              "typeId": 0
            },
            {
              "name": "Deposit",
              "typeId": 375
            },
            {
              "name": "Approvals",
              "typeId": 376
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "owner",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "approvals",
                  "typeId": 376,
                  "typeName": "Approvals",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "typeId": 375,
                  "typeName": "Deposit",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 375,
          "path": ["pallet_nfts", "types", "ItemDeposit"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "account",
                  "typeId": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 376,
          "path": ["bounded_collections", "bounded_btree_map", "BoundedBTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 0
            },
            {
              "name": "V",
              "typeId": 36
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 377,
                  "typeName": "BTreeMap<K, V>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 377,
          "path": ["BTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 0
            },
            {
              "name": "V",
              "typeId": 36
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 378,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 378,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 379
            }
          },
          "docs": []
        },
        {
          "id": 379,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [0, 36]
            }
          },
          "docs": []
        },
        {
          "id": 380,
          "path": ["pallet_nfts", "types", "CollectionMetadata"],
          "params": [
            {
              "name": "Deposit",
              "typeId": 6
            },
            {
              "name": "StringLimit"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "Deposit",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 117,
                  "typeName": "BoundedVec<u8, StringLimit>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 381,
          "path": ["pallet_nfts", "types", "ItemMetadata"],
          "params": [
            {
              "name": "Deposit",
              "typeId": 382
            },
            {
              "name": "StringLimit"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 382,
                  "typeName": "Deposit",
                  "docs": []
                },
                {
                  "name": "data",
                  "typeId": 117,
                  "typeName": "BoundedVec<u8, StringLimit>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 382,
          "path": ["pallet_nfts", "types", "ItemMetadataDeposit"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "account",
                  "typeId": 115,
                  "typeName": "Option<AccountId>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 383,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [4, 36, 118, 114]
            }
          },
          "docs": []
        },
        {
          "id": 384,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [117, 385]
            }
          },
          "docs": []
        },
        {
          "id": 385,
          "path": ["pallet_nfts", "types", "AttributeDeposit"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "AccountId",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "account",
                  "typeId": 115,
                  "typeName": "Option<AccountId>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 386,
          "path": ["bounded_collections", "bounded_btree_set", "BoundedBTreeSet"],
          "params": [
            {
              "name": "T",
              "typeId": 0
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 387,
                  "typeName": "BTreeSet<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 387,
          "path": ["BTreeSet"],
          "params": [
            {
              "name": "T",
              "typeId": 0
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 38,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 388,
          "path": ["pallet_nfts", "types", "PendingSwap"],
          "params": [
            {
              "name": "CollectionId",
              "typeId": 4
            },
            {
              "name": "ItemId",
              "typeId": 4
            },
            {
              "name": "ItemPriceWithDirection",
              "typeId": 120
            },
            {
              "name": "Deadline",
              "typeId": 4
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "desired_collection",
                  "typeId": 4,
                  "typeName": "CollectionId",
                  "docs": []
                },
                {
                  "name": "desired_item",
                  "typeId": 36,
                  "typeName": "Option<ItemId>",
                  "docs": []
                },
                {
                  "name": "price",
                  "typeId": 119,
                  "typeName": "Option<ItemPriceWithDirection>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "typeId": 4,
                  "typeName": "Deadline",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 389,
          "path": ["pallet_nfts", "types", "BitFlags"],
          "params": [
            {
              "name": "T",
              "typeId": 390
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 11,
                  "typeName": "PalletFeature",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 390,
          "path": ["pallet_nfts", "types", "PalletFeature"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Trading",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Attributes",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Approvals",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Swaps",
                  "fields": [],
                  "index": 8,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 391,
          "path": ["pallet_nfts", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 0,
                  "docs": ["The signing account has no permission to do the operation."]
                },
                {
                  "name": "UnknownCollection",
                  "fields": [],
                  "index": 1,
                  "docs": ["The given item ID is unknown."]
                },
                {
                  "name": "AlreadyExists",
                  "fields": [],
                  "index": 2,
                  "docs": ["The item ID has already been used for an item."]
                },
                {
                  "name": "ApprovalExpired",
                  "fields": [],
                  "index": 3,
                  "docs": ["The approval had a deadline that expired, so the approval isn't valid anymore."]
                },
                {
                  "name": "WrongOwner",
                  "fields": [],
                  "index": 4,
                  "docs": ["The owner turned out to be different to what was expected."]
                },
                {
                  "name": "BadWitness",
                  "fields": [],
                  "index": 5,
                  "docs": ["The witness data given does not match the current state of the chain."]
                },
                {
                  "name": "CollectionIdInUse",
                  "fields": [],
                  "index": 6,
                  "docs": ["Collection ID is already taken."]
                },
                {
                  "name": "ItemsNonTransferable",
                  "fields": [],
                  "index": 7,
                  "docs": ["Items within that collection are non-transferable."]
                },
                {
                  "name": "NotDelegate",
                  "fields": [],
                  "index": 8,
                  "docs": ["The provided account is not a delegate."]
                },
                {
                  "name": "WrongDelegate",
                  "fields": [],
                  "index": 9,
                  "docs": ["The delegate turned out to be different to what was expected."]
                },
                {
                  "name": "Unapproved",
                  "fields": [],
                  "index": 10,
                  "docs": ["No approval exists that would allow the transfer."]
                },
                {
                  "name": "Unaccepted",
                  "fields": [],
                  "index": 11,
                  "docs": ["The named owner has not signed ownership acceptance of the collection."]
                },
                {
                  "name": "ItemLocked",
                  "fields": [],
                  "index": 12,
                  "docs": ["The item is locked (non-transferable)."]
                },
                {
                  "name": "LockedItemAttributes",
                  "fields": [],
                  "index": 13,
                  "docs": ["Item's attributes are locked."]
                },
                {
                  "name": "LockedCollectionAttributes",
                  "fields": [],
                  "index": 14,
                  "docs": ["Collection's attributes are locked."]
                },
                {
                  "name": "LockedItemMetadata",
                  "fields": [],
                  "index": 15,
                  "docs": ["Item's metadata is locked."]
                },
                {
                  "name": "LockedCollectionMetadata",
                  "fields": [],
                  "index": 16,
                  "docs": ["Collection's metadata is locked."]
                },
                {
                  "name": "MaxSupplyReached",
                  "fields": [],
                  "index": 17,
                  "docs": ["All items have been minted."]
                },
                {
                  "name": "MaxSupplyLocked",
                  "fields": [],
                  "index": 18,
                  "docs": ["The max supply is locked and can't be changed."]
                },
                {
                  "name": "MaxSupplyTooSmall",
                  "fields": [],
                  "index": 19,
                  "docs": ["The provided max supply is less than the number of items a collection already has."]
                },
                {
                  "name": "UnknownItem",
                  "fields": [],
                  "index": 20,
                  "docs": ["The given item ID is unknown."]
                },
                {
                  "name": "UnknownSwap",
                  "fields": [],
                  "index": 21,
                  "docs": ["Swap doesn't exist."]
                },
                {
                  "name": "MetadataNotFound",
                  "fields": [],
                  "index": 22,
                  "docs": ["The given item has no metadata set."]
                },
                {
                  "name": "AttributeNotFound",
                  "fields": [],
                  "index": 23,
                  "docs": ["The provided attribute can't be found."]
                },
                {
                  "name": "NotForSale",
                  "fields": [],
                  "index": 24,
                  "docs": ["Item is not for sale."]
                },
                {
                  "name": "BidTooLow",
                  "fields": [],
                  "index": 25,
                  "docs": ["The provided bid is too low."]
                },
                {
                  "name": "ReachedApprovalLimit",
                  "fields": [],
                  "index": 26,
                  "docs": ["The item has reached its approval limit."]
                },
                {
                  "name": "DeadlineExpired",
                  "fields": [],
                  "index": 27,
                  "docs": ["The deadline has already expired."]
                },
                {
                  "name": "WrongDuration",
                  "fields": [],
                  "index": 28,
                  "docs": ["The duration provided should be less than or equal to `MaxDeadlineDuration`."]
                },
                {
                  "name": "MethodDisabled",
                  "fields": [],
                  "index": 29,
                  "docs": ["The method is disabled by system settings."]
                },
                {
                  "name": "WrongSetting",
                  "fields": [],
                  "index": 30,
                  "docs": ["The provided setting can't be set."]
                },
                {
                  "name": "InconsistentItemConfig",
                  "fields": [],
                  "index": 31,
                  "docs": ["Item's config already exists and should be equal to the provided one."]
                },
                {
                  "name": "NoConfig",
                  "fields": [],
                  "index": 32,
                  "docs": ["Config for a collection or an item can't be found."]
                },
                {
                  "name": "RolesNotCleared",
                  "fields": [],
                  "index": 33,
                  "docs": ["Some roles were not cleared."]
                },
                {
                  "name": "MintNotStarted",
                  "fields": [],
                  "index": 34,
                  "docs": ["Mint has not started yet."]
                },
                {
                  "name": "MintEnded",
                  "fields": [],
                  "index": 35,
                  "docs": ["Mint has already ended."]
                },
                {
                  "name": "AlreadyClaimed",
                  "fields": [],
                  "index": 36,
                  "docs": ["The provided Item was already used for claiming."]
                },
                {
                  "name": "IncorrectData",
                  "fields": [],
                  "index": 37,
                  "docs": ["The provided data is incorrect."]
                },
                {
                  "name": "WrongOrigin",
                  "fields": [],
                  "index": 38,
                  "docs": ["The extrinsic was sent by the wrong origin."]
                },
                {
                  "name": "WrongSignature",
                  "fields": [],
                  "index": 39,
                  "docs": ["The provided signature is incorrect."]
                },
                {
                  "name": "IncorrectMetadata",
                  "fields": [],
                  "index": 40,
                  "docs": ["The provided metadata might be too long."]
                },
                {
                  "name": "MaxAttributesLimitReached",
                  "fields": [],
                  "index": 41,
                  "docs": ["Can't set more attributes per one call."]
                },
                {
                  "name": "WrongNamespace",
                  "fields": [],
                  "index": 42,
                  "docs": ["The provided namespace isn't supported in this call."]
                },
                {
                  "name": "CollectionNotEmpty",
                  "fields": [],
                  "index": 43,
                  "docs": ["Can't delete non-empty collections."]
                },
                {
                  "name": "WitnessRequired",
                  "fields": [],
                  "index": 44,
                  "docs": ["The witness data should be provided."]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 392,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [45, 0]
            }
          },
          "docs": []
        },
        {
          "id": 393,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [45, 0, 0]
            }
          },
          "docs": []
        },
        {
          "id": 394,
          "path": ["pallet_assets", "types", "AssetMetadata"],
          "params": [
            {
              "name": "DepositBalance",
              "typeId": 6
            },
            {
              "name": "BoundedString",
              "typeId": 395
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "deposit",
                  "typeId": 6,
                  "typeName": "DepositBalance",
                  "docs": []
                },
                {
                  "name": "name",
                  "typeId": 395,
                  "typeName": "BoundedString",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "typeId": 395,
                  "typeName": "BoundedString",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "typeId": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 395,
          "path": ["bounded_collections", "bounded_vec", "BoundedVec"],
          "params": [
            {
              "name": "T",
              "typeId": 2
            },
            {
              "name": "S"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 396,
          "path": ["pallet_assets", "pallet", "Error"],
          "params": [
            {
              "name": "T"
            },
            {
              "name": "I"
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "BalanceLow",
                  "fields": [],
                  "index": 0,
                  "docs": ["Account balance must be greater than or equal to the transfer amount."]
                },
                {
                  "name": "NoAccount",
                  "fields": [],
                  "index": 1,
                  "docs": ["The account to alter does not exist."]
                },
                {
                  "name": "NoPermission",
                  "fields": [],
                  "index": 2,
                  "docs": ["The signing account has no permission to do the operation."]
                },
                {
                  "name": "Unknown",
                  "fields": [],
                  "index": 3,
                  "docs": ["The given asset ID is unknown."]
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": 4,
                  "docs": ["The origin account is frozen."]
                },
                {
                  "name": "InUse",
                  "fields": [],
                  "index": 5,
                  "docs": ["The asset ID is already taken."]
                },
                {
                  "name": "BadWitness",
                  "fields": [],
                  "index": 6,
                  "docs": ["Invalid witness data given."]
                },
                {
                  "name": "MinBalanceZero",
                  "fields": [],
                  "index": 7,
                  "docs": ["Minimum balance should be non-zero."]
                },
                {
                  "name": "UnavailableConsumer",
                  "fields": [],
                  "index": 8,
                  "docs": [
                    "Unable to increment the consumer reference counters on the account. Either no provider",
                    "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                    "fewer then the maximum number of consumers has been reached."
                  ]
                },
                {
                  "name": "BadMetadata",
                  "fields": [],
                  "index": 9,
                  "docs": ["Invalid metadata given."]
                },
                {
                  "name": "Unapproved",
                  "fields": [],
                  "index": 10,
                  "docs": ["No approval exists that would allow the transfer."]
                },
                {
                  "name": "WouldDie",
                  "fields": [],
                  "index": 11,
                  "docs": ["The source account would not survive the transfer and it needs to stay alive."]
                },
                {
                  "name": "AlreadyExists",
                  "fields": [],
                  "index": 12,
                  "docs": ["The asset-account already exists."]
                },
                {
                  "name": "NoDeposit",
                  "fields": [],
                  "index": 13,
                  "docs": ["The asset-account doesn't have an associated deposit."]
                },
                {
                  "name": "WouldBurn",
                  "fields": [],
                  "index": 14,
                  "docs": ["The operation would result in funds being burned."]
                },
                {
                  "name": "LiveAsset",
                  "fields": [],
                  "index": 15,
                  "docs": [
                    "The asset is a live asset and is actively being used. Usually emit for operations such",
                    "as `start_destroy` which require the asset to be in a destroying state."
                  ]
                },
                {
                  "name": "AssetNotLive",
                  "fields": [],
                  "index": 16,
                  "docs": ["The asset is not live, and likely being destroyed."]
                },
                {
                  "name": "IncorrectStatus",
                  "fields": [],
                  "index": 17,
                  "docs": ["The asset status is not the expected status."]
                },
                {
                  "name": "NotFrozen",
                  "fields": [],
                  "index": 18,
                  "docs": ["The asset should be frozen before the given operation."]
                },
                {
                  "name": "CallbackFailed",
                  "fields": [],
                  "index": 19,
                  "docs": ["Callback action resulted in error"]
                }
              ]
            }
          },
          "docs": ["The `Error` enum of this pallet."]
        },
        {
          "id": 397,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [398, 399, 400, 401, 402, 404, 405, 406]
            }
          },
          "docs": []
        },
        {
          "id": 398,
          "path": ["frame_system", "extensions", "check_non_zero_sender", "CheckNonZeroSender"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 399,
          "path": ["frame_system", "extensions", "check_spec_version", "CheckSpecVersion"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 400,
          "path": ["frame_system", "extensions", "check_tx_version", "CheckTxVersion"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 401,
          "path": ["frame_system", "extensions", "check_genesis", "CheckGenesis"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 402,
          "path": ["frame_system", "extensions", "check_mortality", "CheckMortality"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 403,
                  "typeName": "Era",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 403,
          "path": ["sp_runtime", "generic", "era", "Era"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Immortal",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Mortal1",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Mortal2",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Mortal3",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "Mortal4",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "Mortal5",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "Mortal6",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Mortal7",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "Mortal8",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "Mortal9",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "Mortal10",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "Mortal11",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 11,
                  "docs": []
                },
                {
                  "name": "Mortal12",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 12,
                  "docs": []
                },
                {
                  "name": "Mortal13",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 13,
                  "docs": []
                },
                {
                  "name": "Mortal14",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 14,
                  "docs": []
                },
                {
                  "name": "Mortal15",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 15,
                  "docs": []
                },
                {
                  "name": "Mortal16",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 16,
                  "docs": []
                },
                {
                  "name": "Mortal17",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 17,
                  "docs": []
                },
                {
                  "name": "Mortal18",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 18,
                  "docs": []
                },
                {
                  "name": "Mortal19",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 19,
                  "docs": []
                },
                {
                  "name": "Mortal20",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 20,
                  "docs": []
                },
                {
                  "name": "Mortal21",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "Mortal22",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "Mortal23",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 23,
                  "docs": []
                },
                {
                  "name": "Mortal24",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 24,
                  "docs": []
                },
                {
                  "name": "Mortal25",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 25,
                  "docs": []
                },
                {
                  "name": "Mortal26",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 26,
                  "docs": []
                },
                {
                  "name": "Mortal27",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 27,
                  "docs": []
                },
                {
                  "name": "Mortal28",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 28,
                  "docs": []
                },
                {
                  "name": "Mortal29",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 29,
                  "docs": []
                },
                {
                  "name": "Mortal30",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "Mortal31",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "Mortal32",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "Mortal33",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "Mortal34",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 34,
                  "docs": []
                },
                {
                  "name": "Mortal35",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 35,
                  "docs": []
                },
                {
                  "name": "Mortal36",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 36,
                  "docs": []
                },
                {
                  "name": "Mortal37",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 37,
                  "docs": []
                },
                {
                  "name": "Mortal38",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 38,
                  "docs": []
                },
                {
                  "name": "Mortal39",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 39,
                  "docs": []
                },
                {
                  "name": "Mortal40",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "Mortal41",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "Mortal42",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "Mortal43",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 43,
                  "docs": []
                },
                {
                  "name": "Mortal44",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 44,
                  "docs": []
                },
                {
                  "name": "Mortal45",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 45,
                  "docs": []
                },
                {
                  "name": "Mortal46",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 46,
                  "docs": []
                },
                {
                  "name": "Mortal47",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 47,
                  "docs": []
                },
                {
                  "name": "Mortal48",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 48,
                  "docs": []
                },
                {
                  "name": "Mortal49",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 49,
                  "docs": []
                },
                {
                  "name": "Mortal50",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 50,
                  "docs": []
                },
                {
                  "name": "Mortal51",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 51,
                  "docs": []
                },
                {
                  "name": "Mortal52",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 52,
                  "docs": []
                },
                {
                  "name": "Mortal53",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 53,
                  "docs": []
                },
                {
                  "name": "Mortal54",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 54,
                  "docs": []
                },
                {
                  "name": "Mortal55",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 55,
                  "docs": []
                },
                {
                  "name": "Mortal56",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 56,
                  "docs": []
                },
                {
                  "name": "Mortal57",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 57,
                  "docs": []
                },
                {
                  "name": "Mortal58",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 58,
                  "docs": []
                },
                {
                  "name": "Mortal59",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 59,
                  "docs": []
                },
                {
                  "name": "Mortal60",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 60,
                  "docs": []
                },
                {
                  "name": "Mortal61",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 61,
                  "docs": []
                },
                {
                  "name": "Mortal62",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 62,
                  "docs": []
                },
                {
                  "name": "Mortal63",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 63,
                  "docs": []
                },
                {
                  "name": "Mortal64",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 64,
                  "docs": []
                },
                {
                  "name": "Mortal65",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 65,
                  "docs": []
                },
                {
                  "name": "Mortal66",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 66,
                  "docs": []
                },
                {
                  "name": "Mortal67",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 67,
                  "docs": []
                },
                {
                  "name": "Mortal68",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 68,
                  "docs": []
                },
                {
                  "name": "Mortal69",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 69,
                  "docs": []
                },
                {
                  "name": "Mortal70",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 70,
                  "docs": []
                },
                {
                  "name": "Mortal71",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 71,
                  "docs": []
                },
                {
                  "name": "Mortal72",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 72,
                  "docs": []
                },
                {
                  "name": "Mortal73",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 73,
                  "docs": []
                },
                {
                  "name": "Mortal74",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 74,
                  "docs": []
                },
                {
                  "name": "Mortal75",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 75,
                  "docs": []
                },
                {
                  "name": "Mortal76",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 76,
                  "docs": []
                },
                {
                  "name": "Mortal77",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 77,
                  "docs": []
                },
                {
                  "name": "Mortal78",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 78,
                  "docs": []
                },
                {
                  "name": "Mortal79",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 79,
                  "docs": []
                },
                {
                  "name": "Mortal80",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 80,
                  "docs": []
                },
                {
                  "name": "Mortal81",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 81,
                  "docs": []
                },
                {
                  "name": "Mortal82",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 82,
                  "docs": []
                },
                {
                  "name": "Mortal83",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 83,
                  "docs": []
                },
                {
                  "name": "Mortal84",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 84,
                  "docs": []
                },
                {
                  "name": "Mortal85",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 85,
                  "docs": []
                },
                {
                  "name": "Mortal86",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 86,
                  "docs": []
                },
                {
                  "name": "Mortal87",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 87,
                  "docs": []
                },
                {
                  "name": "Mortal88",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 88,
                  "docs": []
                },
                {
                  "name": "Mortal89",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 89,
                  "docs": []
                },
                {
                  "name": "Mortal90",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 90,
                  "docs": []
                },
                {
                  "name": "Mortal91",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 91,
                  "docs": []
                },
                {
                  "name": "Mortal92",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 92,
                  "docs": []
                },
                {
                  "name": "Mortal93",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 93,
                  "docs": []
                },
                {
                  "name": "Mortal94",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 94,
                  "docs": []
                },
                {
                  "name": "Mortal95",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 95,
                  "docs": []
                },
                {
                  "name": "Mortal96",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 96,
                  "docs": []
                },
                {
                  "name": "Mortal97",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 97,
                  "docs": []
                },
                {
                  "name": "Mortal98",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 98,
                  "docs": []
                },
                {
                  "name": "Mortal99",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 99,
                  "docs": []
                },
                {
                  "name": "Mortal100",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 100,
                  "docs": []
                },
                {
                  "name": "Mortal101",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 101,
                  "docs": []
                },
                {
                  "name": "Mortal102",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 102,
                  "docs": []
                },
                {
                  "name": "Mortal103",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 103,
                  "docs": []
                },
                {
                  "name": "Mortal104",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 104,
                  "docs": []
                },
                {
                  "name": "Mortal105",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 105,
                  "docs": []
                },
                {
                  "name": "Mortal106",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 106,
                  "docs": []
                },
                {
                  "name": "Mortal107",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 107,
                  "docs": []
                },
                {
                  "name": "Mortal108",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 108,
                  "docs": []
                },
                {
                  "name": "Mortal109",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 109,
                  "docs": []
                },
                {
                  "name": "Mortal110",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 110,
                  "docs": []
                },
                {
                  "name": "Mortal111",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 111,
                  "docs": []
                },
                {
                  "name": "Mortal112",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 112,
                  "docs": []
                },
                {
                  "name": "Mortal113",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 113,
                  "docs": []
                },
                {
                  "name": "Mortal114",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 114,
                  "docs": []
                },
                {
                  "name": "Mortal115",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 115,
                  "docs": []
                },
                {
                  "name": "Mortal116",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 116,
                  "docs": []
                },
                {
                  "name": "Mortal117",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 117,
                  "docs": []
                },
                {
                  "name": "Mortal118",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 118,
                  "docs": []
                },
                {
                  "name": "Mortal119",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 119,
                  "docs": []
                },
                {
                  "name": "Mortal120",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 120,
                  "docs": []
                },
                {
                  "name": "Mortal121",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 121,
                  "docs": []
                },
                {
                  "name": "Mortal122",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 122,
                  "docs": []
                },
                {
                  "name": "Mortal123",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 123,
                  "docs": []
                },
                {
                  "name": "Mortal124",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 124,
                  "docs": []
                },
                {
                  "name": "Mortal125",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 125,
                  "docs": []
                },
                {
                  "name": "Mortal126",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 126,
                  "docs": []
                },
                {
                  "name": "Mortal127",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 127,
                  "docs": []
                },
                {
                  "name": "Mortal128",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 128,
                  "docs": []
                },
                {
                  "name": "Mortal129",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 129,
                  "docs": []
                },
                {
                  "name": "Mortal130",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 130,
                  "docs": []
                },
                {
                  "name": "Mortal131",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 131,
                  "docs": []
                },
                {
                  "name": "Mortal132",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 132,
                  "docs": []
                },
                {
                  "name": "Mortal133",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 133,
                  "docs": []
                },
                {
                  "name": "Mortal134",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 134,
                  "docs": []
                },
                {
                  "name": "Mortal135",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 135,
                  "docs": []
                },
                {
                  "name": "Mortal136",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 136,
                  "docs": []
                },
                {
                  "name": "Mortal137",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 137,
                  "docs": []
                },
                {
                  "name": "Mortal138",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 138,
                  "docs": []
                },
                {
                  "name": "Mortal139",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 139,
                  "docs": []
                },
                {
                  "name": "Mortal140",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 140,
                  "docs": []
                },
                {
                  "name": "Mortal141",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 141,
                  "docs": []
                },
                {
                  "name": "Mortal142",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 142,
                  "docs": []
                },
                {
                  "name": "Mortal143",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 143,
                  "docs": []
                },
                {
                  "name": "Mortal144",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 144,
                  "docs": []
                },
                {
                  "name": "Mortal145",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 145,
                  "docs": []
                },
                {
                  "name": "Mortal146",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 146,
                  "docs": []
                },
                {
                  "name": "Mortal147",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 147,
                  "docs": []
                },
                {
                  "name": "Mortal148",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 148,
                  "docs": []
                },
                {
                  "name": "Mortal149",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 149,
                  "docs": []
                },
                {
                  "name": "Mortal150",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 150,
                  "docs": []
                },
                {
                  "name": "Mortal151",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 151,
                  "docs": []
                },
                {
                  "name": "Mortal152",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 152,
                  "docs": []
                },
                {
                  "name": "Mortal153",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 153,
                  "docs": []
                },
                {
                  "name": "Mortal154",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 154,
                  "docs": []
                },
                {
                  "name": "Mortal155",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 155,
                  "docs": []
                },
                {
                  "name": "Mortal156",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 156,
                  "docs": []
                },
                {
                  "name": "Mortal157",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 157,
                  "docs": []
                },
                {
                  "name": "Mortal158",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 158,
                  "docs": []
                },
                {
                  "name": "Mortal159",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 159,
                  "docs": []
                },
                {
                  "name": "Mortal160",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 160,
                  "docs": []
                },
                {
                  "name": "Mortal161",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 161,
                  "docs": []
                },
                {
                  "name": "Mortal162",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 162,
                  "docs": []
                },
                {
                  "name": "Mortal163",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 163,
                  "docs": []
                },
                {
                  "name": "Mortal164",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 164,
                  "docs": []
                },
                {
                  "name": "Mortal165",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 165,
                  "docs": []
                },
                {
                  "name": "Mortal166",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 166,
                  "docs": []
                },
                {
                  "name": "Mortal167",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 167,
                  "docs": []
                },
                {
                  "name": "Mortal168",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 168,
                  "docs": []
                },
                {
                  "name": "Mortal169",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 169,
                  "docs": []
                },
                {
                  "name": "Mortal170",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 170,
                  "docs": []
                },
                {
                  "name": "Mortal171",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 171,
                  "docs": []
                },
                {
                  "name": "Mortal172",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 172,
                  "docs": []
                },
                {
                  "name": "Mortal173",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 173,
                  "docs": []
                },
                {
                  "name": "Mortal174",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 174,
                  "docs": []
                },
                {
                  "name": "Mortal175",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 175,
                  "docs": []
                },
                {
                  "name": "Mortal176",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 176,
                  "docs": []
                },
                {
                  "name": "Mortal177",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 177,
                  "docs": []
                },
                {
                  "name": "Mortal178",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 178,
                  "docs": []
                },
                {
                  "name": "Mortal179",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 179,
                  "docs": []
                },
                {
                  "name": "Mortal180",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 180,
                  "docs": []
                },
                {
                  "name": "Mortal181",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 181,
                  "docs": []
                },
                {
                  "name": "Mortal182",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 182,
                  "docs": []
                },
                {
                  "name": "Mortal183",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 183,
                  "docs": []
                },
                {
                  "name": "Mortal184",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 184,
                  "docs": []
                },
                {
                  "name": "Mortal185",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 185,
                  "docs": []
                },
                {
                  "name": "Mortal186",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 186,
                  "docs": []
                },
                {
                  "name": "Mortal187",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 187,
                  "docs": []
                },
                {
                  "name": "Mortal188",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 188,
                  "docs": []
                },
                {
                  "name": "Mortal189",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 189,
                  "docs": []
                },
                {
                  "name": "Mortal190",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 190,
                  "docs": []
                },
                {
                  "name": "Mortal191",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 191,
                  "docs": []
                },
                {
                  "name": "Mortal192",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 192,
                  "docs": []
                },
                {
                  "name": "Mortal193",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 193,
                  "docs": []
                },
                {
                  "name": "Mortal194",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 194,
                  "docs": []
                },
                {
                  "name": "Mortal195",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 195,
                  "docs": []
                },
                {
                  "name": "Mortal196",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 196,
                  "docs": []
                },
                {
                  "name": "Mortal197",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 197,
                  "docs": []
                },
                {
                  "name": "Mortal198",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 198,
                  "docs": []
                },
                {
                  "name": "Mortal199",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 199,
                  "docs": []
                },
                {
                  "name": "Mortal200",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 200,
                  "docs": []
                },
                {
                  "name": "Mortal201",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 201,
                  "docs": []
                },
                {
                  "name": "Mortal202",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 202,
                  "docs": []
                },
                {
                  "name": "Mortal203",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 203,
                  "docs": []
                },
                {
                  "name": "Mortal204",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 204,
                  "docs": []
                },
                {
                  "name": "Mortal205",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 205,
                  "docs": []
                },
                {
                  "name": "Mortal206",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 206,
                  "docs": []
                },
                {
                  "name": "Mortal207",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 207,
                  "docs": []
                },
                {
                  "name": "Mortal208",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 208,
                  "docs": []
                },
                {
                  "name": "Mortal209",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 209,
                  "docs": []
                },
                {
                  "name": "Mortal210",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 210,
                  "docs": []
                },
                {
                  "name": "Mortal211",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 211,
                  "docs": []
                },
                {
                  "name": "Mortal212",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 212,
                  "docs": []
                },
                {
                  "name": "Mortal213",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 213,
                  "docs": []
                },
                {
                  "name": "Mortal214",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 214,
                  "docs": []
                },
                {
                  "name": "Mortal215",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 215,
                  "docs": []
                },
                {
                  "name": "Mortal216",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 216,
                  "docs": []
                },
                {
                  "name": "Mortal217",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 217,
                  "docs": []
                },
                {
                  "name": "Mortal218",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 218,
                  "docs": []
                },
                {
                  "name": "Mortal219",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 219,
                  "docs": []
                },
                {
                  "name": "Mortal220",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 220,
                  "docs": []
                },
                {
                  "name": "Mortal221",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 221,
                  "docs": []
                },
                {
                  "name": "Mortal222",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 222,
                  "docs": []
                },
                {
                  "name": "Mortal223",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 223,
                  "docs": []
                },
                {
                  "name": "Mortal224",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 224,
                  "docs": []
                },
                {
                  "name": "Mortal225",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 225,
                  "docs": []
                },
                {
                  "name": "Mortal226",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 226,
                  "docs": []
                },
                {
                  "name": "Mortal227",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 227,
                  "docs": []
                },
                {
                  "name": "Mortal228",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 228,
                  "docs": []
                },
                {
                  "name": "Mortal229",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 229,
                  "docs": []
                },
                {
                  "name": "Mortal230",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 230,
                  "docs": []
                },
                {
                  "name": "Mortal231",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 231,
                  "docs": []
                },
                {
                  "name": "Mortal232",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 232,
                  "docs": []
                },
                {
                  "name": "Mortal233",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 233,
                  "docs": []
                },
                {
                  "name": "Mortal234",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 234,
                  "docs": []
                },
                {
                  "name": "Mortal235",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 235,
                  "docs": []
                },
                {
                  "name": "Mortal236",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 236,
                  "docs": []
                },
                {
                  "name": "Mortal237",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 237,
                  "docs": []
                },
                {
                  "name": "Mortal238",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 238,
                  "docs": []
                },
                {
                  "name": "Mortal239",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 239,
                  "docs": []
                },
                {
                  "name": "Mortal240",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 240,
                  "docs": []
                },
                {
                  "name": "Mortal241",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 241,
                  "docs": []
                },
                {
                  "name": "Mortal242",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 242,
                  "docs": []
                },
                {
                  "name": "Mortal243",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 243,
                  "docs": []
                },
                {
                  "name": "Mortal244",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 244,
                  "docs": []
                },
                {
                  "name": "Mortal245",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 245,
                  "docs": []
                },
                {
                  "name": "Mortal246",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 246,
                  "docs": []
                },
                {
                  "name": "Mortal247",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 247,
                  "docs": []
                },
                {
                  "name": "Mortal248",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 248,
                  "docs": []
                },
                {
                  "name": "Mortal249",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 249,
                  "docs": []
                },
                {
                  "name": "Mortal250",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 250,
                  "docs": []
                },
                {
                  "name": "Mortal251",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 251,
                  "docs": []
                },
                {
                  "name": "Mortal252",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 252,
                  "docs": []
                },
                {
                  "name": "Mortal253",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 253,
                  "docs": []
                },
                {
                  "name": "Mortal254",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 254,
                  "docs": []
                },
                {
                  "name": "Mortal255",
                  "fields": [
                    {
                      "typeId": 2,
                      "docs": []
                    }
                  ],
                  "index": 255,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 404,
          "path": ["frame_system", "extensions", "check_nonce", "CheckNonce"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 48,
                  "typeName": "T::Nonce",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 405,
          "path": ["frame_system", "extensions", "check_weight", "CheckWeight"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 406,
          "path": ["pallet_asset_tx_payment", "ChargeAssetTxPayment"],
          "params": [
            {
              "name": "T"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "tip",
                  "typeId": 52,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "asset_id",
                  "typeId": 36,
                  "typeName": "Option<ChargeAssetIdOf<T>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 407,
          "path": ["asset_hub_polkadot_runtime", "Runtime"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": []
            }
          },
          "docs": []
        },
        {
          "id": 408,
          "path": ["sp_consensus_slots", "SlotDuration"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 409,
          "path": ["sp_runtime", "generic", "block", "Block"],
          "params": [
            {
              "name": "Header",
              "typeId": 410
            },
            {
              "name": "Extrinsic",
              "typeId": 411
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "header",
                  "typeId": 410,
                  "typeName": "Header",
                  "docs": []
                },
                {
                  "name": "extrinsics",
                  "typeId": 412,
                  "typeName": "Vec<Extrinsic>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 410,
          "path": ["sp_runtime", "generic", "header", "Header"],
          "params": [
            {
              "name": "Number",
              "typeId": 4
            },
            {
              "name": "Hash"
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "parent_hash",
                  "typeId": 12,
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "number",
                  "typeId": 48,
                  "typeName": "Number",
                  "docs": []
                },
                {
                  "name": "state_root",
                  "typeId": 12,
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "extrinsics_root",
                  "typeId": 12,
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "digest",
                  "typeId": 14,
                  "typeName": "Digest",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 411,
          "path": ["sp_runtime", "generic", "unchecked_extrinsic", "UncheckedExtrinsic"],
          "params": [
            {
              "name": "Address",
              "typeId": 204
            },
            {
              "name": "Call",
              "typeId": 296
            },
            {
              "name": "Signature",
              "typeId": 323
            },
            {
              "name": "Extra",
              "typeId": 397
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 412,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 411
            }
          },
          "docs": []
        },
        {
          "id": 413,
          "path": ["sp_core", "OpaqueMetadata"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 414,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 413
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 413,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 415,
          "path": ["Result"],
          "params": [
            {
              "name": "T",
              "typeId": 102
            },
            {
              "name": "E",
              "typeId": 416
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "typeId": 102,
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "typeId": 416,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 416,
          "path": ["sp_runtime", "transaction_validity", "TransactionValidityError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Invalid",
                  "fields": [
                    {
                      "typeId": 417,
                      "typeName": "InvalidTransaction",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Unknown",
                  "fields": [
                    {
                      "typeId": 418,
                      "typeName": "UnknownTransaction",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 417,
          "path": ["sp_runtime", "transaction_validity", "InvalidTransaction"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Call",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Payment",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Future",
                  "fields": [],
                  "index": 2,
                  "docs": []
                },
                {
                  "name": "Stale",
                  "fields": [],
                  "index": 3,
                  "docs": []
                },
                {
                  "name": "BadProof",
                  "fields": [],
                  "index": 4,
                  "docs": []
                },
                {
                  "name": "AncientBirthBlock",
                  "fields": [],
                  "index": 5,
                  "docs": []
                },
                {
                  "name": "ExhaustsResources",
                  "fields": [],
                  "index": 6,
                  "docs": []
                },
                {
                  "name": "Custom",
                  "fields": [
                    {
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 7,
                  "docs": []
                },
                {
                  "name": "BadMandatory",
                  "fields": [],
                  "index": 8,
                  "docs": []
                },
                {
                  "name": "MandatoryValidation",
                  "fields": [],
                  "index": 9,
                  "docs": []
                },
                {
                  "name": "BadSigner",
                  "fields": [],
                  "index": 10,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 418,
          "path": ["sp_runtime", "transaction_validity", "UnknownTransaction"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "CannotLookup",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "NoUnsignedValidator",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Custom",
                  "fields": [
                    {
                      "typeId": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 419,
          "path": ["sp_inherents", "InherentData"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "data",
                  "typeId": 420,
                  "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 420,
          "path": ["BTreeMap"],
          "params": [
            {
              "name": "K",
              "typeId": 64
            },
            {
              "name": "V",
              "typeId": 13
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 421,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 421,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 422
            }
          },
          "docs": []
        },
        {
          "id": 422,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [64, 13]
            }
          },
          "docs": []
        },
        {
          "id": 423,
          "path": ["sp_inherents", "CheckInherentsResult"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "okay",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "fatal_error",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "errors",
                  "typeId": 419,
                  "typeName": "InherentData",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 424,
          "path": ["sp_runtime", "transaction_validity", "TransactionSource"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "InBlock",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Local",
                  "fields": [],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "External",
                  "fields": [],
                  "index": 2,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 425,
          "path": ["Result"],
          "params": [
            {
              "name": "T",
              "typeId": 426
            },
            {
              "name": "E",
              "typeId": 416
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "typeId": 426,
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "typeId": 416,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 426,
          "path": ["sp_runtime", "transaction_validity", "ValidTransaction"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "priority",
                  "typeId": 11,
                  "typeName": "TransactionPriority",
                  "docs": []
                },
                {
                  "name": "requires",
                  "typeId": 133,
                  "typeName": "Vec<TransactionTag>",
                  "docs": []
                },
                {
                  "name": "provides",
                  "typeId": 133,
                  "typeName": "Vec<TransactionTag>",
                  "docs": []
                },
                {
                  "name": "longevity",
                  "typeId": 11,
                  "typeName": "TransactionLongevity",
                  "docs": []
                },
                {
                  "name": "propagate",
                  "typeId": 82,
                  "typeName": "bool",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 427,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 428
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 428,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 428,
          "path": [],
          "params": [],
          "type": {
            "tag": "Sequence",
            "value": {
              "typeParam": 429
            }
          },
          "docs": []
        },
        {
          "id": 429,
          "path": [],
          "params": [],
          "type": {
            "tag": "Tuple",
            "value": {
              "fields": [13, 220]
            }
          },
          "docs": []
        },
        {
          "id": 430,
          "path": ["pallet_transaction_payment", "types", "RuntimeDispatchInfo"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            },
            {
              "name": "Weight",
              "typeId": 9
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "weight",
                  "typeId": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "class",
                  "typeId": 23,
                  "typeName": "DispatchClass",
                  "docs": []
                },
                {
                  "name": "partial_fee",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 431,
          "path": ["pallet_transaction_payment", "types", "FeeDetails"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "inclusion_fee",
                  "typeId": 432,
                  "typeName": "Option<InclusionFee<Balance>>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 432,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 433
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 433,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 433,
          "path": ["pallet_transaction_payment", "types", "InclusionFee"],
          "params": [
            {
              "name": "Balance",
              "typeId": 6
            }
          ],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "base_fee",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "len_fee",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "adjusted_weight_fee",
                  "typeId": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 434,
          "path": ["Result"],
          "params": [
            {
              "name": "T",
              "typeId": 84
            },
            {
              "name": "E",
              "typeId": 435
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "typeId": 84,
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "typeId": 435,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 435,
          "path": ["assets_common", "runtime_api", "FungiblesAccessError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "AssetIdConversionFailed",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "AmountToBalanceConversionFailed",
                  "fields": [],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 436,
          "path": ["cumulus_primitives_core", "CollationInfo"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "name": "upward_messages",
                  "typeId": 133,
                  "typeName": "Vec<UpwardMessage>",
                  "docs": []
                },
                {
                  "name": "horizontal_messages",
                  "typeId": 174,
                  "typeName": "Vec<OutboundHrmpMessage>",
                  "docs": []
                },
                {
                  "name": "new_validation_code",
                  "typeId": 437,
                  "typeName": "Option<relay_chain::ValidationCode>",
                  "docs": []
                },
                {
                  "name": "processed_downward_messages",
                  "typeId": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "hrmp_watermark",
                  "typeId": 4,
                  "typeName": "relay_chain::BlockNumber",
                  "docs": []
                },
                {
                  "name": "head_data",
                  "typeId": 158,
                  "typeName": "HeadData",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 437,
          "path": ["Option"],
          "params": [
            {
              "name": "T",
              "typeId": 438
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "None",
                  "fields": [],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "typeId": 438,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 438,
          "path": ["polkadot_parachain_primitives", "primitives", "ValidationCode"],
          "params": [],
          "type": {
            "tag": "Struct",
            "value": {
              "fields": [
                {
                  "typeId": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 439,
          "path": ["Result"],
          "params": [
            {
              "name": "T",
              "typeId": 103
            },
            {
              "name": "E",
              "typeId": 129
            }
          ],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "Ok",
                  "fields": [
                    {
                      "typeId": 103,
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "Err",
                  "fields": [
                    {
                      "typeId": 129,
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        },
        {
          "id": 440,
          "path": ["asset_hub_polkadot_runtime", "RuntimeError"],
          "params": [],
          "type": {
            "tag": "Enum",
            "value": {
              "members": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "typeId": 145,
                      "typeName": "frame_system::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 0,
                  "docs": []
                },
                {
                  "name": "ParachainSystem",
                  "fields": [
                    {
                      "typeId": 187,
                      "typeName": "cumulus_pallet_parachain_system::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 1,
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "typeId": 206,
                      "typeName": "pallet_balances::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 10,
                  "docs": []
                },
                {
                  "name": "CollatorSelection",
                  "fields": [
                    {
                      "typeId": 213,
                      "typeName": "pallet_collator_selection::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 21,
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "typeId": 222,
                      "typeName": "pallet_session::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 22,
                  "docs": []
                },
                {
                  "name": "XcmpQueue",
                  "fields": [
                    {
                      "typeId": 241,
                      "typeName": "cumulus_pallet_xcmp_queue::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 30,
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "typeId": 284,
                      "typeName": "pallet_xcm::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 31,
                  "docs": []
                },
                {
                  "name": "CumulusXcm",
                  "fields": [
                    {
                      "typeId": 285,
                      "typeName": "cumulus_pallet_xcm::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 32,
                  "docs": []
                },
                {
                  "name": "DmpQueue",
                  "fields": [
                    {
                      "typeId": 291,
                      "typeName": "cumulus_pallet_dmp_queue::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 33,
                  "docs": []
                },
                {
                  "name": "Utility",
                  "fields": [
                    {
                      "typeId": 336,
                      "typeName": "pallet_utility::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 40,
                  "docs": []
                },
                {
                  "name": "Multisig",
                  "fields": [
                    {
                      "typeId": 340,
                      "typeName": "pallet_multisig::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 41,
                  "docs": []
                },
                {
                  "name": "Proxy",
                  "fields": [
                    {
                      "typeId": 349,
                      "typeName": "pallet_proxy::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 42,
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "typeId": 360,
                      "typeName": "pallet_assets::Error<Runtime, pallet_assets::Instance1>",
                      "docs": []
                    }
                  ],
                  "index": 50,
                  "docs": []
                },
                {
                  "name": "Uniques",
                  "fields": [
                    {
                      "typeId": 370,
                      "typeName": "pallet_uniques::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 51,
                  "docs": []
                },
                {
                  "name": "Nfts",
                  "fields": [
                    {
                      "typeId": 391,
                      "typeName": "pallet_nfts::Error<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": 52,
                  "docs": []
                },
                {
                  "name": "ForeignAssets",
                  "fields": [
                    {
                      "typeId": 396,
                      "typeName": "pallet_assets::Error<Runtime, pallet_assets::Instance2>",
                      "docs": []
                    }
                  ],
                  "index": 53,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      ],
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 3
                  }
                },
                "default": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [" The full account information for a particular account ID."]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" Total extrinsics count for the current block."]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 8
                  }
                },
                "default": "0x000000000000",
                "docs": [" The current weight for the block."]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" Total length (in bytes) for all extrinsics put together, for the current block."]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 12
                  }
                },
                "default": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [" Map of block numbers to block hashes."]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [" Extrinsics data for the current block (maps an extrinsic's index to its data)."]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [" The current block number being processed. Set by `execute_block`."]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 12
                  }
                },
                "default": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [" Hash of the previous block."]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 14
                  }
                },
                "default": "0x00",
                "docs": [" Digest of the current block, also part of the block header."]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 18
                  }
                },
                "default": "0x00",
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [" The number of events in the `Events<T>` list."]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 12,
                    "valueTypeId": 126
                  }
                },
                "default": "0x00",
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 128
                  }
                },
                "default": "0x00",
                "docs": [" Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [" True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 124
                  }
                },
                "default": "0x00",
                "docs": [" The execution phase of the block."]
              }
            ]
          },
          "calls": 130,
          "event": 21,
          "constants": [
            {
              "name": "BlockWeights",
              "typeId": 134,
              "value": "0x0700f2052a0100070088526a74020040010265cd1d000107c0d22c76510200e000010700e6bd4f570200f0000100000265cd1d000107c074c1906e0200300101070088526a7402004001010700a2941a1d020050000265cd1d00000000",
              "docs": [" Block & extrinsics weights: base values and limits."]
            },
            {
              "name": "BlockLength",
              "typeId": 138,
              "value": "0x00003c000000500000005000",
              "docs": [" The maximum length of a block (in bytes)."]
            },
            {
              "name": "BlockHashCount",
              "typeId": 4,
              "value": "0x00100000",
              "docs": [" Maximum number of block number to block hash mappings to keep (oldest pruned first)."]
            },
            {
              "name": "DbWeight",
              "typeId": 140,
              "value": "0x40787d010000000000e1f50500000000",
              "docs": [" The weight of runtime database operations the runtime can invoke."]
            },
            {
              "name": "Version",
              "typeId": 141,
              "value": "0x2473746174656d696e742473746174656d696e74010000002a460f000000000034dd718d5cc53262d401000000df6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000bc9d89904f5b923f0100000037c8bb1350a9a2a804000000f3ff14d5ab52705903000000de92b8a0426b9bf602000000ea93e3f16f3d696202000000fbc577b9d747efd6010000000e00000000",
              "docs": [" Get the chain's current version."]
            },
            {
              "name": "SS58Prefix",
              "typeId": 108,
              "value": "0x0000",
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "error": 145,
          "index": 0,
          "docs": []
        },
        {
          "name": "ParachainSystem",
          "storage": {
            "prefix": "ParachainSystem",
            "entries": [
              {
                "name": "UnincludedSegment",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 146
                  }
                },
                "default": "0x00",
                "docs": [
                  " Latest included block descendants the runtime accepted. In other words, these are",
                  " ancestors of the currently executing block which have not been included in the observed",
                  " relay-chain state.",
                  "",
                  " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                  " in the pallet."
                ]
              },
              {
                "name": "AggregatedUnincludedSegment",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 156
                  }
                },
                "default": "0x00",
                "docs": [
                  " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                  " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                  " respect to relay chain constraints."
                ]
              },
              {
                "name": "PendingValidationCode",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [
                  " In case of a scheduled upgrade, this storage field contains the validation code to be",
                  " applied.",
                  "",
                  " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                  " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                  " with the new validation code. This concludes the upgrade process."
                ]
              },
              {
                "name": "NewValidationCode",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [
                  " Validation code that is set by the parachain and is to be communicated to collator and",
                  " consequently the relay-chain.",
                  "",
                  " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                  " the value."
                ]
              },
              {
                "name": "ValidationData",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 157
                  }
                },
                "default": "0x00",
                "docs": [
                  " The [`PersistedValidationData`] set for this block.",
                  " This value is expected to be set only once per block and it's never stored",
                  " in the trie."
                ]
              },
              {
                "name": "DidSetValidationCode",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [" Were the validation data set to notify the relay chain?"]
              },
              {
                "name": "LastRelayChainBlockNumber",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " The relay chain block number associated with the last parachain block.",
                  "",
                  " This is updated in `on_finalize`."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 159
                  }
                },
                "default": "0x00",
                "docs": [
                  " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                  " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                  " candidate will be invalid.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "UpgradeGoAhead",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 154
                  }
                },
                "default": "0x00",
                "docs": [
                  " Optional upgrade go-ahead signal from the relay-chain.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "RelayStateProof",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 161
                  }
                },
                "default": "0x00",
                "docs": [
                  " The state proof for the last relay parent block.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "RelevantMessagingState",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 163
                  }
                },
                "default": "0x00",
                "docs": [
                  " The snapshot of some state related to messaging relevant to the current parachain as per",
                  " the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "HostConfiguration",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 168
                  }
                },
                "default": "0x00",
                "docs": [
                  " The parachain host configuration that was obtained from the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "LastDmqMqcHead",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 170
                  }
                },
                "default": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The last downward message queue chain head we have observed.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "LastHrmpMqcHeads",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 171
                  }
                },
                "default": "0x00",
                "docs": [
                  " The message queue chain heads we have observed per each channel incoming channel.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "ProcessedDownwardMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " Number of downward messages processed in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpWatermark",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " HRMP watermark that was set in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpOutboundMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 174
                  }
                },
                "default": "0x00",
                "docs": [
                  " HRMP messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "UpwardMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 133
                  }
                },
                "default": "0x00",
                "docs": [
                  " Upward messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "PendingUpwardMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 133
                  }
                },
                "default": "0x00",
                "docs": [" Upward messages that are still pending and not yet send to the relay chain."]
              },
              {
                "name": "UpwardDeliveryFeeFactor",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 176
                  }
                },
                "default": "0x000064a7b3b6e00d0000000000000000",
                "docs": [" The factor to multiply the base delivery fee by for UMP."]
              },
              {
                "name": "AnnouncedHrmpMessagesPerCandidate",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                  " announcing the weight of `on_initialize` and `on_finalize`."
                ]
              },
              {
                "name": "ReservedXcmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 9
                  }
                },
                "default": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "ReservedDmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 9
                  }
                },
                "default": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing DMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 177
                  }
                },
                "default": "0x00",
                "docs": [" The next authorized upgrade, if there is one."]
              },
              {
                "name": "CustomValidationHeadData",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [
                  " A custom head data that should be returned as result of `validate_block`.",
                  "",
                  " See `Pallet::set_custom_validation_head_data` for more information."
                ]
              }
            ]
          },
          "calls": 178,
          "event": 30,
          "constants": [],
          "error": 187,
          "index": 1,
          "docs": []
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 11
                  }
                },
                "default": "0x0000000000000000",
                "docs": [" The current time for the current block."]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": 188,
          "constants": [
            {
              "name": "MinimumPeriod",
              "typeId": 11,
              "value": "0x7017000000000000",
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "index": 3,
          "docs": []
        },
        {
          "name": "ParachainInfo",
          "storage": {
            "prefix": "ParachainInfo",
            "entries": [
              {
                "name": "ParachainId",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 42
                  }
                },
                "default": "0x64000000",
                "docs": []
              }
            ]
          },
          "constants": [],
          "index": 4,
          "docs": []
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 6
                  }
                },
                "default": "0x00000000000000000000000000000000",
                "docs": [" The total units issued in the system."]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 6
                  }
                },
                "default": "0x00000000000000000000000000000000",
                "docs": [" The total units of outstanding deactivated balance in the system."]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 5
                  }
                },
                "default": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 189
                  }
                },
                "default": "0x00",
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 193
                  }
                },
                "default": "0x00",
                "docs": [" Named reserves on some account balances."]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 196
                  }
                },
                "default": "0x00",
                "docs": [" Holds on account balances."]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 200
                  }
                },
                "default": "0x00",
                "docs": [" Freeze locks on account balances."]
              }
            ]
          },
          "calls": 203,
          "event": 32,
          "constants": [
            {
              "name": "ExistentialDeposit",
              "typeId": 6,
              "value": "0x00e1f505000000000000000000000000",
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "typeId": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "typeId": 4,
              "value": "0x32000000",
              "docs": [" The maximum number of named reserves that can exist on an account."]
            },
            {
              "name": "MaxHolds",
              "typeId": 4,
              "value": "0x00000000",
              "docs": [" The maximum number of holds that can exist on an account at any time."]
            },
            {
              "name": "MaxFreezes",
              "typeId": 4,
              "value": "0x00000000",
              "docs": [" The maximum number of individual freeze locks that can exist on an account at any time."]
            }
          ],
          "error": 206,
          "index": 10,
          "docs": []
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 176
                  }
                },
                "default": "0x000064a7b3b6e00d0000000000000000",
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 207
                  }
                },
                "default": "0x00",
                "docs": []
              }
            ]
          },
          "event": 34,
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "typeId": 2,
              "value": "0x05",
              "docs": [
                " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "index": 11,
          "docs": []
        },
        {
          "name": "AssetTxPayment",
          "event": 35,
          "constants": [],
          "index": 12,
          "docs": []
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "entries": [
              {
                "name": "Author",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 0
                  }
                },
                "default": "0x00",
                "docs": [" Author of current block."]
              }
            ]
          },
          "constants": [],
          "index": 20,
          "docs": []
        },
        {
          "name": "CollatorSelection",
          "storage": {
            "prefix": "CollatorSelection",
            "entries": [
              {
                "name": "Invulnerables",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 208
                  }
                },
                "default": "0x00",
                "docs": [" The invulnerable, permissioned collators. This list must be sorted."]
              },
              {
                "name": "Candidates",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 209
                  }
                },
                "default": "0x00",
                "docs": [
                  " The (community, limited) collation candidates. `Candidates` and `Invulnerables` should be",
                  " mutually exclusive."
                ]
              },
              {
                "name": "LastAuthoredBlock",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [" Last block authored by collator."]
              },
              {
                "name": "DesiredCandidates",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " Desired number of candidates.",
                  "",
                  " This should ideally always be less than [`Config::MaxCandidates`] for weights to be correct."
                ]
              },
              {
                "name": "CandidacyBond",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 6
                  }
                },
                "default": "0x00000000000000000000000000000000",
                "docs": [
                  " Fixed amount to deposit to become a collator.",
                  "",
                  " When a collator calls `leave_intent` they immediately receive the deposit back."
                ]
              }
            ]
          },
          "calls": 212,
          "event": 37,
          "constants": [],
          "error": 213,
          "index": 21,
          "docs": []
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 38
                  }
                },
                "default": "0x00",
                "docs": [" The current set of validators."]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [" Current index of the session."]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 214
                  }
                },
                "default": "0x00",
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 112
                  }
                },
                "default": "0x00",
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 216
                  }
                },
                "default": "0x00",
                "docs": [" The next session keys for a validator."]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 219,
                    "valueTypeId": 0
                  }
                },
                "default": "0x00",
                "docs": [" The owner of a key. The key is the `KeyTypeId` + the encoded key."]
              }
            ]
          },
          "calls": 221,
          "event": 39,
          "constants": [],
          "error": 222,
          "index": 22,
          "docs": []
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 223
                  }
                },
                "default": "0x00",
                "docs": [" The current authority set."]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 225
                  }
                },
                "default": "0x0000000000000000",
                "docs": [" The current slot of this block.", "", " This will be set in `on_initialize`."]
              }
            ]
          },
          "constants": [],
          "index": 23,
          "docs": []
        },
        {
          "name": "AuraExt",
          "storage": {
            "prefix": "AuraExt",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 223
                  }
                },
                "default": "0x00",
                "docs": [
                  " Serves as cache for the authorities.",
                  "",
                  " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                  " but we require the old authorities to verify the seal when validating a PoV. This will",
                  " always be updated to the latest AuRa authorities in `on_finalize`."
                ]
              },
              {
                "name": "SlotInfo",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 226
                  }
                },
                "default": "0x00",
                "docs": [
                  " Current slot paired with a number of authored blocks.",
                  "",
                  " Updated on each block initialization."
                ]
              }
            ]
          },
          "constants": [],
          "index": 24,
          "docs": []
        },
        {
          "name": "XcmpQueue",
          "storage": {
            "prefix": "XcmpQueue",
            "entries": [
              {
                "name": "InboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 227
                  }
                },
                "default": "0x00",
                "docs": [" Status of the inbound XCMP channels."]
              },
              {
                "name": "InboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "twox64Concat"],
                    "keyTypeId": 233,
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [" Inbound aggregate XCMP messages. It can only be one per ParaId/block."]
              },
              {
                "name": "OutboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 234
                  }
                },
                "default": "0x00",
                "docs": [
                  " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                  " and last outbound message. If the two indices are equal, then it indicates an empty",
                  " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                  " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                  " case of the need to send a high-priority signal message this block.",
                  " The bool is true if there is a signal message waiting to be sent."
                ]
              },
              {
                "name": "OutboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "twox64Concat"],
                    "keyTypeId": 237,
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [" The messages outbound in a given XCMP channel."]
              },
              {
                "name": "SignalMessages",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 42,
                    "valueTypeId": 13
                  }
                },
                "default": "0x00",
                "docs": [" Any signal messages waiting to be sent."]
              },
              {
                "name": "QueueConfig",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 238
                  }
                },
                "default": "0x020000000500000001000000821a06000008000700c817a80402000400",
                "docs": [" The configuration which controls the dynamics of the outbound queue."]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 11,
                    "valueTypeId": 239
                  }
                },
                "default": "0x00",
                "docs": [
                  " The messages that exceeded max individual message weight budget.",
                  "",
                  " These message stay in this storage map until they are manually dispatched via",
                  " `service_overweight`."
                ]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": ["Counter for the related counted storage map"]
              },
              {
                "name": "OverweightCount",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 11
                  }
                },
                "default": "0x0000000000000000",
                "docs": [
                  " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
                  " available free overweight index."
                ]
              },
              {
                "name": "QueueSuspended",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [" Whether or not the XCMP queue is suspended from executing incoming XCMs or not."]
              },
              {
                "name": "DeliveryFeeFactor",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 42,
                    "valueTypeId": 176
                  }
                },
                "default": "0x000064a7b3b6e00d0000000000000000",
                "docs": [" The factor to multiply the base delivery fee by."]
              }
            ]
          },
          "calls": 240,
          "event": 40,
          "constants": [],
          "error": 241,
          "index": 30,
          "docs": []
        },
        {
          "name": "PolkadotXcm",
          "storage": {
            "prefix": "PolkadotXcm",
            "entries": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 11
                  }
                },
                "default": "0x0000000000000000",
                "docs": [" The latest available query index."]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 11,
                    "valueTypeId": 242
                  }
                },
                "default": "0x00",
                "docs": [" The ongoing queries."]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["identity"],
                    "keyTypeId": 12,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat", "blake2_128Concat"],
                    "keyTypeId": 251,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" The Latest versions that we know various locations support."]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat", "blake2_128Concat"],
                    "keyTypeId": 251,
                    "valueTypeId": 11
                  }
                },
                "default": "0x00",
                "docs": [" All locations that we have requested version notifications from."]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat", "blake2_128Concat"],
                    "keyTypeId": 251,
                    "valueTypeId": 252
                  }
                },
                "default": "0x00",
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 253
                  }
                },
                "default": "0x00",
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 256
                  }
                },
                "default": "0x00",
                "docs": [" The current migration's stage, if any."]
              },
              {
                "name": "RemoteLockedFungibles",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 258,
                    "valueTypeId": 260
                  }
                },
                "default": "0x00",
                "docs": [" Fungible assets which we know are locked on a remote chain."]
              },
              {
                "name": "LockedFungibles",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 264
                  }
                },
                "default": "0x00",
                "docs": [" Fungible assets which we know are locked on this chain."]
              },
              {
                "name": "XcmExecutionSuspended",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 82
                  }
                },
                "default": "0x00",
                "docs": [" Global suspension state of the XCM executor."]
              }
            ]
          },
          "calls": 267,
          "event": 43,
          "constants": [],
          "error": 284,
          "index": 31,
          "docs": []
        },
        {
          "name": "CumulusXcm",
          "event": 99,
          "constants": [],
          "error": 285,
          "index": 32,
          "docs": []
        },
        {
          "name": "DmpQueue",
          "storage": {
            "prefix": "DmpQueue",
            "entries": [
              {
                "name": "Configuration",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 286
                  }
                },
                "default": "0x0700e40b540202000400",
                "docs": [" The configuration."]
              },
              {
                "name": "PageIndex",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 287
                  }
                },
                "default": "0x00000000000000000000000000000000",
                "docs": [" The page index."]
              },
              {
                "name": "Pages",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 288
                  }
                },
                "default": "0x00",
                "docs": [" The queue pages."]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 11,
                    "valueTypeId": 289
                  }
                },
                "default": "0x00",
                "docs": [" The overweight messages."]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00000000",
                "docs": ["Counter for the related counted storage map"]
              }
            ]
          },
          "calls": 290,
          "event": 100,
          "constants": [],
          "error": 291,
          "index": 33,
          "docs": []
        },
        {
          "name": "ToKusamaXcmRouter",
          "storage": {
            "prefix": "ToKusamaXcmRouter",
            "entries": [
              {
                "name": "Bridge",
                "modifier": "Default",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 292
                  }
                },
                "default": "0x000064a7b3b6e00d000000000000000000",
                "docs": [
                  " Bridge that we are using.",
                  "",
                  " **bridges-v1** assumptions: all outbound messages through this router are using single lane",
                  " and to single remote consensus. If there is some other remote consensus that uses the same",
                  " bridge hub, the separate pallet instance shall be used, In `v2` we'll have all required",
                  " primitives (lane-id aka bridge-id, derived from XCM locations) to support multiple  bridges",
                  " by the same pallet instance."
                ]
              }
            ]
          },
          "calls": 293,
          "constants": [],
          "index": 34,
          "docs": []
        },
        {
          "name": "Utility",
          "calls": 294,
          "event": 101,
          "constants": [
            {
              "name": "batched_calls_limit",
              "typeId": 4,
              "value": "0xaa2a0000",
              "docs": [" The limit on the number of batched calls."]
            }
          ],
          "error": 336,
          "index": 40,
          "docs": []
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "entries": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat", "blake2_128Concat"],
                    "keyTypeId": 337,
                    "valueTypeId": 338
                  }
                },
                "default": "0x00",
                "docs": [" The set of open multisig operations."]
              }
            ]
          },
          "calls": 297,
          "event": 104,
          "constants": [
            {
              "name": "DepositBase",
              "typeId": 6,
              "value": "0x00dbbb77000000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "typeId": 6,
              "value": "0x00d43000000000000000000000000000",
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "typeId": 4,
              "value": "0x64000000",
              "docs": [" The maximum amount of signatories allowed in the multisig."]
            }
          ],
          "error": 340,
          "index": 41,
          "docs": []
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "entries": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 341
                  }
                },
                "default": "0x0000000000000000000000000000000000",
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["twox64Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 345
                  }
                },
                "default": "0x0000000000000000000000000000000000",
                "docs": [" The announcements made by the proxy (key)."]
              }
            ]
          },
          "calls": 299,
          "event": 106,
          "constants": [
            {
              "name": "ProxyDepositBase",
              "typeId": 6,
              "value": "0x009d7277000000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "typeId": 6,
              "value": "0xa05a3200000000000000000000000000",
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "typeId": 4,
              "value": "0x20000000",
              "docs": [" The maximum amount of proxies allowed for a single account."]
            },
            {
              "name": "MaxPending",
              "typeId": 4,
              "value": "0x20000000",
              "docs": [" The maximum amount of time-delayed announcements that are allowed to be pending."]
            },
            {
              "name": "AnnouncementDepositBase",
              "typeId": 6,
              "value": "0x00d27e77000000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "typeId": 6,
              "value": "0x40b56400000000000000000000000000",
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "error": 349,
          "index": 42,
          "docs": []
        },
        {
          "name": "Assets",
          "storage": {
            "prefix": "Assets",
            "entries": [
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 350
                  }
                },
                "default": "0x00",
                "docs": [" Details of an asset."]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 352,
                    "valueTypeId": 353
                  }
                },
                "default": "0x00",
                "docs": [" The holdings of a specific account for a specific asset."]
              },
              {
                "name": "Approvals",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 356,
                    "valueTypeId": 357
                  }
                },
                "default": "0x00",
                "docs": [
                  " Approved balance transfers. First balance is the amount approved for transfer. Second",
                  " is the amount of `T::Currency` reserved for storing this.",
                  " First key is the asset ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 358
                  }
                },
                "default": "0x0000000000000000000000000000000000000000",
                "docs": [" Metadata of an asset."]
              }
            ]
          },
          "calls": 301,
          "event": 109,
          "constants": [
            {
              "name": "RemoveItemsLimit",
              "typeId": 4,
              "value": "0xe8030000",
              "docs": [
                " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
                "",
                " Must be configured to result in a weight that makes each call fit in a block."
              ]
            },
            {
              "name": "AssetDeposit",
              "typeId": 6,
              "value": "0x00e87648170000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for an asset."]
            },
            {
              "name": "AssetAccountDeposit",
              "typeId": 6,
              "value": "0x00fe4d77000000000000000000000000",
              "docs": [
                " The amount of funds that must be reserved for a non-provider asset account to be",
                " maintained."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "typeId": 6,
              "value": "0x80569d77000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding metadata to your asset."]
            },
            {
              "name": "MetadataDepositPerByte",
              "typeId": 6,
              "value": "0xa0860100000000000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes you store in your",
                " metadata."
              ]
            },
            {
              "name": "ApprovalDeposit",
              "typeId": 6,
              "value": "0x00e1f505000000000000000000000000",
              "docs": [" The amount of funds that must be reserved when creating a new approval."]
            },
            {
              "name": "StringLimit",
              "typeId": 4,
              "value": "0x32000000",
              "docs": [" The maximum length of a name or symbol stored on-chain."]
            }
          ],
          "error": 360,
          "index": 50,
          "docs": []
        },
        {
          "name": "Uniques",
          "storage": {
            "prefix": "Uniques",
            "entries": [
              {
                "name": "Class",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 361
                  }
                },
                "default": "0x00",
                "docs": [" Details of a collection."]
              },
              {
                "name": "OwnershipAcceptance",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" The collection, if any, of which an account is willing to take ownership."]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 362,
                    "valueTypeId": 103
                  }
                },
                "default": "0x00",
                "docs": [
                  " The items held by any given account; set out this way so that items owned by a single",
                  " account can be enumerated."
                ]
              },
              {
                "name": "ClassAccount",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 363,
                    "valueTypeId": 103
                  }
                },
                "default": "0x00",
                "docs": [
                  " The collections owned by any given account; set out this way so that collections owned by",
                  " a single account can be enumerated."
                ]
              },
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 364
                  }
                },
                "default": "0x00",
                "docs": [" The items in existence and their ownership details."]
              },
              {
                "name": "ClassMetadataOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 365
                  }
                },
                "default": "0x00",
                "docs": [" Metadata of a collection."]
              },
              {
                "name": "InstanceMetadataOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 366
                  }
                },
                "default": "0x00",
                "docs": [" Metadata of an item."]
              },
              {
                "name": "Attribute",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 367,
                    "valueTypeId": 368
                  }
                },
                "default": "0x00",
                "docs": [" Attributes of a collection."]
              },
              {
                "name": "ItemPriceOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 369
                  }
                },
                "default": "0x00",
                "docs": [" Price of an asset instance."]
              },
              {
                "name": "CollectionMaxSupply",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" Keeps track of the number of items a collection might have."]
              }
            ]
          },
          "calls": 302,
          "event": 110,
          "constants": [
            {
              "name": "CollectionDeposit",
              "typeId": 6,
              "value": "0x00e87648170000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for collection."]
            },
            {
              "name": "ItemDeposit",
              "typeId": 6,
              "value": "0x00e1f505000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for an item."]
            },
            {
              "name": "MetadataDepositBase",
              "typeId": 6,
              "value": "0xa06afa77000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding metadata to your item."]
            },
            {
              "name": "AttributeDepositBase",
              "typeId": 6,
              "value": "0x00943577000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding an attribute to an item."]
            },
            {
              "name": "DepositPerByte",
              "typeId": 6,
              "value": "0xa0860100000000000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes store in metadata,",
                " either \"normal\" metadata or attribute metadata."
              ]
            },
            {
              "name": "StringLimit",
              "typeId": 4,
              "value": "0x80000000",
              "docs": [" The maximum length of data stored on-chain."]
            },
            {
              "name": "KeyLimit",
              "typeId": 4,
              "value": "0x20000000",
              "docs": [" The maximum length of an attribute key."]
            },
            {
              "name": "ValueLimit",
              "typeId": 4,
              "value": "0x40000000",
              "docs": [" The maximum length of an attribute value."]
            }
          ],
          "error": 370,
          "index": 51,
          "docs": []
        },
        {
          "name": "Nfts",
          "storage": {
            "prefix": "Nfts",
            "entries": [
              {
                "name": "Collection",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 371
                  }
                },
                "default": "0x00",
                "docs": [" Details of a collection."]
              },
              {
                "name": "OwnershipAcceptance",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 0,
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [" The collection, if any, of which an account is willing to take ownership."]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 362,
                    "valueTypeId": 103
                  }
                },
                "default": "0x00",
                "docs": [
                  " The items held by any given account; set out this way so that items owned by a single",
                  " account can be enumerated."
                ]
              },
              {
                "name": "CollectionAccount",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 363,
                    "valueTypeId": 103
                  }
                },
                "default": "0x00",
                "docs": [
                  " The collections owned by any given account; set out this way so that collections owned by",
                  " a single account can be enumerated."
                ]
              },
              {
                "name": "CollectionRoleOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 352,
                    "valueTypeId": 372
                  }
                },
                "default": "0x00",
                "docs": [
                  " The items in existence and their ownership details.",
                  " Stores collection roles as per account."
                ]
              },
              {
                "name": "Item",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 374
                  }
                },
                "default": "0x00",
                "docs": [" The items in existence and their ownership details."]
              },
              {
                "name": "CollectionMetadataOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 380
                  }
                },
                "default": "0x00",
                "docs": [" Metadata of a collection."]
              },
              {
                "name": "ItemMetadataOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 381
                  }
                },
                "default": "0x00",
                "docs": [" Metadata of an item."]
              },
              {
                "name": "Attribute",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 383,
                    "valueTypeId": 384
                  }
                },
                "default": "0x00",
                "docs": [" Attributes of a collection."]
              },
              {
                "name": "ItemPriceOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 369
                  }
                },
                "default": "0x00",
                "docs": [" A price of an item."]
              },
              {
                "name": "ItemAttributesApprovalsOf",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 386
                  }
                },
                "default": "0x00",
                "docs": [" Item attribute approvals."]
              },
              {
                "name": "NextCollectionId",
                "modifier": "Optional",
                "type": {
                  "tag": "Plain",
                  "value": {
                    "valueTypeId": 4
                  }
                },
                "default": "0x00",
                "docs": [
                  " Stores the `CollectionId` that is going to be used for the next collection.",
                  " This gets incremented whenever a new collection is created."
                ]
              },
              {
                "name": "PendingSwapOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 388
                  }
                },
                "default": "0x00",
                "docs": [" Handles all the pending swaps."]
              },
              {
                "name": "CollectionConfigOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 4,
                    "valueTypeId": 307
                  }
                },
                "default": "0x00",
                "docs": [" Config of a collection."]
              },
              {
                "name": "ItemConfigOf",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 127,
                    "valueTypeId": 317
                  }
                },
                "default": "0x00",
                "docs": [" Config of an item."]
              }
            ]
          },
          "calls": 306,
          "event": 116,
          "constants": [
            {
              "name": "CollectionDeposit",
              "typeId": 6,
              "value": "0x00e87648170000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for collection."]
            },
            {
              "name": "ItemDeposit",
              "typeId": 6,
              "value": "0x00e1f505000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for an item."]
            },
            {
              "name": "MetadataDepositBase",
              "typeId": 6,
              "value": "0xa06afa77000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding metadata to your item."]
            },
            {
              "name": "AttributeDepositBase",
              "typeId": 6,
              "value": "0x00943577000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding an attribute to an item."]
            },
            {
              "name": "DepositPerByte",
              "typeId": 6,
              "value": "0xa0860100000000000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes store in metadata,",
                " either \"normal\" metadata or attribute metadata."
              ]
            },
            {
              "name": "StringLimit",
              "typeId": 4,
              "value": "0x00010000",
              "docs": [" The maximum length of data stored on-chain."]
            },
            {
              "name": "KeyLimit",
              "typeId": 4,
              "value": "0x40000000",
              "docs": [" The maximum length of an attribute key."]
            },
            {
              "name": "ValueLimit",
              "typeId": 4,
              "value": "0x00010000",
              "docs": [" The maximum length of an attribute value."]
            },
            {
              "name": "ApprovalsLimit",
              "typeId": 4,
              "value": "0x14000000",
              "docs": [" The maximum approvals an item could have."]
            },
            {
              "name": "ItemAttributesApprovalsLimit",
              "typeId": 4,
              "value": "0x1e000000",
              "docs": [" The maximum attributes approvals an item could have."]
            },
            {
              "name": "MaxTips",
              "typeId": 4,
              "value": "0x0a000000",
              "docs": [" The max number of tips a user could send."]
            },
            {
              "name": "MaxDeadlineDuration",
              "typeId": 4,
              "value": "0x008d2700",
              "docs": [" The max duration in blocks for deadlines."]
            },
            {
              "name": "MaxAttributesPerCall",
              "typeId": 4,
              "value": "0x0a000000",
              "docs": [" The max number of attributes a user could set per call."]
            },
            {
              "name": "Features",
              "typeId": 389,
              "value": "0x0000000000000000",
              "docs": [" Disables some of pallet's features."]
            }
          ],
          "error": 391,
          "index": 52,
          "docs": []
        },
        {
          "name": "ForeignAssets",
          "storage": {
            "prefix": "ForeignAssets",
            "entries": [
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 45,
                    "valueTypeId": 350
                  }
                },
                "default": "0x00",
                "docs": [" Details of an asset."]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 392,
                    "valueTypeId": 353
                  }
                },
                "default": "0x00",
                "docs": [" The holdings of a specific account for a specific asset."]
              },
              {
                "name": "Approvals",
                "modifier": "Optional",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat", "blake2_128Concat", "blake2_128Concat"],
                    "keyTypeId": 393,
                    "valueTypeId": 357
                  }
                },
                "default": "0x00",
                "docs": [
                  " Approved balance transfers. First balance is the amount approved for transfer. Second",
                  " is the amount of `T::Currency` reserved for storing this.",
                  " First key is the asset ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "tag": "Map",
                  "value": {
                    "hashers": ["blake2_128Concat"],
                    "keyTypeId": 45,
                    "valueTypeId": 394
                  }
                },
                "default": "0x0000000000000000000000000000000000000000",
                "docs": [" Metadata of an asset."]
              }
            ]
          },
          "calls": 330,
          "event": 123,
          "constants": [
            {
              "name": "RemoveItemsLimit",
              "typeId": 4,
              "value": "0xe8030000",
              "docs": [
                " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
                "",
                " Must be configured to result in a weight that makes each call fit in a block."
              ]
            },
            {
              "name": "AssetDeposit",
              "typeId": 6,
              "value": "0x00e87648170000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved for an asset."]
            },
            {
              "name": "AssetAccountDeposit",
              "typeId": 6,
              "value": "0x00fe4d77000000000000000000000000",
              "docs": [
                " The amount of funds that must be reserved for a non-provider asset account to be",
                " maintained."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "typeId": 6,
              "value": "0x80569d77000000000000000000000000",
              "docs": [" The basic amount of funds that must be reserved when adding metadata to your asset."]
            },
            {
              "name": "MetadataDepositPerByte",
              "typeId": 6,
              "value": "0xa0860100000000000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes you store in your",
                " metadata."
              ]
            },
            {
              "name": "ApprovalDeposit",
              "typeId": 6,
              "value": "0x00e1f505000000000000000000000000",
              "docs": [" The amount of funds that must be reserved when creating a new approval."]
            },
            {
              "name": "StringLimit",
              "typeId": 4,
              "value": "0x32000000",
              "docs": [" The maximum length of a name or symbol stored on-chain."]
            }
          ],
          "error": 396,
          "index": 53,
          "docs": []
        }
      ],
      "extrinsic": {
        "version": 4,
        "addressTypeId": 204,
        "callTypeId": 296,
        "signatureTypeId": 323,
        "extraTypeId": 397,
        "signedExtensions": [
          {
            "ident": "CheckNonZeroSender",
            "typeId": 398,
            "additionalSigned": 103
          },
          {
            "ident": "CheckSpecVersion",
            "typeId": 399,
            "additionalSigned": 4
          },
          {
            "ident": "CheckTxVersion",
            "typeId": 400,
            "additionalSigned": 4
          },
          {
            "ident": "CheckGenesis",
            "typeId": 401,
            "additionalSigned": 12
          },
          {
            "ident": "CheckMortality",
            "typeId": 402,
            "additionalSigned": 12
          },
          {
            "ident": "CheckNonce",
            "typeId": 404,
            "additionalSigned": 103
          },
          {
            "ident": "CheckWeight",
            "typeId": 405,
            "additionalSigned": 103
          },
          {
            "ident": "ChargeAssetTxPayment",
            "typeId": 406,
            "additionalSigned": 103
          }
        ]
      },
      "runtimeType": 407,
      "apis": [
        {
          "name": "AuraApi",
          "methods": [
            {
              "name": "slot_duration",
              "inputs": [],
              "output": 408,
              "docs": [
                " Returns the slot duration for Aura.",
                "",
                " Currently, only the value provided by this type at genesis will be used."
              ]
            },
            {
              "name": "authorities",
              "inputs": [],
              "output": 224,
              "docs": [" Return the current set of authorities."]
            }
          ],
          "docs": [" API necessary for block authorship with aura."]
        },
        {
          "name": "Core",
          "methods": [
            {
              "name": "version",
              "inputs": [],
              "output": 141,
              "docs": [" Returns the version of the runtime."]
            },
            {
              "name": "execute_block",
              "inputs": [
                {
                  "name": "block",
                  "typeId": 409
                }
              ],
              "output": 103,
              "docs": [" Execute the given block."]
            },
            {
              "name": "initialize_block",
              "inputs": [
                {
                  "name": "header",
                  "typeId": 410
                }
              ],
              "output": 103,
              "docs": [" Initialize a block with the given header."]
            }
          ],
          "docs": [" The `Core` runtime api that every Substrate runtime needs to implement."]
        },
        {
          "name": "Metadata",
          "methods": [
            {
              "name": "metadata",
              "inputs": [],
              "output": 413,
              "docs": [" Returns the metadata of a runtime."]
            },
            {
              "name": "metadata_at_version",
              "inputs": [
                {
                  "name": "version",
                  "typeId": 4
                }
              ],
              "output": 414,
              "docs": [
                " Returns the metadata at a given version.",
                "",
                " If the given `version` isn't supported, this will return `None`.",
                " Use [`Self::metadata_versions`] to find out about supported metadata version of the runtime."
              ]
            },
            {
              "name": "metadata_versions",
              "inputs": [],
              "output": 112,
              "docs": [
                " Returns the supported metadata versions.",
                "",
                " This can be used to call `metadata_at_version`."
              ]
            }
          ],
          "docs": [" The `Metadata` api trait that returns metadata for the runtime."]
        },
        {
          "name": "BlockBuilder",
          "methods": [
            {
              "name": "apply_extrinsic",
              "inputs": [
                {
                  "name": "extrinsic",
                  "typeId": 411
                }
              ],
              "output": 415,
              "docs": [
                " Apply the given extrinsic.",
                "",
                " Returns an inclusion outcome which specifies if this extrinsic is included in",
                " this block or not."
              ]
            },
            {
              "name": "finalize_block",
              "inputs": [],
              "output": 410,
              "docs": [" Finish the current block."]
            },
            {
              "name": "inherent_extrinsics",
              "inputs": [
                {
                  "name": "inherent",
                  "typeId": 419
                }
              ],
              "output": 412,
              "docs": [" Generate inherent extrinsics. The inherent data will vary from chain to chain."]
            },
            {
              "name": "check_inherents",
              "inputs": [
                {
                  "name": "block",
                  "typeId": 409
                },
                {
                  "name": "data",
                  "typeId": 419
                }
              ],
              "output": 423,
              "docs": [" Check that the inherents are valid. The inherent data will vary from chain to chain."]
            }
          ],
          "docs": [" The `BlockBuilder` api trait that provides the required functionality for building a block."]
        },
        {
          "name": "TaggedTransactionQueue",
          "methods": [
            {
              "name": "validate_transaction",
              "inputs": [
                {
                  "name": "source",
                  "typeId": 424
                },
                {
                  "name": "tx",
                  "typeId": 411
                },
                {
                  "name": "block_hash",
                  "typeId": 12
                }
              ],
              "output": 425,
              "docs": [
                " Validate the transaction.",
                "",
                " This method is invoked by the transaction pool to learn details about given transaction.",
                " The implementation should make sure to verify the correctness of the transaction",
                " against current state. The given `block_hash` corresponds to the hash of the block",
                " that is used as current state.",
                "",
                " Note that this call may be performed by the pool multiple times and transactions",
                " might be verified in any possible order."
              ]
            }
          ],
          "docs": [" The `TaggedTransactionQueue` api trait for interfering with the transaction queue."]
        },
        {
          "name": "OffchainWorkerApi",
          "methods": [
            {
              "name": "offchain_worker",
              "inputs": [
                {
                  "name": "header",
                  "typeId": 410
                }
              ],
              "output": 103,
              "docs": [" Starts the off-chain task for given block header."]
            }
          ],
          "docs": [" The offchain worker api."]
        },
        {
          "name": "SessionKeys",
          "methods": [
            {
              "name": "generate_session_keys",
              "inputs": [
                {
                  "name": "seed",
                  "typeId": 257
                }
              ],
              "output": 13,
              "docs": [
                " Generate a set of session keys with optionally using the given seed.",
                " The keys should be stored within the keystore exposed via runtime",
                " externalities.",
                "",
                " The seed needs to be a valid `utf8` string.",
                "",
                " Returns the concatenated SCALE encoded public keys."
              ]
            },
            {
              "name": "decode_session_keys",
              "inputs": [
                {
                  "name": "encoded",
                  "typeId": 13
                }
              ],
              "output": 427,
              "docs": [
                " Decode the given public session keys.",
                "",
                " Returns the list of public raw public keys + key type."
              ]
            }
          ],
          "docs": [" Session keys runtime api."]
        },
        {
          "name": "AccountNonceApi",
          "methods": [
            {
              "name": "account_nonce",
              "inputs": [
                {
                  "name": "account",
                  "typeId": 0
                }
              ],
              "output": 4,
              "docs": [" Get current account nonce of given `AccountId`."]
            }
          ],
          "docs": [" The API to query account nonce."]
        },
        {
          "name": "TransactionPaymentApi",
          "methods": [
            {
              "name": "query_info",
              "inputs": [
                {
                  "name": "uxt",
                  "typeId": 411
                },
                {
                  "name": "len",
                  "typeId": 4
                }
              ],
              "output": 430,
              "docs": []
            },
            {
              "name": "query_fee_details",
              "inputs": [
                {
                  "name": "uxt",
                  "typeId": 411
                },
                {
                  "name": "len",
                  "typeId": 4
                }
              ],
              "output": 431,
              "docs": []
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "typeId": 9
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "typeId": 4
                }
              ],
              "output": 6,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "TransactionPaymentCallApi",
          "methods": [
            {
              "name": "query_call_info",
              "inputs": [
                {
                  "name": "call",
                  "typeId": 296
                },
                {
                  "name": "len",
                  "typeId": 4
                }
              ],
              "output": 430,
              "docs": [" Query information of a dispatch class, weight, and fee of a given encoded `Call`."]
            },
            {
              "name": "query_call_fee_details",
              "inputs": [
                {
                  "name": "call",
                  "typeId": 296
                },
                {
                  "name": "len",
                  "typeId": 4
                }
              ],
              "output": 431,
              "docs": [" Query fee details of a given encoded `Call`."]
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "typeId": 9
                }
              ],
              "output": 6,
              "docs": [" Query the output of the current `WeightToFee` given some input."]
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "typeId": 4
                }
              ],
              "output": 6,
              "docs": [" Query the output of the current `LengthToFee` given some input."]
            }
          ],
          "docs": []
        },
        {
          "name": "FungiblesApi",
          "methods": [
            {
              "name": "query_account_balances",
              "inputs": [
                {
                  "name": "account",
                  "typeId": 0
                }
              ],
              "output": 434,
              "docs": [" Returns the list of all [`MultiAsset`] that an `AccountId` has."]
            }
          ],
          "docs": [" The API for querying account's balances from runtime."]
        },
        {
          "name": "CollectCollationInfo",
          "methods": [
            {
              "name": "collect_collation_info",
              "inputs": [
                {
                  "name": "header",
                  "typeId": 410
                }
              ],
              "output": 436,
              "docs": [
                " Collect information about a collation.",
                "",
                " The given `header` is the header of the built block for that",
                " we are collecting the collation info for."
              ]
            }
          ],
          "docs": [" Runtime api to collect information about a collation."]
        },
        {
          "name": "GenesisBuilder",
          "methods": [
            {
              "name": "create_default_config",
              "inputs": [],
              "output": 13,
              "docs": [
                " Creates the default `GenesisConfig` and returns it as a JSON blob.",
                "",
                " This function instantiates the default `GenesisConfig` struct for the runtime and serializes it into a JSON",
                " blob. It returns a `Vec<u8>` containing the JSON representation of the default `GenesisConfig`."
              ]
            },
            {
              "name": "build_config",
              "inputs": [
                {
                  "name": "json",
                  "typeId": 13
                }
              ],
              "output": 439,
              "docs": [
                " Build `GenesisConfig` from a JSON blob not using any defaults and store it in the storage.",
                "",
                " This function deserializes the full `GenesisConfig` from the given JSON blob and puts it into the storage.",
                " If the provided JSON blob is incorrect or incomplete or the deserialization fails, an error is returned.",
                " It is recommended to log any errors encountered during the process.",
                "",
                " Please note that provided json blob must contain all `GenesisConfig` fields, no defaults will be used."
              ]
            }
          ],
          "docs": [" API to interact with GenesisConfig for the runtime"]
        }
      ],
      "outerEnums": {
        "callEnumTypeId": 296,
        "eventEnumTypeId": 20,
        "errorEnumTypeId": 440
      },
      "custom": {
        "map": {}
      }
    }
  }
}
