// Generated by @delightfuldot/codegen

import type { GenericRuntimeCalls, GenericRuntimeCall } from '@delightfuldot/types';
import type {
  RuntimeVersion,
  Block,
  Header,
  Option,
  OpaqueMetadata,
  Nonce,
  AccountId32Like,
  RuntimeDispatchInfo,
  Bytes,
  FeeDetails,
  Balance,
  Weight,
} from '@delightfuldot/codecs';

export interface RuntimeCalls extends GenericRuntimeCalls {
  /**
   * @runtimeapi: Core - 0xdf6acb689907609b
   * @version: 4
   **/
  core: {
    /**
     * Returns the version of the runtime.
     *
     * @callname: Core_version
     **/
    version: GenericRuntimeCall<() => Promise<RuntimeVersion>>;

    /**
     * Execute the given block.
     *
     * @callname: Core_execute_block
     **/
    executeBlock: GenericRuntimeCall<(block: Block) => Promise<null>>;

    /**
     * Initialize a block with the given header.
     *
     * @callname: Core_initialize_block
     **/
    initializeBlock: GenericRuntimeCall<(header: Header) => Promise<null>>;

    /**
     * Generic runtime call
     **/
    [method: string]: GenericRuntimeCall;
  };
  /**
   * @runtimeapi: Metadata - 0x37e397fc7c91f5e4
   * @version: 2
   **/
  metadata: {
    /**
     * Returns the metadata at a given version.
     *
     * @callname: Metadata_metadata_at_version
     **/
    metadataAtVersion: GenericRuntimeCall<(version: number) => Promise<Option<OpaqueMetadata>>>;

    /**
     * Returns the supported metadata versions.
     *
     * @callname: Metadata_metadata_versions
     **/
    metadataVersions: GenericRuntimeCall<() => Promise<Array<number>>>;

    /**
     * Returns the metadata of a runtime.
     *
     * @callname: Metadata_metadata
     **/
    metadata: GenericRuntimeCall<() => Promise<OpaqueMetadata>>;

    /**
     * Generic runtime call
     **/
    [method: string]: GenericRuntimeCall;
  };
  /**
   * @runtimeapi: AccountNonceApi - 0xbc9d89904f5b923f
   * @version: 1
   **/
  accountNonceApi: {
    /**
     * The API to query account nonce (aka transaction index)
     *
     * @callname: AccountNonceApi_account_nonce
     **/
    accountNonce: GenericRuntimeCall<(accountId: AccountId32Like) => Promise<Nonce>>;

    /**
     * Generic runtime call
     **/
    [method: string]: GenericRuntimeCall;
  };
  /**
   * @runtimeapi: TransactionPaymentApi - 0x37c8bb1350a9a2a8
   * @version: 4
   **/
  transactionPaymentApi: {
    /**
     * The transaction info
     *
     * @callname: TransactionPaymentApi_query_info
     **/
    queryInfo: GenericRuntimeCall<(uxt: Bytes, len: number) => Promise<RuntimeDispatchInfo>>;

    /**
     * The transaction fee details
     *
     * @callname: TransactionPaymentApi_query_fee_details
     **/
    queryFeeDetails: GenericRuntimeCall<(uxt: Bytes, len: number) => Promise<FeeDetails>>;

    /**
     * Query the output of the current LengthToFee given some input
     *
     * @callname: TransactionPaymentApi_query_length_to_fee
     **/
    queryLengthToFee: GenericRuntimeCall<(length: number) => Promise<Balance>>;

    /**
     * Query the output of the current WeightToFee given some input
     *
     * @callname: TransactionPaymentApi_query_weight_to_fee
     **/
    queryWeightToFee: GenericRuntimeCall<(weight: Weight) => Promise<Balance>>;

    /**
     * Generic runtime call
     **/
    [method: string]: GenericRuntimeCall;
  };
}
