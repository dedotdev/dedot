// Generated by @dedot/codegen

import type { GenericSubstrateApi } from "dedot/types";
import type { Result } from "dedot/codecs";
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractResult,
} from "dedot/contracts";
import type { InkPrimitivesLangError } from "./types";

export interface ContractQuery<ChainApi extends GenericSubstrateApi>
  extends GenericContractQuery<ChainApi> {
  /**
   * Flips the current value of the Flipper's boolean.
   *
   *
   * @selector {0x633aa551}
   **/
  flip: GenericContractQueryCall<
    ChainApi,
    (
      options: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], InkPrimitivesLangError>,
        ContractResult<ChainApi>
      >
    >
  >;

  /**
   * Returns the current value of the Flipper's boolean.
   *
   *
   * @selector {0x2f865bd9}
   **/
  get: GenericContractQueryCall<
    ChainApi,
    (
      options: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<boolean, InkPrimitivesLangError>,
        ContractResult<ChainApi>
      >
    >
  >;
}
